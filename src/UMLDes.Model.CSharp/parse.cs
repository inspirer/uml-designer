// parse.cs

//#define DEBUG_syntax

using System;
using System.Collections;
using System.IO;

using UMLDes.CSharp.Nodes;

namespace UMLDes.CSharp {

  public class parser {
	
	// 14.6.6 Cast expressions =======
	// To resolve cast-expression ambiguities, the following rule exists: A sequence of one or
	// more tokens (§9.4) enclosed in parentheses is considered the start of a cast-expression only
	// if at least one of the following are true:
	//	• The sequence of tokens is correct grammar for a type, but not for an expression.
	//  • The sequence of tokens is correct grammar for a type, and the token immediately following
	//	  the closing parentheses is the token “~”, the token “!”, the token “(”, an identifier (§9.4.1),
	//	  a literal (§9.4.4), or any keyword (§9.4.3) except as and is.
	
	private static bool CastExpr( ExprNode expr, lapg_symbol next ) {
	
		// check if expression can be type
		if( !Util.CanBeType( expr ) )
			return false;
	
		// if expression is only type (contains dim_specifier)
		if( Util.ContainsDimSpec( expr ) )
			return true;	
	
		// Type or Expr
		switch( (Tokens)next.lexem ) {
			case Tokens.TILDE:
			case Tokens.EXCL:
			case Tokens.LROUNDBRACKET:
			case Tokens.identifier:
			case Tokens.Licon:
			case Tokens.Lfcon:
			case Tokens.Lscon:
			case Tokens.Lccon:
			case Tokens.Lfalse:
			case Tokens.Ltrue:
			case Tokens.Lnull:
				return true;
			case Tokens.Lis:
			case Tokens.Las:
				return false;
		}
	
		// keyword
		if( next.lexem >= (int)Tokens.Labstract && next.lexem <= (int)Tokens.Lwhile )
			return true;
	
		return false;
	}
	
	NamespaceDecl rootns;
	byte[] buff;
	int l;
	ArrayList errors = new ArrayList();
	
	void error( string s ) {
		errors.Add( s );
	}
	
	static byte[] hex = { 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102 };
	
	// escapes all non-ascii127 characters
	private static void string_to_byte_arr( string text, out byte[] dest ) {
		int i, e, len = text.Length, l = len;
		char[] list = new char[len+1];
		text.CopyTo( 0, list, 0, len );
		for( i = 0; i < len; i++ )
			if( (int)list[i] >= 0x80 )
				l += 5;
		dest = new byte[l+1];
		for( i = e = 0; i < len; i++ ) {
			int q = (int)list[i];
	
			if( q >= 0x80 ) {
				dest[e++] = 92; dest[e++] = 117;		// \u
				dest[e++] = hex[q>>12];
				dest[e++] = hex[(q>>8)&15];
				dest[e++] = hex[(q>>4)&15];
				dest[e++] = hex[q&15];
			} else 
				dest[e++] = (byte)q;
		}
		//System.Diagnostics.Debug.Assert( e == l );
		dest[l] = 0;
	}
	
	internal static NamespaceDecl parse( string text, out ArrayList errors ) {
		parser p = new parser();
		string_to_byte_arr( text, out p.buff );
		p.l = 0;
		p.parse();
		
		errors = p.errors;
		return ( p.errors.Count != 0 ) ? null : p.rootns;
	}

	public struct lapg_place {
		public int line, offset;
	};

	public struct lapg_symbol {
		public object sym;
		public int  lexem, state;
		public lapg_place pos;
		public lapg_place endpos;
	};

	static readonly short[] lapg_char2no = new short[] {
		   0,   1,   1,   1,   1,   1,   1,   1,   1,   2,   3,   1,   1,   4,   1,   1,
		   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
		   5,   6,   7,   8,   1,   9,  10,  11,  12,  13,  14,  15,  16,  17,  18,  19,
		  20,  21,  22,  23,  24,  25,  26,  27,  28,  29,  30,  31,  32,  33,  34,  35,
		  36,  37,  38,  39,  40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,
		  52,  53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,  65,  66,  67,
		   1,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,  78,  79,  80,  81,  82,
		  83,  84,  85,  86,  87,  88,  89,  90,  91,  92,  93,  94,  95,  96,  97,   1,
		   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
		   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
		   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
		   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
		   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
		   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
		   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
		   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
	};

	static readonly short[,] lapg_lexem = new short[436,98] {
		{  -2,  -1,   2,   2,   2,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,  14,  15,  16,  17,  18,  18,  18,  18,  18,  18,  18,  18,  18,  19,  20,  21,  22,  23,  24,  25,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  27,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  28,  -1,  29,  30,  26,  31,  32,  33,  34,  35,  36,  37,  26,  38,  26,  26,  39,  26,  40,  41,  42,  26,  43,  44,  45,  46,  47,  48,  26,  26,  26,  49,  50,  51,  52, },
		{  -1,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  54,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53, },
		{-132,-132,   2,   2,   2,   2,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132,-132, },
		{-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,  55,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103,-103, },
		{  -1,   4,   4,   4,   4,   4,   4,  56,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,  57,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4, },
		{-132,   5,   5,-132,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5,   5, },
		{ -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99,  58, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, -99, },
		{-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,  59,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,  60,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100,-100, },
		{  -1,  61,  61,  -1,  61,  61,  61,  61,  61,  61,  61,  -1,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  62,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61, },
		{ -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, -89, },
		{ -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, -90, },
		{ -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97,  63, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, -97, },
		{ -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95,  64, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95,  65, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, -95, },
		{ -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, -92, },
		{ -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96,  66, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96,  67,  68, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, -96, },
		{ -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91,  69,  69,  69,  69,  69,  69,  69,  69,  69,  69, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, -91, },
		{ -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98,  70, -98, -98, -98, -98,  71, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98,  72, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, -98, },
		{  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  69,  -4,  73,  73,  73,  73,  73,  73,  73,  73,  74,  74,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  75,  76,  -4,  -4,  -4,  -4,  -4,  77,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  78,  -4,  -4,  79,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  75,  76,  -4,  -4,  -4,  -4,  -4,  80,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  78,  -4,  -4,  79,  -4,  -4,  -4,  -4,  -4,  -4, },
		{  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  69,  -4,  18,  18,  18,  18,  18,  18,  18,  18,  18,  18,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  75,  76,  -4,  -4,  -4,  -4,  -4,  77,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  78,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  75,  76,  -4,  -4,  -4,  -4,  -4,  80,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  78,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4, },
		{ -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, -93, },
		{ -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, -94, },
		{-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,  81,  82,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106,-106, },
		{-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,  83,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105,-105, },
		{-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,  84,  85,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107,-107, },
		{-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108,-108, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  86,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -1,  -1,  -1,  -1,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -1,  -1,  -1,  -1, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,   4,  -3,  -3,  -3,   8,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, -87, },
		{ -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, -88, },
		{-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,  87,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102,-102, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  88,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  89,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  90,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  91,  26,  26,  92,  26,  26,  26,  26,  26,  26,  93,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  94,  26,  26,  26,  26,  26,  26,  95,  26,  26,  26,  96,  26,  26,  97,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  98,  26,  26,  26,  26,  26,  26,  26,  26,  26,  99,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 100,  26, 101,  26,  26,  26,  26,  26,  26,  26, 102,  26, 103,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26, 104,  26,  26,  26,  26,  26,  26,  26, 105,  26,  26, 106,  26,  26, 107,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 108,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26, 109,  26,  26,  26,  26,  26,  26, 110, 111,  26,  26,  26,  26, 112,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 113,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26, 114,  26,  26,  26, 115,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 116,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26, 117,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 118,  26,  26,  26,  26, 119, 120,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26, 121,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 122,  26,  26, 123,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 124,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26, 125,  26,  26, 126,  26,  26, 127, 128,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 129,  26,  26, 130,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26, 131,  26,  26,  26,  26,  26,  26,  26,  26,  26, 132,  26,  26,  26,  26,  26,  26, 133,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26, 134,  26,  26, 135,  26, 136,  26,  26,  26,  26, 137,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26, 138,  26,  26,  26,  26,  26, 139,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26, 140,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, -85, },
		{-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101, 141,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101,-101, 142,-101,-101, },
		{ -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, -86, },
		{-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104, },
		{-134,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,-134,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53,  53, },
		{-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134, 143,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134, },
		{-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116, },
		{  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,   4,  -1,  -1,  -1,   4,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 144, 144, 144, 144, 144, 144, 144, 144,  -1,  -1,  -1,  -1,  -1,  -1,  -1,   4,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,   4,  -1,  -1,  -1,   4,   4,  -1,  -1,  -1,   4,  -1,  -1,  -1,  -1,  -1,  -1,  -1,   4,  -1,  -1,  -1,   4,  -1,   4,  -1,   4,  -1, 145,  -1,  -1,  -1,  -1,  -1,  -1, },
		{-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123,-123, },
		{-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111,-111, },
		{-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124,-124, },
		{  -1,  61,  61,  -1,  61,  61,  61,  61,  61,  61,  61, 146,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  62,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  61,  -1,  -1,  -1,  61,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 147, 147, 147, 147, 147, 147, 147, 147,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  61,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  61,  -1,  -1,  -1,  61,  61,  -1,  -1,  -1,  61,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  61,  -1,  -1,  -1,  61,  -1,  61,  -1,  61,  -1, 148,  -1,  -1,  -1,  -1,  -1,  -1, },
		{-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121,-121, },
		{-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109,-109, },
		{-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119, },
		{-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110, },
		{-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120,-120, },
		{-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129,-129, },
		{  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  69,  69,  69,  69,  69,  69,  69,  69,  69,  69,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5, 149, 150,  -5,  -5,  -5,  -5,  -5, 150,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5, 149, 150,  -5,  -5,  -5,  -5,  -5, 150,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5, },
		{-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133,-133, },
		{-132, 151, 151,-132,-132, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 152, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, },
		{-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122,-122, },
		{  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  69,  -4,  73,  73,  73,  73,  73,  73,  73,  73,  74,  74,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  75,  76,  -4,  -4,  -4,  -4,  -4,  77,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  78,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  75,  76,  -4,  -4,  -4,  -4,  -4,  80,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  78,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  69,  -1,  74,  74,  74,  74,  74,  74,  74,  74,  74,  74,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  75,  76,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  75,  76,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 153,  -1, 153,  -1,  -1, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5, },
		{  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4, 155,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4, 156,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4, 156,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4, },
		{  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4, 157,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4, 158,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 159,  -1, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 160, 160, 160, 160, 160, 160,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 160, 160, 160, 160, 160, 160,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4, 156,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4, 155,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4, 156,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4, },
		{-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113, 161,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113,-113, },
		{-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117,-117, },
		{-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115,-115, },
		{-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118, },
		{-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114, 162,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114,-114, },
		{  -1,  86,  86,  86,  86,  86,  86, 163,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86, },
		{-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126,-126, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 164,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -9,  -9,  -9,  -9,  -9,  -9,  -9,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -9,  -9,  -9,  -9,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -9,  -9,  -9,  -9, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 165,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 166,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 167,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 168,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 169, 170,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26, 171,  26,  26,  26, 172,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26, 173,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 174,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26, 175,  26,  26, 176,  26,  26,  26,  26,  26, 177,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24, -24,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -24, -24, -24, -24, -24, -24, -24,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -24, -24, -24, -24,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 178,  26,  26,  26,  26,  26, -24, -24, -24, -24, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 179,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 180,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 181,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 182,  26,  26,  26, 183,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 184,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 185,  26,  26,  26,  26,  26,  26,  26,  26,  26, 186,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 187,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 188,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 189,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38, -38,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -38, -38, -38, -38, -38, -38, -38,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -38, -38, -38, -38,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -38, -38, -38, -38, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 190,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40, -40,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -40, -40, -40, -40, -40, -40, -40,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -40, -40, -40, -40,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 191,  26,  26,  26,  26,  26,  26, -40, -40, -40, -40, },
		{ -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44, -44,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -44, -44, -44, -44, -44, -44, -44,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -44, -44, -44, -44,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -44, -44, -44, -44, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26, 192,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 193,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 194,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 195,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 196,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 197,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 198,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 199,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 200,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 201,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26, 202,  26,  26,  26,  26,  26, 203,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26, 204,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26, 205,  26,  26,  26,  26, 206,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 207,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 208,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26, 209,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 210,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 211,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26, 212,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 213,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26, 214,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26, 215,  26,  26,  26,  26,  26,  26,  26,  26, 216,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 217,  26,  26,  26, 218,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 219,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 220,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 221,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26, 222,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 223,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26, 224, 225,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 226,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26, 227,  26,  26, 228,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26, 229,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125, },
		{-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112,-112, },
		{-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135,-135, },
		{  -1,   4,   4,   4,   4,   4,   4,  56,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4, 230, 230, 230, 230, 230, 230, 230, 230,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,  57,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 231, 231, 231, 231, 231, 231, 231, 231, 231, 231,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 231, 231, 231, 231, 231, 231,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 231, 231, 231, 231, 231, 231,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7,  -7, },
		{  -1,  61,  61,  -1,  61,  61,  61,  61,  61,  61,  61, 146,  61,  61,  61,  61,  61,  61,  61,  61, 232, 232, 232, 232, 232, 232, 232, 232,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  62,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 233, 233, 233, 233, 233, 233, 233, 233, 233, 233,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 233, 233, 233, 233, 233, 233,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 233, 233, 233, 233, 233, 233,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 234,  -1, 234,  -1,  -1, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5, },
		{-132, 151, 151,-132, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, },
		{-131, 152, 152,-131, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, 152, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5, 154, 154, 154, 154, 154, 154, 154, 154, 154, 154,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  76,  -5,  -5,  -5,  -5,  -5,  76,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  76,  -5,  -5,  -5,  -5,  -5,  76,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5, },
		{  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4, 156,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4, 156,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4, },
		{  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4, },
		{  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4, 156,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4, },
		{  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4, 156,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 236, 236, 236, 236, 236, 236,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 236, 236, 236, 236, 236, 236,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4, 236,  -4, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160,  -4,  -4,  -4,  -4,  -4,  -4,  -4, 160, 160, 160, 160, 160, 160,  -4,  -4,  -4,  -4,  -4,  77,  -4,  -4,  -4, 237,  -4,  -4,  -4,  -4,  78,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4, 160, 160, 160, 160, 160, 160,  -4,  -4,  -4,  -4,  -4,  80,  -4,  -4,  -4, 237,  -4,  -4,  -4,  -4,  78,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4,  -4, },
		{-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127,-127, },
		{-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128,-128, },
		{  -6,  -6,  -6,  -6,  -6,  -6,  -6,  86,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6,  -6, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 238,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 239,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 240,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26, 241,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 242,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 243,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26, 244,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 245,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26, 246,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 247,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 248, 249,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26, 250,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26, 251,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 252,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26, 253,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 254,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 255,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 256,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 257,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 258,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 259,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26, 260,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 261,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26, 262,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35, -35,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -35, -35, -35, -35, -35, -35, -35,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -35, -35, -35, -35,  26,  26,  26,  26,  26, 263,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -35, -35, -35, -35, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 264,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 265,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41, -41,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -41, -41, -41, -41, -41, -41, -41,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -41, -41, -41, -41,  26,  26,  26,  26,  26, 266,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -41, -41, -41, -41, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 267,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26, 268,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 269,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48, -48,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -48, -48, -48, -48, -48, -48, -48,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -48, -48, -48, -48,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -48, -48, -48, -48, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 270,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 271,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 272,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -52, -52, -52, -52, -52, -52, -52, -52, -52, -52, -52, -52, -52, -52, -52, -52, -52, -52, -52, -52,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -52, -52, -52, -52, -52, -52, -52,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -52, -52, -52, -52,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -52, -52, -52, -52, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 273,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26, 274,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 275,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 276,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 277,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26, 278,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -59, -59, -59, -59, -59, -59, -59, -59, -59, -59, -59, -59, -59, -59, -59, -59, -59, -59, -59, -59,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -59, -59, -59, -59, -59, -59, -59,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -59, -59, -59, -59,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -59, -59, -59, -59, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 279,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 280,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 281,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 282,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 283,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26, 284,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 285,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26, 286,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 287,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 288,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 289,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 290,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 291,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -73, -73, -73, -73, -73, -73, -73, -73, -73, -73, -73, -73, -73, -73, -73, -73, -73, -73, -73, -73,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -73, -73, -73, -73, -73, -73, -73,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -73, -73, -73, -73,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -73, -73, -73, -73, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 292,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 293,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 294,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26, 295,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26, 296,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 297,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 298,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 299,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26, 300,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26, 301,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 302,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -1,   4,   4,   4,   4,   4,   4,  56,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,  57,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4, },
		{  -1,   4,   4,   4,   4,   4,   4,  56,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4, 231, 231, 231, 231, 231, 231, 231, 231, 231, 231,   4,   4,   4,   4,   4,   4,   4, 231, 231, 231, 231, 231, 231,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,  57,   4,   4,   4, 231, 231, 231, 231, 231, 231,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4,   4, },
		{  -1,  61,  61,  -1,  61,  61,  61,  61,  61,  61,  61, 146,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  62,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61, },
		{  -1,  61,  61,  -1,  61,  61,  61,  61,  61,  61,  61, 146,  61,  61,  61,  61,  61,  61,  61,  61, 233, 233, 233, 233, 233, 233, 233, 233, 233, 233,  61,  61,  61,  61,  61,  61,  61, 233, 233, 233, 233, 233, 233,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  62,  61,  61,  61, 233, 233, 233, 233, 233, 233,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61,  61, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5, 235, 235, 235, 235, 235, 235, 235, 235, 235, 235,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5, 150,  -5,  -5,  -5,  -5,  -5, 150,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5, 150,  -5,  -5,  -5,  -5,  -5, 150,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 236, 236, 236, 236, 236, 236, 236, 236, 236, 236,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 236, 236, 236, 236, 236, 236,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 237,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 236, 236, 236, 236, 236, 236,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 237,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 303,  -1, 303,  -1,  -1, 304, 304, 304, 304, 304, 304, 304, 304, 304, 304,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 305,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -10, -10, -10, -10, -10, -10, -10,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -10, -10, -10, -10,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -10, -10, -10, -10, },
		{ -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11, -11,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -11, -11, -11, -11, -11, -11, -11,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -11, -11, -11, -11,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -11, -11, -11, -11, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 306,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13, -13,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -13, -13, -13, -13, -13, -13, -13,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -13, -13, -13, -13,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -13, -13, -13, -13, },
		{ -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14, -14,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -14, -14, -14, -14, -14, -14, -14,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -14, -14, -14, -14,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -14, -14, -14, -14, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26, 307,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16, -16,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -16, -16, -16, -16, -16, -16, -16,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -16, -16, -16, -16,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -16, -16, -16, -16, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 308,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 309,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 310,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26, 311,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 312,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 313,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26, 314,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 315,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -26, -26, -26, -26, -26, -26, -26, -26, -26, -26, -26, -26, -26, -26, -26, -26, -26, -26, -26, -26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -26, -26, -26, -26, -26, -26, -26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -26, -26, -26, -26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -26, -26, -26, -26, },
		{ -27, -27, -27, -27, -27, -27, -27, -27, -27, -27, -27, -27, -27, -27, -27, -27, -27, -27, -27, -27,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -27, -27, -27, -27, -27, -27, -27,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -27, -27, -27, -27,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -27, -27, -27, -27, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 316,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26, 317,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 318,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 319,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 320,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26, 321,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 322,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26, 323,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37, -37,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -37, -37, -37, -37, -37, -37, -37,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -37, -37, -37, -37,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -37, -37, -37, -37, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26, 324,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 325,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45, -45,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -45, -45, -45, -45, -45, -45, -45,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -45, -45, -45, -45,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -45, -45, -45, -45, },
		{ -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46, -46,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -46, -46, -46, -46, -46, -46, -46,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -46, -46, -46, -46,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -46, -46, -46, -46, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 326,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49, -49,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -49, -49, -49, -49, -49, -49, -49,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -49, -49, -49, -49,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -49, -49, -49, -49, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26, 327,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26, 328,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 329,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 330,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26, 331,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 332,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26, 333,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 334,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 335,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 336,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 337,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 338,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 339,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 340,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26, 341,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 342,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26, 343,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26, 344,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -70, -70, -70, -70, -70, -70, -70, -70, -70, -70, -70, -70, -70, -70, -70, -70, -70, -70, -70, -70,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -70, -70, -70, -70, -70, -70, -70,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -70, -70, -70, -70,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -70, -70, -70, -70, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 345,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72, -72,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -72, -72, -72, -72, -72, -72, -72,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -72, -72, -72, -72,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -72, -72, -72, -72, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 346,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -75, -75, -75, -75, -75, -75, -75, -75, -75, -75, -75, -75, -75, -75, -75, -75, -75, -75, -75, -75,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -75, -75, -75, -75, -75, -75, -75,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -75, -75, -75, -75,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -75, -75, -75, -75, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26, 347,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 348,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26, 349,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 350,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26, 351,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 352,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -82, -82, -82, -82, -82, -82, -82,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -82, -82, -82, -82,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -82, -82, -82, -82, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 353,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 354,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, 304, 304, 304, 304, 304, 304, 304, 304, 304, 304,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, },
		{  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5, 304, 304, 304, 304, 304, 304, 304, 304, 304, 304,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5, 355,  -5,  -5,  -5,  -5,  -5, 355,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5, 355,  -5,  -5,  -5,  -5,  -5, 355,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26, 356,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12, -12,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -12, -12, -12, -12, -12, -12, -12,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -12, -12, -12, -12,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -12, -12, -12, -12, },
		{ -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15, -15,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -15, -15, -15, -15, -15, -15, -15,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -15, -15, -15, -15,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -15, -15, -15, -15, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 357,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18, -18,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -18, -18, -18, -18, -18, -18, -18,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -18, -18, -18, -18,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -18, -18, -18, -18, },
		{ -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19, -19,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -19, -19, -19, -19, -19, -19, -19,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -19, -19, -19, -19,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -19, -19, -19, -19, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 358,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26, 359,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 360,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26, 361,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 362,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28, -28,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -28, -28, -28, -28, -28, -28, -28,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -28, -28, -28, -28,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -28, -28, -28, -28, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26, 363,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 364,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31, -31,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -31, -31, -31, -31, -31, -31, -31,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -31, -31, -31, -31,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -31, -31, -31, -31, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 365,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33, -33,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -33, -33, -33, -33, -33, -33, -33,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -33, -33, -33, -33,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -33, -33, -33, -33, },
		{ -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34, -34,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -34, -34, -34, -34, -34, -34, -34,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -34, -34, -34, -34,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -34, -34, -34, -34, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26, 366,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26, 367,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26, 368,  26,  26,  26,  26,  26,  26,  26, 369,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 370,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 371,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 372,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26, 373,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 374,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 375,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26, 376,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26, 377,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 378,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 379,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -61, -61, -61, -61, -61, -61, -61, -61, -61, -61, -61, -61, -61, -61, -61, -61, -61, -61, -61, -61,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -61, -61, -61, -61, -61, -61, -61,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -61, -61, -61, -61,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -61, -61, -61, -61, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26, 380,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -63, -63, -63, -63, -63, -63, -63, -63, -63, -63, -63, -63, -63, -63, -63, -63, -63, -63, -63, -63,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -63, -63, -63, -63, -63, -63, -63,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -63, -63, -63, -63,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -63, -63, -63, -63, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26, 381,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26, 382,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26, 383,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26, 384,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 385,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26, 386,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -71, -71, -71, -71, -71, -71, -71, -71, -71, -71, -71, -71, -71, -71, -71, -71, -71, -71, -71, -71,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -71, -71, -71, -71, -71, -71, -71,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -71, -71, -71, -71,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -71, -71, -71, -71, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26, 387,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -76, -76, -76, -76, -76, -76, -76, -76, -76, -76, -76, -76, -76, -76, -76, -76, -76, -76, -76, -76,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -76, -76, -76, -76, -76, -76, -76,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -76, -76, -76, -76,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -76, -76, -76, -76, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26, 388,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 389,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 390,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80, -80,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -80, -80, -80, -80, -80, -80, -80,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -80, -80, -80, -80,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -80, -80, -80, -80, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26, 391,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26, 392,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -84, -84, -84, -84, -84, -84, -84, -84, -84, -84, -84, -84, -84, -84, -84, -84, -84, -84, -84, -84,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -84, -84, -84, -84, -84, -84, -84,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -84, -84, -84, -84,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -84, -84, -84, -84, },
		{  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5,  -5, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26, 393,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26, 394,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 395,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 396,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 397,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 398,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -25, -25, -25, -25, -25, -25, -25, -25, -25, -25, -25, -25, -25, -25, -25, -25, -25, -25, -25, -25,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -25, -25, -25, -25, -25, -25, -25,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -25, -25, -25, -25,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -25, -25, -25, -25, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26, 399,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30, -30,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -30, -30, -30, -30, -30, -30, -30,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -30, -30, -30, -30,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -30, -30, -30, -30, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 400,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26, 401,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26, 402,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26, 403,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26, 404,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26, 405,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50, -50,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -50, -50, -50, -50, -50, -50, -50,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -50, -50, -50, -50,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -50, -50, -50, -50, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 406,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26, 407,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -54, -54, -54, -54, -54, -54, -54, -54, -54, -54, -54, -54, -54, -54, -54, -54, -54, -54, -54, -54,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -54, -54, -54, -54, -54, -54, -54,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -54, -54, -54, -54,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -54, -54, -54, -54, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 408,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 409,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -57, -57, -57, -57, -57, -57, -57, -57, -57, -57, -57, -57, -57, -57, -57, -57, -57, -57, -57, -57,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -57, -57, -57, -57, -57, -57, -57,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -57, -57, -57, -57,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -57, -57, -57, -57, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 410,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -60, -60, -60, -60, -60, -60, -60, -60, -60, -60, -60, -60, -60, -60, -60, -60, -60, -60, -60, -60,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -60, -60, -60, -60, -60, -60, -60,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -60, -60, -60, -60,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -60, -60, -60, -60, },
		{ -62, -62, -62, -62, -62, -62, -62, -62, -62, -62, -62, -62, -62, -62, -62, -62, -62, -62, -62, -62,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -62, -62, -62, -62, -62, -62, -62,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -62, -62, -62, -62,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -62, -62, -62, -62, },
		{ -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64, -64,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -64, -64, -64, -64, -64, -64, -64,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -64, -64, -64, -64,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -64, -64, -64, -64, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 411,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -66, -66, -66, -66, -66, -66, -66, -66, -66, -66, -66, -66, -66, -66, -66, -66, -66, -66, -66, -66,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -66, -66, -66, -66, -66, -66, -66,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -66, -66, -66, -66,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -66, -66, -66, -66, },
		{ -67, -67, -67, -67, -67, -67, -67, -67, -67, -67, -67, -67, -67, -67, -67, -67, -67, -67, -67, -67,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -67, -67, -67, -67, -67, -67, -67,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -67, -67, -67, -67,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -67, -67, -67, -67, },
		{ -68, -68, -68, -68, -68, -68, -68, -68, -68, -68, -68, -68, -68, -68, -68, -68, -68, -68, -68, -68,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -68, -68, -68, -68, -68, -68, -68,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -68, -68, -68, -68,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -68, -68, -68, -68, },
		{ -69, -69, -69, -69, -69, -69, -69, -69, -69, -69, -69, -69, -69, -69, -69, -69, -69, -69, -69, -69,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -69, -69, -69, -69, -69, -69, -69,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -69, -69, -69, -69,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -69, -69, -69, -69, },
		{ -74, -74, -74, -74, -74, -74, -74, -74, -74, -74, -74, -74, -74, -74, -74, -74, -74, -74, -74, -74,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -74, -74, -74, -74, -74, -74, -74,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -74, -74, -74, -74,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -74, -74, -74, -74, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 412,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -78, -78, -78, -78, -78, -78, -78, -78, -78, -78, -78, -78, -78, -78, -78, -78, -78, -78, -78, -78,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -78, -78, -78, -78, -78, -78, -78,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -78, -78, -78, -78,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -78, -78, -78, -78, },
		{ -79, -79, -79, -79, -79, -79, -79, -79, -79, -79, -79, -79, -79, -79, -79, -79, -79, -79, -79, -79,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -79, -79, -79, -79, -79, -79, -79,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -79, -79, -79, -79,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -79, -79, -79, -79, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 413,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 414,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 415,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17, -17,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -17, -17, -17, -17, -17, -17, -17,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -17, -17, -17, -17,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -17, -17, -17, -17, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 416,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21, -21,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -21, -21, -21, -21, -21, -21, -21,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -21, -21, -21, -21,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -21, -21, -21, -21, },
		{ -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22, -22,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -22, -22, -22, -22, -22, -22, -22,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -22, -22, -22, -22,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -22, -22, -22, -22, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 417,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 418,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32, -32,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -32, -32, -32, -32, -32, -32, -32,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -32, -32, -32, -32,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -32, -32, -32, -32, },
		{ -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36, -36,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -36, -36, -36, -36, -36, -36, -36,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -36, -36, -36, -36,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -36, -36, -36, -36, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 419,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26, 420,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 421,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26, 422,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 423,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 424,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -55, -55, -55, -55, -55, -55, -55, -55, -55, -55, -55, -55, -55, -55, -55, -55, -55, -55, -55, -55,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -55, -55, -55, -55, -55, -55, -55,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -55, -55, -55, -55,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -55, -55, -55, -55, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 425,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 426,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 427,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 428,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -81, -81, -81, -81, -81, -81, -81, -81, -81, -81, -81, -81, -81, -81, -81, -81, -81, -81, -81, -81,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -81, -81, -81, -81, -81, -81, -81,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -81, -81, -81, -81,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -81, -81, -81, -81, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 429,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -8,  -8,  -8,  -8,  -8,  -8,  -8,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -8,  -8,  -8,  -8,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -8,  -8,  -8,  -8, },
		{ -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20, -20,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -20, -20, -20, -20, -20, -20, -20,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -20, -20, -20, -20,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -20, -20, -20, -20, },
		{ -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23, -23,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -23, -23, -23, -23, -23, -23, -23,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -23, -23, -23, -23,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -23, -23, -23, -23, },
		{ -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29, -29,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -29, -29, -29, -29, -29, -29, -29,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -29, -29, -29, -29,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -29, -29, -29, -29, },
		{ -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39, -39,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -39, -39, -39, -39, -39, -39, -39,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -39, -39, -39, -39,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -39, -39, -39, -39, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 430,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43, -43,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -43, -43, -43, -43, -43, -43, -43,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -43, -43, -43, -43,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -43, -43, -43, -43, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26, 431,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -51, -51, -51, -51, -51, -51, -51, -51, -51, -51, -51, -51, -51, -51, -51, -51, -51, -51, -51, -51,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -51, -51, -51, -51, -51, -51, -51,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -51, -51, -51, -51,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -51, -51, -51, -51, },
		{ -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53, -53,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -53, -53, -53, -53, -53, -53, -53,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -53, -53, -53, -53,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -53, -53, -53, -53, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26, 432,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -58, -58, -58, -58, -58, -58, -58, -58, -58, -58, -58, -58, -58, -58, -58, -58, -58, -58, -58, -58,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -58, -58, -58, -58, -58, -58, -58,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -58, -58, -58, -58,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -58, -58, -58, -58, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, 433,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26,  26, 434,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -83, -83, -83, -83, -83, -83, -83,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -83, -83, -83, -83,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -83, -83, -83, -83, },
		{ -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42, -42,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -42, -42, -42, -42, -42, -42, -42,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -42, -42, -42, -42,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -42, -42, -42, -42, },
		{ -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47, -47,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -47, -47, -47, -47, -47, -47, -47,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -47, -47, -47, -47,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -47, -47, -47, -47, },
		{ -56, -56, -56, -56, -56, -56, -56, -56, -56, -56, -56, -56, -56, -56, -56, -56, -56, -56, -56, -56,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -56, -56, -56, -56, -56, -56, -56,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -56, -56, -56, -56,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -56, -56, -56, -56, },
		{  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  -3,  -3,  -3,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3,  26,  26,  26, 435,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  -3,  -3,  -3,  -3, },
		{ -77, -77, -77, -77, -77, -77, -77, -77, -77, -77, -77, -77, -77, -77, -77, -77, -77, -77, -77, -77,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -77, -77, -77, -77, -77, -77, -77,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -77, -77, -77, -77,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -77, -77, -77, -77, },
		{ -65, -65, -65, -65, -65, -65, -65, -65, -65, -65, -65, -65, -65, -65, -65, -65, -65, -65, -65, -65,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -65, -65, -65, -65, -65, -65, -65,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -65, -65, -65, -65,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26,  26, -65, -65, -65, -65, },
	};

	static readonly int[] lapg_action = new int[731] {
		  -3,  -1, -51, -97, 243,-147,  -1,  -1,  -1,  -1,   4,-167,-215, 249, 247, 250,
		 251, 252, 253, 254, 255,-259, 414, 244,  -1, 246,  -1,  31,  -1,-299, 421, 422,
		-311,  -1,  -1, 423,-321,-329, 248, 415,  11,  17,   9,   6,  16,  10,   8,   7,
		  14,  12,  13,  19,  15,  18,  20,-421,  -1,  32,  -1,-461,  -1, 419,  -1,-509,
		 427, 425,  21,  -1,  -1,  -1,  -1,  -1, 245,-589,  -1, 418, 424,  33,  24,  25,
		  27,  26,  -1,  50,  57,  64,  -1,  51,  53,  29,  52,  60,  62,  -1,  30,  48,
		  56,  58,  -1,  49,  76,  28,  -1,  61,  63,  -1,  59,  55,  -1,  -1,  -1,  -1,
		  -1,  -1,  -1,  73,  74,  -1,-635,  54, 432,-723,  72,-815,  93,-909, 108,-987,
		-1043,-1093,-1139,-1181,-1211,-1237,-1261,-1283,-1303, 158, 159,  -1,-1321,-1327,-1333,-1389,
		  -1,-1443,  37,-1497,  -1,-1551,-1557,-1563,  -1, 417,  -1,  -1,  -1,  -1,  -1,-1569,
		  -1,  -1,  -1,  -1,-1577,  -1,  -1, 102, 103, 104, 105, 106, 107,  -1,-1587,  -1,
		  83,  84,  -1,-1671,  92,  -1, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154,
		 155,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
		  -1,  -1,  -1,  -1,  -1,  -1,  -1, 431,  -1,  -1,  -1, 260,  65,  -1,-1753,-1759,
		 367,  -1,  -1, 401,  -1,  -1, 380,  -1,  -1, 361,-1815, 416, 156,  -1,  77,  -1,
		-1865,-1949,  99,-2031,  -1,  -1,  -1,  -1,  46,  47, 109,  87,  -1,  -1,-2113,  66,
		  68,  -1,  86,  85, 372,  -1,  -1,-2119, 110, 144, 113, 114, 115, 112,-2125,-2181,
		-2237,-2287,-2337,-2381,-2425,-2471,-2517,-2563,-2609,-2651,-2693,-2723,-2749,-2773,  -1,-2795,
		 433,-2815,-2823,-2829,-2917,-3011, 368, 404,-3057,-3065,-3159,-3165,-3209,-3303,-3309,-3397,
		  23, 242,  78,  -1,  80,  -1, 289, 290, 378,  -1,-3491,  -1,  82,  79,  81, 111,
		  70,  69,  -1,  90,  91, 371, 373,  -1,  -1, 280,-3497,  -1,-3581, 269, 271, 272,
		 273, 274, 275, 276, 277, 278, 279, 262,-3669,  -1, 291,-3711, 298, 299,  -1,  -1,
		-3719, 409, 403,-3725,  -1,-3765, 387, 382,  -1, 363, 157, 100, 376,  -1,-3809,  67,
		 143,-3903, 282,-3911,-3995,  -1,  -1, 358,  -1, 268, 270, 305, 306, 304,  -1, 301,
		  -1,  -1,-4077,-4121, 407,-4129, 396,  -1, 389, 386, 388, 365, 377, 379,-4137,-4231,
		 283,  -1, 351, 350,  -1,  -1,  -1, 321, 322,  -1,  -1,  -1,  -1,  -1,-4323, 413,
		 297, 300,  -1, 408, 410,  -1,  -1,  98,  96,  -1,-4329,-4375,  -1, 318,  -1,-4389,
		  -1, 285,  -1,  -1,  -1,-4399, 314, 313, 320,  -1,  -1,  -1, 201,  -1, 303, 307,
		 160, 412,  -1, 395,  -1,  -1,  -1,  -1,  -1,  -1, 334, 333, 327, 328, 335, 336,
		 337, 338, 339, 340, 329, 330, 346, 345, 331, 332, 341, 342, 343, 344, 348, 347,
		 326,  -1,  -1,  -1, 284,-4515,-4521,-4567,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
		  -1,  -1,  -1,-4611,  -1,-4691,  -1,  -1,  -1,  -1,  -1, 167,  -1,  -1,-4771,-4811,
		  -1,-4819,-4855,  -1, 206, 197,  -1,  -1, 164, 165,  -1, 188,  -1,-4899,  -1,  -1,
		  -1, 281,  -1,  -1,-5015,-5021,-5067,  -1, 315,-5111,-5117,-5125, 319, 288, 286,  -1,
		  -1,-5133,  -1,  -1,  -1,  -1, 181, 192,  -1, 182,-5141,  -1,-5175,  -1,  -1,  -1,
		  -1,  -1,  -1, 175,  -1,  -1,  -1,  -1, 193, 191,  -1,  -1,-5255,-5285,  -1,-5315,
		-5321,-5329,-5413,-5457, 162, 163, 166, 196, 198,  -1, 203, 202,  -1, 393,  -1,  -1,
		-5501,  -1,  -1,  -1,  -1,  -1, 352,  -1, 308, 309, 311,  -1,  -1, 323, 324,  -1,
		-5509,  -1, 222, 224,  -1, 173,-5515,  -1,  -1, 185, 183,  -1,  -1, 186,  -1, 187,
		  -1,  -1, 226,-5521, 228,-5645, 232, 233,-5771, 241, 240,  -1,  -1, 161,  -1,  -1,
		 360,  -1, 392, 397, 399,  -1,  -1, 316,  -1,  -1, 354, 312, 293,-5851,  -1,  -1,
		-5857,  -1,  -1, 184,  -1,  -1,  -1,  -1, 238, 239, 229, 231, 234,  -1,  -1,-5937,
		 349, 400, 391,-5981,-5987,-6071,  -1, 325,  -1,  -1, 225,  -1,-6155, 189,-6277, 170,
		-6285, 190, 171,  -1,  -1,  -1, 317,  -1,-6291,  -1,  -1,  -1,  -1,  -1,-6371, 214,
		  -1, 218, 235,  -1, 394, 355, 356, 172,  -1,-6379,  -1, 169,  -1, 221, 213, 215,
		-6385, 216, 219,  -1,  -1, 180, 220, 237, 179,  -1,  -2,
	};

	static readonly short[] lapg_lalr = new short[6502] {
		  78,  -1,   0,   1,   6,   1,  16,   1,  21,   1,  25,   1,  28,   1,  40,   1,
		  41,   1,  45,   1,  46,   1,  51,   1,  53,   1,  54,   1,  55,   1,  56,   1,
		  60,   1,  64,   1,  66,   1,  76,   1,  79,   1,  81,   1,  85,   1,  -1,  -2,
		  45,  -1,  85,  -1,   0,   3,   6, 257,  16, 257,  21, 257,  25, 257,  28, 257,
		  40, 257,  41, 257,  46, 257,  51, 257,  53, 257,  54, 257,  55, 257,  56, 257,
		  60, 257,  64, 257,  66, 257,  76, 257,  79, 257,  81, 257,  -1,  -2,  78,  -1,
		   0,   0,   6,   0,  16,   0,  21,   0,  25,   0,  28,   0,  40,   0,  41,   0,
		  45,   0,  46,   0,  51,   0,  53,   0,  54,   0,  55,   0,  56,   0,  60,   0,
		  64,   0,  66,   0,  76,   0,  79,   0,  81,   0,  84,   0,  85,   0,  -1,  -2,
		   1,  31,  49,  31,  68,  31,  85,  31,  89,  31,  92,  31,  95,  31,  87,  33,
		 103,  33,  -1,  -2,  45,  -1,  85,  -1,   0,   2,  84,   2,   6, 257,  16, 257,
		  21, 257,  25, 257,  28, 257,  40, 257,  41, 257,  46, 257,  51, 257,  53, 257,
		  54, 257,  55, 257,  56, 257,  60, 257,  64, 257,  66, 257,  76, 257,  79, 257,
		  81, 257,  -1,  -2,  85,  -1,   0,   5,   6, 256,  16, 256,  21, 256,  25, 256,
		  28, 256,  40, 256,  41, 256,  46, 256,  51, 256,  53, 256,  54, 256,  55, 256,
		  56, 256,  60, 256,  64, 256,  66, 256,  76, 256,  79, 256,  81, 256,  -1,  -2,
		   6,  -1,  28,  -1,  41,  -1,  46,  -1,  51,  -1,  53,  -1,  54,  -1,  55,  -1,
		  56,  -1,  60,  -1,  64,  -1,  76,  -1,  79,  -1,  81,  -1,  16, 259,  21, 259,
		  25, 259,  40, 259,  66, 259,  -1,  -2,  86,  31,  87,  31,  89,  31,  90,  31,
		  91, 420,  -1,  -2,  89,  -1,  86, 428,  87, 428,  90, 428,  -1,  -2,  87,  -1,
		  86, 426,  90, 426,  -1,  -2,  85,  -1,   1, 256,   6, 256,   9, 256,  11, 256,
		  14, 256,  16, 256,  17, 256,  19, 256,  21, 256,  23, 256,  25, 256,  26, 256,
		  27, 256,  28, 256,  32, 256,  37, 256,  39, 256,  40, 256,  41, 256,  44, 256,
		  46, 256,  48, 256,  50, 256,  51, 256,  52, 256,  53, 256,  54, 256,  55, 256,
		  56, 256,  57, 256,  59, 256,  60, 256,  61, 256,  64, 256,  65, 256,  66, 256,
		  73, 256,  74, 256,  76, 256,  77, 256,  79, 256,  80, 256,  81, 256, 102, 256,
		  -1,  -2,   6,  -1,  28,  -1,  41,  -1,  46,  -1,  51,  -1,  53,  -1,  54,  -1,
		  55,  -1,  56,  -1,  60,  -1,  64,  -1,  76,  -1,  79,  -1,  81,  -1,  16, 258,
		  21, 258,  25, 258,  40, 258,  66, 258,  -1,  -2,  78,  -1,   6,   1,  16,   1,
		  21,   1,  25,   1,  28,   1,  40,   1,  41,   1,  45,   1,  46,   1,  51,   1,
		  53,   1,  54,   1,  55,   1,  56,   1,  60,   1,  64,   1,  66,   1,  76,   1,
		  79,   1,  81,   1,  84,   1,  85,   1,  -1,  -2,   1,  -1,   2,  -1,   3,  -1,
		   4,  -1,   5,  -1,   8,  -1,   9,  -1,  11,  -1,  14,  -1,  15,  -1,  19,  -1,
		  23,  -1,  29,  -1,  32,  -1,  39,  -1,  44,  -1,  46,  -1,  47,  -1,  48,  -1,
		  59,  -1,  61,  -1,  62,  -1,  65,  -1,  68,  -1,  70,  -1,  72,  -1,  73,  -1,
		  74,  -1,  75,  -1,  77,  -1,  80,  -1,  87,  -1,  93,  -1,  94,  -1, 101,  -1,
		 102,  -1, 107,  -1, 108,  -1,  88, 430,  -1,  -2,  45,  -1,  85,  -1,  84,   3,
		   6, 257,  16, 257,  21, 257,  25, 257,  28, 257,  40, 257,  41, 257,  46, 257,
		  51, 257,  53, 257,  54, 257,  55, 257,  56, 257,  60, 257,  64, 257,  66, 257,
		  76, 257,  79, 257,  81, 257,  -1,  -2,  87,  -1,  89,  -1, 107,  -1, 108,  -1,
		 127,  -1,   7, 101,  42, 101,  84, 101,  86, 101,  88, 101,  90, 101,  91, 101,
		  92, 101,  93, 101,  94, 101,  95, 101,  96, 101,  97, 101,  98, 101,  99, 101,
		 100, 101, 103, 101, 104, 101, 105, 101, 106, 101, 109, 101, 110, 101, 111, 101,
		 112, 101, 113, 101, 114, 101, 115, 101, 116, 101, 117, 101, 118, 101, 119, 101,
		 120, 101, 121, 101, 122, 101, 123, 101, 124, 101, 125, 101, 126, 101,  -1,  -2,
		  85,  -1,   1,  71,   7,  71,  42,  71,  84,  71,  86,  71,  87,  71,  88,  71,
		  89,  71,  90,  71,  91,  71,  92,  71,  93,  71,  94,  71,  95,  71,  96,  71,
		  97,  71,  98,  71,  99,  71, 100,  71, 103,  71, 104,  71, 105,  71, 106,  71,
		 107,  71, 108,  71, 109,  71, 110,  71, 111,  71, 112,  71, 113,  71, 114,  71,
		 115,  71, 116,  71, 117,  71, 118,  71, 119,  71, 120,  71, 121,  71, 122,  71,
		 123,  71, 124,  71, 125,  71, 126,  71, 127,  71,  -1,  -2, 128,  -1,   1,  75,
		   7,  75,  42,  75,  84,  75,  85,  75,  86,  75,  87,  75,  88,  75,  89,  75,
		  90,  75,  91,  75,  92,  75,  93,  75,  94,  75,  95,  75,  96,  75,  97,  75,
		  98,  75,  99,  75, 100,  75, 103,  75, 104,  75, 105,  75, 106,  75, 107,  75,
		 108,  75, 109,  75, 110,  75, 111,  75, 112,  75, 113,  75, 114,  75, 115,  75,
		 116,  75, 117,  75, 118,  75, 119,  75, 120,  75, 121,  75, 122,  75, 123,  75,
		 124,  75, 125,  75, 126,  75, 127,  75,  -1,  -2, 103,  -1, 117,  -1, 118,  -1,
		 119,  -1, 120,  -1, 121,  -1, 122,  -1, 123,  -1, 124,  -1, 125,  -1, 126,  -1,
		   7, 112,  42, 112,  84, 112,  86, 112,  88, 112,  90, 112,  91, 112,  92, 112,
		  93, 112,  94, 112,  95, 112,  96, 112,  97, 112,  98, 112,  99, 112, 100, 112,
		 104, 112, 105, 112, 106, 112, 109, 112, 110, 112, 111, 112, 112, 112, 113, 112,
		 114, 112, 115, 112, 116, 112,  -1,  -2,  95,  -1,  96,  -1,  97,  -1,   7, 116,
		  42, 116,  84, 116,  86, 116,  88, 116,  90, 116,  91, 116,  92, 116,  93, 116,
		  94, 116,  98, 116,  99, 116, 100, 116, 104, 116, 105, 116, 106, 116, 109, 116,
		 110, 116, 111, 116, 112, 116, 113, 116, 114, 116, 115, 116, 116, 116,  -1,  -2,
		  93,  -1,  94,  -1,   7, 119,  42, 119,  84, 119,  86, 119,  88, 119,  90, 119,
		  91, 119,  92, 119,  98, 119,  99, 119, 100, 119, 104, 119, 105, 119, 106, 119,
		 109, 119, 110, 119, 111, 119, 112, 119, 113, 119, 114, 119, 115, 119, 116, 119,
		  -1,  -2, 111,  -1, 112,  -1,   7, 122,  42, 122,  84, 122,  86, 122,  88, 122,
		  90, 122,  91, 122,  92, 122,  98, 122,  99, 122, 100, 122, 104, 122, 105, 122,
		 106, 122, 109, 122, 110, 122, 113, 122, 114, 122, 115, 122, 116, 122,  -1,  -2,
		   7,  -1,  42,  -1, 104,  -1, 105,  -1, 115,  -1, 116,  -1,  84, 129,  86, 129,
		  88, 129,  90, 129,  91, 129,  92, 129,  98, 129,  99, 129, 100, 129, 106, 129,
		 109, 129, 110, 129, 113, 129, 114, 129,  -1,  -2, 113,  -1, 114,  -1,  84, 132,
		  86, 132,  88, 132,  90, 132,  91, 132,  92, 132,  98, 132,  99, 132, 100, 132,
		 106, 132, 109, 132, 110, 132,  -1,  -2,  98,  -1,  84, 134,  86, 134,  88, 134,
		  90, 134,  91, 134,  92, 134,  99, 134, 100, 134, 106, 134, 109, 134, 110, 134,
		  -1,  -2, 100,  -1,  84, 136,  86, 136,  88, 136,  90, 136,  91, 136,  92, 136,
		  99, 136, 106, 136, 109, 136, 110, 136,  -1,  -2,  99,  -1,  84, 138,  86, 138,
		  88, 138,  90, 138,  91, 138,  92, 138, 106, 138, 109, 138, 110, 138,  -1,  -2,
		 109,  -1,  84, 140,  86, 140,  88, 140,  90, 140,  91, 140,  92, 140, 106, 140,
		 110, 140,  -1,  -2, 106,  -1, 110,  -1,  84, 142,  86, 142,  88, 142,  90, 142,
		  91, 142,  92, 142,  -1,  -2,  90,  -1,  88, 429,  -1,  -2,  91,  -1,  83, 261,
		  -1,  -2,  89,  -1,   1,  34,   7,  34,  42,  34,  49,  34,  68,  34,  84,  34,
		  85,  34,  86,  34,  87,  34,  88,  34,  90,  34,  91,  34,  92,  34,  95,  34,
		  98,  34,  99,  34, 100,  34, 104,  34, 105,  34, 106,  34, 109,  34, 110,  34,
		 113,  34, 114,  34, 115,  34, 116,  34,  -1,  -2,   1,  35,   7,  35,  42,  35,
		  49,  35,  68,  35,  84,  35,  86,  35,  87,  35,  88,  35,  90,  35,  91,  35,
		  92,  35,  95,  35,  98,  35,  99,  35, 100,  35, 104,  35, 105,  35, 106,  35,
		 109,  35, 110,  35, 113,  35, 114,  35, 115,  35, 116,  35,  85,  39,  -1,  -2,
		   1,  36,   7,  36,  42,  36,  49,  36,  68,  36,  84,  36,  86,  36,  87,  36,
		  88,  36,  90,  36,  91,  36,  92,  36,  95,  36,  98,  36,  99,  36, 100,  36,
		 104,  36, 105,  36, 106,  36, 109,  36, 110,  36, 113,  36, 114,  36, 115,  36,
		 116,  36,  85,  40,  -1,  -2,   1,  38,   7,  38,  42,  38,  49,  38,  68,  38,
		  84,  38,  86,  38,  87,  38,  88,  38,  90,  38,  91,  38,  92,  38,  95,  38,
		  98,  38,  99,  38, 100,  38, 104,  38, 105,  38, 106,  38, 109,  38, 110,  38,
		 113,  38, 114,  38, 115,  38, 116,  38,  85,  41,  -1,  -2,  91,  -1,  83, 402,
		  -1,  -2,  91,  -1,  83, 381,  -1,  -2,  91,  -1,  83, 362,  -1,  -2,  83,  -1,
		  87,  37,  95,  37,  -1,  -2,  89,  -1,  85,  45,  88,  45,  95,  45,  -1,  -2,
		   1,  -1,   2,  -1,   3,  -1,   4,  -1,   5,  -1,   8,  -1,   9,  -1,  11,  -1,
		  14,  -1,  15,  -1,  19,  -1,  23,  -1,  29,  -1,  32,  -1,  39,  -1,  44,  -1,
		  46,  -1,  47,  -1,  48,  -1,  50,  -1,  57,  -1,  59,  -1,  61,  -1,  62,  -1,
		  65,  -1,  68,  -1,  70,  -1,  72,  -1,  73,  -1,  74,  -1,  75,  -1,  77,  -1,
		  80,  -1,  87,  -1,  93,  -1,  94,  -1, 101,  -1, 102,  -1, 107,  -1, 108,  -1,
		  88,  89,  -1,  -2,   1,  -1,   2,  -1,   3,  -1,   4,  -1,   5,  -1,   8,  -1,
		   9,  -1,  11,  -1,  14,  -1,  15,  -1,  19,  -1,  23,  -1,  29,  -1,  32,  -1,
		  39,  -1,  44,  -1,  46,  -1,  47,  -1,  48,  -1,  59,  -1,  61,  -1,  62,  -1,
		  65,  -1,  68,  -1,  70,  -1,  72,  -1,  73,  -1,  74,  -1,  75,  -1,  77,  -1,
		  80,  -1,  87,  -1,  90,  -1,  93,  -1,  94,  -1, 101,  -1, 102,  -1, 107,  -1,
		 108,  -1,  86, 370,  -1,  -2,  90,  -1,  86, 370,  -1,  -2,  85,  -1,   1, 366,
		   7, 366,  42, 366,  49, 366,  68, 366,  83, 366,  84, 366,  86, 366,  87, 366,
		  88, 366,  90, 366,  91, 366,  92, 366,  95, 366,  98, 366,  99, 366, 100, 366,
		 104, 366, 105, 366, 106, 366, 109, 366, 110, 366, 113, 366, 114, 366, 115, 366,
		 116, 366,  -1,  -2,  92,  -1,   0,  22,   6,  22,  16,  22,  21,  22,  25,  22,
		  28,  22,  40,  22,  41,  22,  45,  22,  46,  22,  51,  22,  53,  22,  54,  22,
		  55,  22,  56,  22,  60,  22,  64,  22,  66,  22,  76,  22,  79,  22,  81,  22,
		  84,  22,  85,  22,  -1,  -2,   1,  -1,   2,  -1,   3,  -1,   4,  -1,   5,  -1,
		   8,  -1,   9,  -1,  11,  -1,  14,  -1,  15,  -1,  19,  -1,  23,  -1,  29,  -1,
		  32,  -1,  39,  -1,  44,  -1,  46,  -1,  47,  -1,  48,  -1,  50,  -1,  57,  -1,
		  59,  -1,  61,  -1,  62,  -1,  65,  -1,  68,  -1,  70,  -1,  72,  -1,  73,  -1,
		  74,  -1,  75,  -1,  77,  -1,  80,  -1,  87,  -1,  93,  -1,  94,  -1, 101,  -1,
		 102,  -1, 107,  -1, 108,  -1,  88,  89,  -1,  -2,   1,  -1,   2,  -1,   3,  -1,
		   4,  -1,   5,  -1,   8,  -1,   9,  -1,  11,  -1,  14,  -1,  15,  -1,  19,  -1,
		  23,  -1,  29,  -1,  32,  -1,  39,  -1,  44,  -1,  46,  -1,  47,  -1,  48,  -1,
		  59,  -1,  61,  -1,  62,  -1,  65,  -1,  68,  -1,  70,  -1,  72,  -1,  73,  -1,
		  74,  -1,  75,  -1,  77,  -1,  80,  -1,  83,  -1,  87,  -1,  93,  -1,  94,  -1,
		 101,  -1, 102,  -1, 107,  -1, 108,  -1,  84, 375,  -1,  -2,   1,  -1,   2,  -1,
		   3,  -1,   4,  -1,   5,  -1,   8,  -1,   9,  -1,  11,  -1,  14,  -1,  15,  -1,
		  19,  -1,  23,  -1,  29,  -1,  32,  -1,  39,  -1,  44,  -1,  46,  -1,  47,  -1,
		  48,  -1,  59,  -1,  61,  -1,  62,  -1,  65,  -1,  68,  -1,  70,  -1,  72,  -1,
		  73,  -1,  74,  -1,  75,  -1,  77,  -1,  80,  -1,  87,  -1,  90,  -1,  93,  -1,
		  94,  -1, 101,  -1, 102,  -1, 107,  -1, 108,  -1,  86, 370,  -1,  -2,  90,  -1,
		  88,  88,  -1,  -2,  90,  -1,  86, 369,  -1,  -2,  95,  -1,  96,  -1,  97,  -1,
		   7, 117,  42, 117,  84, 117,  86, 117,  88, 117,  90, 117,  91, 117,  92, 117,
		  93, 117,  94, 117,  98, 117,  99, 117, 100, 117, 104, 117, 105, 117, 106, 117,
		 109, 117, 110, 117, 111, 117, 112, 117, 113, 117, 114, 117, 115, 117, 116, 117,
		  -1,  -2,  95,  -1,  96,  -1,  97,  -1,   7, 118,  42, 118,  84, 118,  86, 118,
		  88, 118,  90, 118,  91, 118,  92, 118,  93, 118,  94, 118,  98, 118,  99, 118,
		 100, 118, 104, 118, 105, 118, 106, 118, 109, 118, 110, 118, 111, 118, 112, 118,
		 113, 118, 114, 118, 115, 118, 116, 118,  -1,  -2,  93,  -1,  94,  -1,   7, 120,
		  42, 120,  84, 120,  86, 120,  88, 120,  90, 120,  91, 120,  92, 120,  98, 120,
		  99, 120, 100, 120, 104, 120, 105, 120, 106, 120, 109, 120, 110, 120, 111, 120,
		 112, 120, 113, 120, 114, 120, 115, 120, 116, 120,  -1,  -2,  93,  -1,  94,  -1,
		   7, 121,  42, 121,  84, 121,  86, 121,  88, 121,  90, 121,  91, 121,  92, 121,
		  98, 121,  99, 121, 100, 121, 104, 121, 105, 121, 106, 121, 109, 121, 110, 121,
		 111, 121, 112, 121, 113, 121, 114, 121, 115, 121, 116, 121,  -1,  -2,  95,  -1,
		   7, 128,  42, 128,  84, 128,  86, 128,  88, 128,  90, 128,  91, 128,  92, 128,
		  98, 128,  99, 128, 100, 128, 104, 128, 105, 128, 106, 128, 109, 128, 110, 128,
		 113, 128, 114, 128, 115, 128, 116, 128,  -1,  -2,  95,  -1,   7, 127,  42, 127,
		  84, 127,  86, 127,  88, 127,  90, 127,  91, 127,  92, 127,  98, 127,  99, 127,
		 100, 127, 104, 127, 105, 127, 106, 127, 109, 127, 110, 127, 113, 127, 114, 127,
		 115, 127, 116, 127,  -1,  -2, 111,  -1, 112,  -1,   7, 123,  42, 123,  84, 123,
		  86, 123,  88, 123,  90, 123,  91, 123,  92, 123,  98, 123,  99, 123, 100, 123,
		 104, 123, 105, 123, 106, 123, 109, 123, 110, 123, 113, 123, 114, 123, 115, 123,
		 116, 123,  -1,  -2, 111,  -1, 112,  -1,   7, 124,  42, 124,  84, 124,  86, 124,
		  88, 124,  90, 124,  91, 124,  92, 124,  98, 124,  99, 124, 100, 124, 104, 124,
		 105, 124, 106, 124, 109, 124, 110, 124, 113, 124, 114, 124, 115, 124, 116, 124,
		  -1,  -2, 111,  -1, 112,  -1,   7, 125,  42, 125,  84, 125,  86, 125,  88, 125,
		  90, 125,  91, 125,  92, 125,  98, 125,  99, 125, 100, 125, 104, 125, 105, 125,
		 106, 125, 109, 125, 110, 125, 113, 125, 114, 125, 115, 125, 116, 125,  -1,  -2,
		 111,  -1, 112,  -1,   7, 126,  42, 126,  84, 126,  86, 126,  88, 126,  90, 126,
		  91, 126,  92, 126,  98, 126,  99, 126, 100, 126, 104, 126, 105, 126, 106, 126,
		 109, 126, 110, 126, 113, 126, 114, 126, 115, 126, 116, 126,  -1,  -2,   7,  -1,
		  42,  -1, 104,  -1, 105,  -1, 115,  -1, 116,  -1,  84, 130,  86, 130,  88, 130,
		  90, 130,  91, 130,  92, 130,  98, 130,  99, 130, 100, 130, 106, 130, 109, 130,
		 110, 130, 113, 130, 114, 130,  -1,  -2,   7,  -1,  42,  -1, 104,  -1, 105,  -1,
		 115,  -1, 116,  -1,  84, 131,  86, 131,  88, 131,  90, 131,  91, 131,  92, 131,
		  98, 131,  99, 131, 100, 131, 106, 131, 109, 131, 110, 131, 113, 131, 114, 131,
		  -1,  -2, 113,  -1, 114,  -1,  84, 133,  86, 133,  88, 133,  90, 133,  91, 133,
		  92, 133,  98, 133,  99, 133, 100, 133, 106, 133, 109, 133, 110, 133,  -1,  -2,
		  98,  -1,  84, 135,  86, 135,  88, 135,  90, 135,  91, 135,  92, 135,  99, 135,
		 100, 135, 106, 135, 109, 135, 110, 135,  -1,  -2, 100,  -1,  84, 137,  86, 137,
		  88, 137,  90, 137,  91, 137,  92, 137,  99, 137, 106, 137, 109, 137, 110, 137,
		  -1,  -2,  99,  -1,  84, 139,  86, 139,  88, 139,  90, 139,  91, 139,  92, 139,
		 106, 139, 109, 139, 110, 139,  -1,  -2, 109,  -1,  84, 141,  86, 141,  88, 141,
		  90, 141,  91, 141,  92, 141, 106, 141, 110, 141,  -1,  -2,  89,  -1,  83, 264,
		  90, 264,  -1,  -2,  90,  -1,  83, 263,  -1,  -2,  85,  -1,   1, 257,   6, 257,
		   9, 257,  11, 257,  14, 257,  16, 257,  17, 257,  19, 257,  21, 257,  23, 257,
		  25, 257,  26, 257,  27, 257,  28, 257,  32, 257,  37, 257,  39, 257,  40, 257,
		  41, 257,  44, 257,  46, 257,  48, 257,  51, 257,  53, 257,  54, 257,  55, 257,
		  56, 257,  59, 257,  60, 257,  61, 257,  64, 257,  65, 257,  66, 257,  73, 257,
		  74, 257,  76, 257,  77, 257,  79, 257,  80, 257,  81, 257, 102, 257,  84, 267,
		  -1,  -2,  92,  -1,   0,  22,   1,  22,   6,  22,   9,  22,  11,  22,  14,  22,
		  16,  22,  17,  22,  19,  22,  21,  22,  23,  22,  25,  22,  26,  22,  27,  22,
		  28,  22,  32,  22,  37,  22,  39,  22,  40,  22,  41,  22,  44,  22,  45,  22,
		  46,  22,  48,  22,  51,  22,  53,  22,  54,  22,  55,  22,  56,  22,  59,  22,
		  60,  22,  61,  22,  64,  22,  65,  22,  66,  22,  73,  22,  74,  22,  76,  22,
		  77,  22,  79,  22,  80,  22,  81,  22,  84,  22,  85,  22, 102,  22,  -1,  -2,
		  85,  -1,   1, 257,   9, 257,  11, 257,  14, 257,  19, 257,  23, 257,  32, 257,
		  39, 257,  44, 257,  48, 257,  50, 257,  52, 257,  57, 257,  59, 257,  61, 257,
		  65, 257,  73, 257,  74, 257,  77, 257,  80, 257,  88, 292,  -1,  -2,  85,  -1,
		   1, 257,  84, 406,  -1,  -2,  92,  -1,   0,  22,   1,  22,   6,  22,   9,  22,
		  11,  22,  14,  22,  16,  22,  17,  22,  19,  22,  21,  22,  23,  22,  25,  22,
		  26,  22,  27,  22,  28,  22,  32,  22,  37,  22,  39,  22,  40,  22,  41,  22,
		  44,  22,  45,  22,  46,  22,  48,  22,  51,  22,  53,  22,  54,  22,  55,  22,
		  56,  22,  59,  22,  60,  22,  61,  22,  64,  22,  65,  22,  66,  22,  73,  22,
		  74,  22,  76,  22,  77,  22,  79,  22,  80,  22,  81,  22,  84,  22,  85,  22,
		 102,  22,  -1,  -2,  90,  -1,  83, 383,  -1,  -2,  85,  -1,   1, 257,   9, 257,
		  11, 257,  14, 257,  19, 257,  23, 257,  26, 257,  32, 257,  39, 257,  44, 257,
		  46, 257,  48, 257,  59, 257,  61, 257,  65, 257,  73, 257,  74, 257,  77, 257,
		  80, 257,  84, 385,  -1,  -2,  92,  -1,   0,  22,   1,  22,   6,  22,   9,  22,
		  11,  22,  14,  22,  16,  22,  17,  22,  19,  22,  21,  22,  23,  22,  25,  22,
		  26,  22,  27,  22,  28,  22,  32,  22,  37,  22,  39,  22,  40,  22,  41,  22,
		  44,  22,  45,  22,  46,  22,  48,  22,  51,  22,  53,  22,  54,  22,  55,  22,
		  56,  22,  59,  22,  60,  22,  61,  22,  64,  22,  65,  22,  66,  22,  73,  22,
		  74,  22,  76,  22,  77,  22,  79,  22,  80,  22,  81,  22,  84,  22,  85,  22,
		 102,  22,  -1,  -2,  90,  -1,  83, 364,  -1,  -2,  85,  -1,   1, 257,   6, 257,
		   9, 257,  11, 257,  14, 257,  16, 257,  17, 257,  19, 257,  21, 257,  23, 257,
		  25, 257,  26, 257,  27, 257,  28, 257,  32, 257,  37, 257,  39, 257,  40, 257,
		  41, 257,  44, 257,  46, 257,  48, 257,  51, 257,  53, 257,  54, 257,  55, 257,
		  56, 257,  59, 257,  60, 257,  61, 257,  64, 257,  65, 257,  66, 257,  73, 257,
		  74, 257,  76, 257,  77, 257,  79, 257,  80, 257,  81, 257, 102, 257,  84, 267,
		  -1,  -2,  92,  -1,   0,  22,   1,  22,   6,  22,   9,  22,  11,  22,  14,  22,
		  16,  22,  17,  22,  19,  22,  21,  22,  23,  22,  25,  22,  26,  22,  27,  22,
		  28,  22,  32,  22,  37,  22,  39,  22,  40,  22,  41,  22,  44,  22,  45,  22,
		  46,  22,  48,  22,  51,  22,  53,  22,  54,  22,  55,  22,  56,  22,  59,  22,
		  60,  22,  61,  22,  64,  22,  65,  22,  66,  22,  73,  22,  74,  22,  76,  22,
		  77,  22,  79,  22,  80,  22,  81,  22,  84,  22,  85,  22, 102,  22,  -1,  -2,
		  90,  -1,  84, 374,  -1,  -2,   6,  -1,  17,  -1,  28,  -1,  41,  -1,  46,  -1,
		  51,  -1,  53,  -1,  54,  -1,  55,  -1,  56,  -1,  60,  -1,  64,  -1,  76,  -1,
		  79,  -1,  81,  -1,   1, 259,   9, 259,  11, 259,  14, 259,  16, 259,  19, 259,
		  21, 259,  23, 259,  25, 259,  26, 259,  27, 259,  32, 259,  37, 259,  39, 259,
		  40, 259,  44, 259,  48, 259,  59, 259,  61, 259,  65, 259,  66, 259,  73, 259,
		  74, 259,  77, 259,  80, 259, 102, 359,  -1,  -2,  85,  -1,   1, 257,   6, 257,
		   9, 257,  11, 257,  14, 257,  16, 257,  17, 257,  19, 257,  21, 257,  23, 257,
		  25, 257,  26, 257,  27, 257,  28, 257,  32, 257,  37, 257,  39, 257,  40, 257,
		  41, 257,  44, 257,  46, 257,  48, 257,  51, 257,  53, 257,  54, 257,  55, 257,
		  56, 257,  59, 257,  60, 257,  61, 257,  64, 257,  65, 257,  66, 257,  73, 257,
		  74, 257,  76, 257,  77, 257,  79, 257,  80, 257,  81, 257, 102, 257,  84, 266,
		  -1,  -2,  50,  -1,  52,  -1,  57,  -1,   1, 302,   9, 302,  11, 302,  14, 302,
		  19, 302,  23, 302,  32, 302,  39, 302,  44, 302,  48, 302,  59, 302,  61, 302,
		  65, 302,  73, 302,  74, 302,  77, 302,  80, 302,  -1,  -2,  90,  -1,  86, 296,
		  88, 296,  -1,  -2,  90,  -1,  84, 405,  -1,  -2,  46,  -1,   1, 390,   9, 390,
		  11, 390,  14, 390,  19, 390,  23, 390,  26, 390,  32, 390,  39, 390,  44, 390,
		  48, 390,  59, 390,  61, 390,  65, 390,  73, 390,  74, 390,  77, 390,  80, 390,
		  -1,  -2,  85,  -1,   1, 257,   9, 257,  11, 257,  14, 257,  19, 257,  23, 257,
		  26, 257,  32, 257,  39, 257,  44, 257,  46, 257,  48, 257,  59, 257,  61, 257,
		  65, 257,  73, 257,  74, 257,  77, 257,  80, 257,  84, 384,  -1,  -2,  85,  -1,
		   1,  95,   7,  95,  42,  95,  83,  95,  84,  95,  86,  95,  87,  95,  88,  95,
		  89,  95,  90,  95,  91,  95,  92,  95,  93,  95,  94,  95,  95,  95,  96,  95,
		  97,  95,  98,  95,  99,  95, 100,  95, 103,  95, 104,  95, 105,  95, 106,  95,
		 107,  95, 108,  95, 109,  95, 110,  95, 111,  95, 112,  95, 113,  95, 114,  95,
		 115,  95, 116,  95, 117,  95, 118,  95, 119,  95, 120,  95, 121,  95, 122,  95,
		 123,  95, 124,  95, 125,  95, 126,  95, 127,  95,  -1,  -2,  89,  -1,  83, 265,
		  90, 265,  -1,  -2,   1,  17,   6,  17,   9,  17,  11,  17,  14,  17,  16,  17,
		  17,  17,  19,  17,  21,  17,  23,  17,  25,  17,  26,  17,  27,  17,  28,  17,
		  32,  17,  37,  17,  39,  17,  40,  17,  41,  17,  44,  17,  46,  17,  48,  17,
		  51,  17,  53,  17,  54,  17,  55,  17,  56,  17,  59,  17,  60,  17,  61,  17,
		  64,  17,  65,  17,  66,  17,  73,  17,  74,  17,  76,  17,  77,  17,  79,  17,
		  80,  17,  81,  17, 102, 357,  -1,  -2,   6,  -1,  17,  -1,  28,  -1,  41,  -1,
		  46,  -1,  51,  -1,  53,  -1,  54,  -1,  55,  -1,  56,  -1,  60,  -1,  64,  -1,
		  76,  -1,  79,  -1,  81,  -1,   1, 258,   9, 258,  11, 258,  14, 258,  16, 258,
		  19, 258,  21, 258,  23, 258,  25, 258,  26, 258,  27, 258,  32, 258,  37, 258,
		  39, 258,  40, 258,  44, 258,  48, 258,  59, 258,  61, 258,  65, 258,  66, 258,
		  73, 258,  74, 258,  77, 258,  80, 258,  -1,  -2,  85,  -1,   1, 257,   9, 257,
		  11, 257,  14, 257,  19, 257,  23, 257,  32, 257,  39, 257,  44, 257,  48, 257,
		  50, 257,  52, 257,  57, 257,  59, 257,  61, 257,  65, 257,  73, 257,  74, 257,
		  77, 257,  80, 257,  -1,  -2, 103,  -1,  84, 411,  90, 411,  -1,  -2,  84,  -1,
		  85,  -1,   1, 257,  -1,  -2,  85,  -1,   1,  94,   7,  94,  42,  94,  83,  94,
		  84,  94,  86,  94,  87,  94,  88,  94,  89,  94,  90,  94,  91,  94,  92,  94,
		  93,  94,  94,  94,  95,  94,  96,  94,  97,  94,  98,  94,  99,  94, 100,  94,
		 103,  94, 104,  94, 105,  94, 106,  94, 107,  94, 108,  94, 109,  94, 110,  94,
		 111,  94, 112,  94, 113,  94, 114,  94, 115,  94, 116,  94, 117,  94, 118,  94,
		 119,  94, 120,  94, 121,  94, 122,  94, 123,  94, 124,  94, 125,  94, 126,  94,
		 127,  94,  -1,  -2,  83,  -1,   1,  97,   7,  97,  42,  97,  84,  97,  86,  97,
		  87,  97,  88,  97,  89,  97,  90,  97,  91,  97,  92,  97,  93,  97,  94,  97,
		  95,  97,  96,  97,  97,  97,  98,  97,  99,  97, 100,  97, 103,  97, 104,  97,
		 105,  97, 106,  97, 107,  97, 108,  97, 109,  97, 110,  97, 111,  97, 112,  97,
		 113,  97, 114,  97, 115,  97, 116,  97, 117,  97, 118,  97, 119,  97, 120,  97,
		 121,  97, 122,  97, 123,  97, 124,  97, 125,  97, 126,  97, 127,  97,  -1,  -2,
		   1,  -1,  95,  37,  -1,  -2,  85,  -1,   1, 257,   9, 257,  11, 257,  14, 257,
		  19, 257,  23, 257,  32, 257,  39, 257,  44, 257,  48, 257,  50, 257,  52, 257,
		  57, 257,  59, 257,  61, 257,  65, 257,  73, 257,  74, 257,  77, 257,  80, 257,
		  88, 292,  -1,  -2,  89,  31,  90,  33,  92,  33, 103,  33,  83, 294,  87, 294,
		  -1,  -2, 103,  -1,  88, 287,  90, 287,  92, 287,  -1,  -2,   1,  -1,   2,  -1,
		   3,  -1,   4,  -1,   5,  -1,   8,  -1,   9,  -1,  10,  -1,  11,  -1,  14,  -1,
		  15,  -1,  17,  -1,  18,  -1,  19,  -1,  22,  -1,  23,  -1,  29,  -1,  32,  -1,
		  33,  -1,  34,  -1,  35,  -1,  36,  -1,  39,  -1,  43,  -1,  44,  -1,  46,  -1,
		  47,  -1,  48,  -1,  58,  -1,  59,  -1,  61,  -1,  62,  -1,  65,  -1,  67,  -1,
		  68,  -1,  69,  -1,  70,  -1,  71,  -1,  72,  -1,  73,  -1,  74,  -1,  75,  -1,
		  76,  -1,  77,  -1,  78,  -1,  80,  -1,  82,  -1,  83,  -1,  87,  -1,  92,  -1,
		  93,  -1,  94,  -1, 101,  -1, 102,  -1, 107,  -1, 108,  -1,  84, 195,  -1,  -2,
		  85,  -1,   1, 257,  -1,  -2,  85,  -1,   1, 257,   9, 257,  11, 257,  14, 257,
		  19, 257,  23, 257,  32, 257,  39, 257,  44, 257,  48, 257,  50, 257,  52, 257,
		  57, 257,  59, 257,  61, 257,  65, 257,  73, 257,  74, 257,  77, 257,  80, 257,
		  88, 292,  -1,  -2,  85,  -1,   1, 257,   9, 257,  11, 257,  14, 257,  19, 257,
		  23, 257,  32, 257,  39, 257,  44, 257,  48, 257,  50, 257,  52, 257,  57, 257,
		  59, 257,  61, 257,  65, 257,  73, 257,  74, 257,  77, 257,  80, 257,  -1,  -2,
		   1,  -1,   2,  -1,   3,  -1,   4,  -1,   5,  -1,   8,  -1,   9,  -1,  11,  -1,
		  14,  -1,  15,  -1,  19,  -1,  23,  -1,  29,  -1,  32,  -1,  39,  -1,  44,  -1,
		  46,  -1,  47,  -1,  48,  -1,  59,  -1,  61,  -1,  62,  -1,  65,  -1,  68,  -1,
		  70,  -1,  72,  -1,  73,  -1,  74,  -1,  75,  -1,  77,  -1,  80,  -1,  87,  -1,
		  93,  -1,  94,  -1, 101,  -1, 102,  -1, 107,  -1, 108,  -1,  92, 176,  -1,  -2,
		   1,  -1,   2,  -1,   3,  -1,   4,  -1,   5,  -1,   8,  -1,   9,  -1,  11,  -1,
		  14,  -1,  15,  -1,  19,  -1,  23,  -1,  29,  -1,  32,  -1,  39,  -1,  44,  -1,
		  46,  -1,  47,  -1,  48,  -1,  59,  -1,  61,  -1,  62,  -1,  65,  -1,  68,  -1,
		  70,  -1,  72,  -1,  73,  -1,  74,  -1,  75,  -1,  77,  -1,  80,  -1,  87,  -1,
		  93,  -1,  94,  -1, 101,  -1, 102,  -1, 107,  -1, 108,  -1,  92, 176,  -1,  -2,
		  91,  -1,   1,  74,  85,  74,  87,  74,  89,  74, 103,  74, 107,  74, 108,  74,
		 117,  74, 118,  74, 119,  74, 120,  74, 121,  74, 122,  74, 123,  74, 124,  74,
		 125,  74, 126,  74, 127,  74,  -1,  -2,  85,  -1,  89,  -1,   1,  43,  -1,  -2,
		  87,  -1,  89,  -1, 107,  -1, 108,  -1, 127,  -1,   1,  42, 103, 101, 117, 101,
		 118, 101, 119, 101, 120, 101, 121, 101, 122, 101, 123, 101, 124, 101, 125, 101,
		 126, 101,  -1,  -2,   1,  93,  85,  93,  87,  93,  89,  93, 103,  93, 107,  93,
		 108,  93, 117,  93, 118,  93, 119,  93, 120,  93, 121,  93, 122,  93, 123,  93,
		 124,  93, 125,  93, 126,  93, 127,  93,  88, 205,  90, 205,  92, 205,  -1,  -2,
		   1,  -1,   2,  -1,   3,  -1,   4,  -1,   5,  -1,   8,  -1,   9,  -1,  10,  -1,
		  11,  -1,  14,  -1,  15,  -1,  17,  -1,  18,  -1,  19,  -1,  22,  -1,  23,  -1,
		  29,  -1,  32,  -1,  33,  -1,  34,  -1,  35,  -1,  36,  -1,  39,  -1,  43,  -1,
		  44,  -1,  46,  -1,  47,  -1,  48,  -1,  58,  -1,  59,  -1,  61,  -1,  62,  -1,
		  65,  -1,  67,  -1,  68,  -1,  69,  -1,  70,  -1,  71,  -1,  72,  -1,  73,  -1,
		  74,  -1,  75,  -1,  76,  -1,  77,  -1,  78,  -1,  80,  -1,  82,  -1,  83,  -1,
		  87,  -1,  92,  -1,  93,  -1,  94,  -1, 101,  -1, 102,  -1, 107,  -1, 108,  -1,
		  84, 194,  -1,  -2,  85,  -1,   1, 257,  -1,  -2,  85,  -1,   1, 257,   9, 257,
		  11, 257,  14, 257,  19, 257,  23, 257,  32, 257,  39, 257,  44, 257,  48, 257,
		  50, 257,  52, 257,  57, 257,  59, 257,  61, 257,  65, 257,  73, 257,  74, 257,
		  77, 257,  80, 257,  88, 292,  -1,  -2,  85,  -1,   1, 257,   9, 257,  11, 257,
		  14, 257,  19, 257,  23, 257,  32, 257,  39, 257,  44, 257,  48, 257,  50, 257,
		  52, 257,  57, 257,  59, 257,  61, 257,  65, 257,  73, 257,  74, 257,  77, 257,
		  80, 257,  -1,  -2,  85,  -1,   1, 257,  -1,  -2,  91,  -1,  83, 353,  92, 353,
		  -1,  -2,  89,  32,  83, 295,  87, 295,  -1,  -2,  85,  -1,   1, 257,  84, 310,
		  -1,  -2,  87,  -1,  89,  -1, 107,  -1, 108,  -1, 127,  -1, 103, 101, 117, 101,
		 118, 101, 119, 101, 120, 101, 121, 101, 122, 101, 123, 101, 124, 101, 125, 101,
		 126, 101,  -1,  -2,   1,  -1,   2,  -1,   3,  -1,   4,  -1,   5,  -1,   8,  -1,
		   9,  -1,  11,  -1,  14,  -1,  15,  -1,  19,  -1,  23,  -1,  29,  -1,  32,  -1,
		  39,  -1,  44,  -1,  46,  -1,  47,  -1,  48,  -1,  59,  -1,  61,  -1,  62,  -1,
		  65,  -1,  68,  -1,  70,  -1,  72,  -1,  73,  -1,  74,  -1,  75,  -1,  77,  -1,
		  80,  -1,  87,  -1,  93,  -1,  94,  -1, 101,  -1, 102,  -1, 107,  -1, 108,  -1,
		  92, 174,  -1,  -2, 103, 106, 117, 106, 118, 106, 119, 106, 120, 106, 121, 106,
		 122, 106, 123, 106, 124, 106, 125, 106, 126, 106,  88, 209,  90, 209,  92, 209,
		  -1,  -2, 103, 107, 117, 107, 118, 107, 119, 107, 120, 107, 121, 107, 122, 107,
		 123, 107, 124, 107, 125, 107, 126, 107,  88, 210,  90, 210,  92, 210,  -1,  -2,
		  85,  -1,   1,  44,  -1,  -2,  90,  -1,  88, 199,  92, 199,  -1,  -2,   1,  -1,
		   2,  -1,   3,  -1,   4,  -1,   5,  -1,   8,  -1,   9,  -1,  11,  -1,  14,  -1,
		  15,  -1,  19,  -1,  23,  -1,  29,  -1,  32,  -1,  39,  -1,  44,  -1,  46,  -1,
		  47,  -1,  48,  -1,  50,  -1,  57,  -1,  59,  -1,  61,  -1,  62,  -1,  65,  -1,
		  68,  -1,  70,  -1,  72,  -1,  73,  -1,  74,  -1,  75,  -1,  77,  -1,  80,  -1,
		  87,  -1,  93,  -1,  94,  -1, 101,  -1, 102,  -1, 107,  -1, 108,  -1,  88,  89,
		  -1,  -2,   1,  83,  85,  83,  87,  83,  89,  83, 103,  83, 107,  83, 108,  83,
		 117,  83, 118,  83, 119,  83, 120,  83, 121,  83, 122,  83, 123,  83, 124,  83,
		 125,  83, 126,  83, 127,  83,  88, 207,  90, 207,  92, 207,  -1,  -2,   1,  84,
		  85,  84,  87,  84,  89,  84, 103,  84, 107,  84, 108,  84, 117,  84, 118,  84,
		 119,  84, 120,  84, 121,  84, 122,  84, 123,  84, 124,  84, 125,  84, 126,  84,
		 127,  84,  88, 208,  90, 208,  92, 208,  -1,  -2,  85,  -1,   1, 257,  84, 398,
		  -1,  -2,  90,  -1,  92, 200,  -1,  -2,  90,  -1,  92, 223,  -1,  -2,  30,  -1,
		   1, 227,   2, 227,   3, 227,   4, 227,   5, 227,   8, 227,   9, 227,  10, 227,
		  11, 227,  12, 227,  14, 227,  15, 227,  17, 227,  18, 227,  19, 227,  20, 227,
		  22, 227,  23, 227,  24, 227,  29, 227,  32, 227,  33, 227,  34, 227,  35, 227,
		  36, 227,  39, 227,  43, 227,  44, 227,  46, 227,  47, 227,  48, 227,  58, 227,
		  59, 227,  61, 227,  62, 227,  65, 227,  67, 227,  68, 227,  69, 227,  70, 227,
		  71, 227,  72, 227,  73, 227,  74, 227,  75, 227,  76, 227,  77, 227,  78, 227,
		  80, 227,  82, 227,  83, 227,  84, 227,  87, 227,  92, 227,  93, 227,  94, 227,
		 101, 227, 102, 227, 107, 227, 108, 227,  -1,  -2,  13,  -1,   1, 230,   2, 230,
		   3, 230,   4, 230,   5, 230,   8, 230,   9, 230,  10, 230,  11, 230,  12, 230,
		  14, 230,  15, 230,  17, 230,  18, 230,  19, 230,  20, 230,  22, 230,  23, 230,
		  24, 230,  29, 230,  30, 230,  32, 230,  33, 230,  34, 230,  35, 230,  36, 230,
		  39, 230,  43, 230,  44, 230,  46, 230,  47, 230,  48, 230,  58, 230,  59, 230,
		  61, 230,  62, 230,  65, 230,  67, 230,  68, 230,  69, 230,  70, 230,  71, 230,
		  72, 230,  73, 230,  74, 230,  75, 230,  76, 230,  77, 230,  78, 230,  80, 230,
		  82, 230,  83, 230,  84, 230,  87, 230,  92, 230,  93, 230,  94, 230, 101, 230,
		 102, 230, 107, 230, 108, 230,  -1,  -2,  87,  -1,  89,  -1, 107,  -1, 108,  -1,
		 127,  -1,   1,  42,   7, 101,  42, 101,  88, 101,  93, 101,  94, 101,  95, 101,
		  96, 101,  97, 101,  98, 101,  99, 101, 100, 101, 103, 101, 104, 101, 105, 101,
		 106, 101, 109, 101, 110, 101, 111, 101, 112, 101, 113, 101, 114, 101, 115, 101,
		 116, 101, 117, 101, 118, 101, 119, 101, 120, 101, 121, 101, 122, 101, 123, 101,
		 124, 101, 125, 101, 126, 101,  -1,  -2,  85,  -1,   1, 257,  -1,  -2,   1,  -1,
		   2,  -1,   3,  -1,   4,  -1,   5,  -1,   8,  -1,   9,  -1,  11,  -1,  14,  -1,
		  15,  -1,  19,  -1,  23,  -1,  29,  -1,  32,  -1,  39,  -1,  44,  -1,  46,  -1,
		  47,  -1,  48,  -1,  59,  -1,  61,  -1,  62,  -1,  65,  -1,  68,  -1,  70,  -1,
		  72,  -1,  73,  -1,  74,  -1,  75,  -1,  77,  -1,  80,  -1,  87,  -1,  93,  -1,
		  94,  -1, 101,  -1, 102,  -1, 107,  -1, 108,  -1,  92, 176,  -1,  -2,   1,  90,
		  85,  90,  87,  90,  89,  90, 103,  90, 107,  90, 108,  90, 117,  90, 118,  90,
		 119,  90, 120,  90, 121,  90, 122,  90, 123,  90, 124,  90, 125,  90, 126,  90,
		 127,  90,  88, 204,  90, 204,  92, 204,  -1,  -2,  85,  -1,   1, 257,  -1,  -2,
		   1,  -1,   2,  -1,   3,  -1,   4,  -1,   5,  -1,   8,  -1,   9,  -1,  11,  -1,
		  14,  -1,  15,  -1,  19,  -1,  23,  -1,  29,  -1,  32,  -1,  39,  -1,  44,  -1,
		  46,  -1,  47,  -1,  48,  -1,  50,  -1,  57,  -1,  59,  -1,  61,  -1,  62,  -1,
		  65,  -1,  68,  -1,  70,  -1,  72,  -1,  73,  -1,  74,  -1,  75,  -1,  77,  -1,
		  80,  -1,  87,  -1,  93,  -1,  94,  -1, 101,  -1, 102,  -1, 107,  -1, 108,  -1,
		  88,  89,  -1,  -2,   1,  -1,   2,  -1,   3,  -1,   4,  -1,   5,  -1,   8,  -1,
		   9,  -1,  11,  -1,  14,  -1,  15,  -1,  19,  -1,  23,  -1,  29,  -1,  32,  -1,
		  39,  -1,  44,  -1,  46,  -1,  47,  -1,  48,  -1,  50,  -1,  57,  -1,  59,  -1,
		  61,  -1,  62,  -1,  65,  -1,  68,  -1,  70,  -1,  72,  -1,  73,  -1,  74,  -1,
		  75,  -1,  77,  -1,  80,  -1,  87,  -1,  93,  -1,  94,  -1, 101,  -1, 102,  -1,
		 107,  -1, 108,  -1,  88,  89,  -1,  -2,  24,  -1,   1, 168,   2, 168,   3, 168,
		   4, 168,   5, 168,   8, 168,   9, 168,  10, 168,  11, 168,  12, 168,  14, 168,
		  15, 168,  17, 168,  18, 168,  19, 168,  20, 168,  22, 168,  23, 168,  29, 168,
		  32, 168,  33, 168,  34, 168,  35, 168,  36, 168,  39, 168,  43, 168,  44, 168,
		  46, 168,  47, 168,  48, 168,  58, 168,  59, 168,  61, 168,  62, 168,  65, 168,
		  67, 168,  68, 168,  69, 168,  70, 168,  71, 168,  72, 168,  73, 168,  74, 168,
		  75, 168,  76, 168,  77, 168,  78, 168,  80, 168,  82, 168,  83, 168,  84, 168,
		  87, 168,  92, 168,  93, 168,  94, 168, 101, 168, 102, 168, 107, 168, 108, 168,
		  -1,  -2,  12,  -1,  20,  -1,  84, 212,  -1,  -2,   1,  -1,  88, 236,  -1,  -2,
		   1,  -1,   2,  -1,   3,  -1,   4,  -1,   5,  -1,   8,  -1,   9,  -1,  11,  -1,
		  14,  -1,  15,  -1,  19,  -1,  23,  -1,  29,  -1,  32,  -1,  39,  -1,  44,  -1,
		  46,  -1,  47,  -1,  48,  -1,  59,  -1,  61,  -1,  62,  -1,  65,  -1,  68,  -1,
		  70,  -1,  72,  -1,  73,  -1,  74,  -1,  75,  -1,  77,  -1,  80,  -1,  87,  -1,
		  93,  -1,  94,  -1, 101,  -1, 102,  -1, 107,  -1, 108,  -1,  88, 178,  -1,  -2,
		  12,  -1,  20,  -1,  84, 211,  -1,  -2,  90,  -1,  88, 177,  -1,  -2,   1,  -1,
		   2,  -1,   3,  -1,   4,  -1,   5,  -1,   8,  -1,   9,  -1,  10,  -1,  11,  -1,
		  14,  -1,  15,  -1,  17,  -1,  18,  -1,  19,  -1,  22,  -1,  23,  -1,  29,  -1,
		  32,  -1,  33,  -1,  34,  -1,  35,  -1,  36,  -1,  39,  -1,  43,  -1,  44,  -1,
		  46,  -1,  47,  -1,  48,  -1,  58,  -1,  59,  -1,  61,  -1,  62,  -1,  65,  -1,
		  67,  -1,  68,  -1,  69,  -1,  70,  -1,  71,  -1,  72,  -1,  73,  -1,  74,  -1,
		  75,  -1,  76,  -1,  77,  -1,  78,  -1,  80,  -1,  82,  -1,  83,  -1,  87,  -1,
		  92,  -1,  93,  -1,  94,  -1, 101,  -1, 102,  -1, 107,  -1, 108,  -1,  12, 217,
		  20, 217,  84, 217,  -1,  -2,
	};

	static readonly short[] lapg_sym_goto = new short[307+1] {
		   0,   1, 144, 225, 306, 387, 468, 472, 475, 557, 657, 670, 771, 775, 777, 878,
		 959, 961, 968, 981,1081,1085,1087,1100,1200,1201,1203,1206,1207,1211,1293,1295,
		1295,1395,1408,1421,1434,1447,1448,1449,1550,1552,1556,1559,1572,1673,1676,1762,
		1843,1943,1945,1952,1956,1957,1961,1965,1969,1973,1980,1994,2095,2099,2200,2281,
		2281,2285,2385,2387,2400,2485,2498,2580,2593,2674,2775,2876,2957,2974,3075,3091,
		3095,3195,3199,3213,3254,3269,3307,3317,3428,3457,3474,3499,3509,3554,3639,3724,
		3746,3750,3754,3757,3760,3763,3845,3928,3934,3938,3942,3943,4029,4115,4117,4118,
		4124,4130,4133,4136,4140,4144,4146,4148,4150,4152,4154,4156,4158,4160,4162,4164,
		4168,4169,4169,4169,4169,4169,4169,4170,4172,4174,4176,4178,4202,4206,4208,4213,
		4294,4327,4438,4458,4477,4577,4596,4615,4634,4641,4722,4726,4727,4736,4837,4842,
		4848,4885,4966,5047,5128,5131,5136,5217,5218,5219,5224,5305,5386,5438,5488,5536,
		5580,5622,5663,5703,5742,5780,5817,5854,5907,5909,5913,5918,5925,5930,5943,5968,
		5984,5985,5986,5987,5990,5991,5993,6006,6007,6008,6010,6013,6015,6018,6019,6020,
		6022,6024,6025,6028,6029,6030,6032,6033,6035,6037,6038,6041,6044,6047,6053,6059,
		6065,6071,6077,6083,6107,6109,6110,6111,6112,6115,6117,6119,6122,6125,6128,6131,
		6134,6137,6140,6143,6146,6149,6150,6154,6157,6159,6163,6169,6174,6180,6187,6194,
		6195,6196,6197,6200,6204,6205,6206,6207,6208,6209,6212,6213,6214,6215,6216,6217,
		6218,6219,6220,6221,6222,6225,6228,6229,6230,6231,6232,6233,6234,6235,6237,6238,
		6239,6241,6242,6245,6246,6247,6248,6249,6250,6251,6253,6279,6280,6282,6286,6290,
		6291,6292,6293,6294,
	};

	static readonly short[] lapg_sym_from = new short[6294] {
		 729,   1,   8,   9,  24,  26,  60,  62,  63,  67,  68,  69,  70,  71,  93, 108,
		 109, 110, 111, 112, 113, 114, 144, 154, 155, 156, 157, 161, 162, 163, 173, 174,
		 175, 178, 179, 181, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
		 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 228, 231, 240, 241,
		 243, 247, 252, 253, 307, 322, 327, 328, 350, 365, 373, 374, 382, 384, 391, 401,
		 405, 410, 411, 412, 414, 418, 421, 422, 425, 437, 441, 450, 481, 482, 483, 488,
		 491, 493, 496, 499, 501, 508, 509, 512, 525, 527, 528, 535, 543, 548, 552, 556,
		 557, 558, 561, 562, 565, 570, 571, 574, 577, 585, 590, 607, 615, 655, 656, 657,
		 660, 661, 663, 669, 670, 676, 677, 683, 688, 696, 698, 699, 704, 714, 720, 724,
		  63, 108, 109, 110, 111, 112, 113, 114, 155, 157, 163, 174, 179, 181, 193, 194,
		 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
		 213, 214, 216, 240, 241, 243, 247, 252, 253, 307, 322, 327, 365, 418, 437, 482,
		 493, 499, 501, 508, 509, 525, 527, 556, 558, 561, 562, 565, 570, 571, 574, 577,
		 655, 656, 657, 660, 661, 669, 670, 676, 677, 683, 696, 698, 699, 704, 714, 720,
		 724,  63, 108, 109, 110, 111, 112, 113, 114, 155, 157, 163, 174, 179, 181, 193,
		 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211,
		 212, 213, 214, 216, 240, 241, 243, 247, 252, 253, 307, 322, 327, 365, 418, 437,
		 482, 493, 499, 501, 508, 509, 525, 527, 556, 558, 561, 562, 565, 570, 571, 574,
		 577, 655, 656, 657, 660, 661, 669, 670, 676, 677, 683, 696, 698, 699, 704, 714,
		 720, 724,  63, 108, 109, 110, 111, 112, 113, 114, 155, 157, 163, 174, 179, 181,
		 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210,
		 211, 212, 213, 214, 216, 240, 241, 243, 247, 252, 253, 307, 322, 327, 365, 418,
		 437, 482, 493, 499, 501, 508, 509, 525, 527, 556, 558, 561, 562, 565, 570, 571,
		 574, 577, 655, 656, 657, 660, 661, 669, 670, 676, 677, 683, 696, 698, 699, 704,
		 714, 720, 724,  63, 108, 109, 110, 111, 112, 113, 114, 155, 157, 163, 174, 179,
		 181, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209,
		 210, 211, 212, 213, 214, 216, 240, 241, 243, 247, 252, 253, 307, 322, 327, 365,
		 418, 437, 482, 493, 499, 501, 508, 509, 525, 527, 556, 558, 561, 562, 565, 570,
		 571, 574, 577, 655, 656, 657, 660, 661, 669, 670, 676, 677, 683, 696, 698, 699,
		 704, 714, 720, 724,  21,  55, 330, 372, 130, 280, 281,  63, 108, 109, 110, 111,
		 112, 113, 114, 155, 157, 163, 174, 179, 181, 193, 194, 195, 196, 197, 198, 199,
		 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 240, 241,
		 243, 247, 252, 253, 307, 322, 327, 365, 418, 437, 482, 493, 499, 501, 508, 509,
		 525, 527, 556, 558, 561, 562, 565, 570, 571, 574, 577, 596, 655, 656, 657, 660,
		 661, 669, 670, 676, 677, 683, 696, 698, 699, 704, 714, 720, 724,  63,  68,  93,
		 108, 109, 110, 111, 112, 113, 114, 155, 157, 161, 162, 163, 174, 179, 181, 193,
		 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
		 210, 211, 212, 213, 214, 216, 240, 241, 243, 247, 252, 253, 307, 322, 327, 365,
		 373, 374, 382, 384, 391, 401, 418, 421, 437, 441, 482, 488, 491, 493, 499, 501,
		 508, 509, 525, 527, 556, 557, 558, 561, 562, 565, 570, 571, 574, 577, 585, 607,
		 655, 656, 657, 660, 661, 669, 670, 676, 677, 683, 696, 698, 699, 704, 714, 720,
		 724, 437, 493, 525, 574, 660, 661, 669, 670, 698, 704, 714, 720, 724,  63,  68,
		  93, 108, 109, 110, 111, 112, 113, 114, 155, 157, 161, 162, 163, 174, 179, 181,
		 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
		 209, 210, 211, 212, 213, 214, 216, 225, 240, 241, 243, 247, 252, 253, 307, 322,
		 327, 365, 373, 374, 382, 384, 391, 401, 418, 421, 437, 441, 482, 488, 491, 493,
		 499, 501, 508, 509, 525, 527, 556, 557, 558, 561, 562, 565, 570, 571, 574, 577,
		 585, 607, 655, 656, 657, 660, 661, 669, 670, 676, 677, 683, 696, 698, 699, 704,
		 714, 720, 724, 496, 686, 702, 704, 567, 629,  63,  68,  93, 108, 109, 110, 111,
		 112, 113, 114, 155, 157, 161, 162, 163, 174, 179, 181, 193, 194, 195, 196, 197,
		 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
		 214, 216, 225, 240, 241, 243, 247, 252, 253, 307, 322, 327, 365, 373, 374, 382,
		 384, 391, 401, 418, 421, 437, 441, 482, 488, 491, 493, 499, 501, 508, 509, 525,
		 527, 556, 557, 558, 561, 562, 565, 570, 571, 574, 577, 585, 607, 655, 656, 657,
		 660, 661, 669, 670, 676, 677, 683, 696, 698, 699, 704, 714, 720, 724,  63, 108,
		 109, 110, 111, 112, 113, 114, 155, 157, 163, 174, 179, 181, 193, 194, 195, 196,
		 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
		 216, 240, 241, 243, 247, 252, 253, 307, 322, 327, 365, 418, 437, 482, 493, 499,
		 501, 508, 509, 525, 527, 556, 558, 561, 562, 565, 570, 571, 574, 577, 655, 656,
		 657, 660, 661, 669, 670, 676, 677, 683, 696, 698, 699, 704, 714, 720, 724,  56,
		 373, 330, 372, 437, 525, 574, 704, 720, 437, 493, 525, 574, 660, 661, 669, 670,
		 698, 704, 714, 720, 724,  63,  68,  93, 108, 109, 110, 111, 112, 113, 114, 155,
		 157, 161, 162, 163, 174, 179, 181, 193, 194, 195, 196, 197, 198, 199, 200, 201,
		 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 240, 241,
		 243, 247, 252, 253, 307, 322, 327, 365, 373, 374, 382, 384, 391, 401, 418, 421,
		 437, 441, 482, 488, 491, 493, 499, 501, 508, 509, 525, 527, 556, 557, 558, 561,
		 562, 565, 570, 571, 574, 577, 585, 607, 655, 656, 657, 660, 661, 669, 670, 676,
		 677, 683, 696, 698, 699, 704, 714, 720, 724, 496, 686, 702, 704,  56, 373, 437,
		 493, 525, 574, 660, 661, 669, 670, 698, 704, 714, 720, 724,  63,  68,  93, 108,
		 109, 110, 111, 112, 113, 114, 155, 157, 161, 162, 163, 174, 179, 181, 193, 194,
		 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
		 211, 212, 213, 214, 216, 240, 241, 243, 247, 252, 253, 307, 322, 327, 365, 373,
		 374, 382, 384, 391, 401, 418, 421, 437, 441, 482, 488, 491, 493, 499, 501, 508,
		 509, 525, 527, 556, 557, 558, 561, 562, 565, 570, 571, 574, 577, 585, 607, 655,
		 656, 657, 660, 661, 669, 670, 676, 677, 683, 696, 698, 699, 704, 714, 720, 724,
		 684,  56, 373,   9, 373, 391, 373,  21,  55, 330, 372,  63, 108, 109, 110, 111,
		 112, 113, 114, 155, 157, 163, 174, 179, 181, 193, 194, 195, 196, 197, 198, 199,
		 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 240, 241,
		 243, 247, 252, 253, 307, 322, 327, 365, 418, 428, 437, 482, 493, 499, 501, 508,
		 509, 525, 527, 556, 558, 561, 562, 565, 570, 571, 574, 577, 655, 656, 657, 660,
		 661, 669, 670, 676, 677, 683, 696, 698, 699, 704, 714, 720, 724, 567, 627,  63,
		  68,  93, 108, 109, 110, 111, 112, 113, 114, 155, 157, 161, 162, 163, 174, 179,
		 181, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
		 208, 209, 210, 211, 212, 213, 214, 216, 240, 241, 243, 247, 252, 253, 307, 322,
		 327, 365, 373, 374, 382, 384, 391, 401, 418, 421, 437, 441, 482, 488, 491, 493,
		 499, 501, 508, 509, 525, 527, 556, 557, 558, 561, 562, 565, 570, 571, 574, 577,
		 585, 607, 655, 656, 657, 660, 661, 669, 670, 676, 677, 683, 696, 698, 699, 704,
		 714, 720, 724, 437, 493, 525, 574, 660, 661, 669, 670, 698, 704, 714, 720, 724,
		 437, 493, 525, 574, 660, 661, 669, 670, 698, 704, 714, 720, 724, 437, 493, 525,
		 574, 660, 661, 669, 670, 698, 704, 714, 720, 724, 437, 493, 525, 574, 660, 661,
		 669, 670, 698, 704, 714, 720, 724, 373, 658,  63,  68,  93, 108, 109, 110, 111,
		 112, 113, 114, 155, 157, 161, 162, 163, 174, 179, 181, 193, 194, 195, 196, 197,
		 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
		 214, 216, 225, 240, 241, 243, 247, 252, 253, 307, 322, 327, 365, 373, 374, 382,
		 384, 391, 401, 418, 421, 437, 441, 482, 488, 491, 493, 499, 501, 508, 509, 525,
		 527, 556, 557, 558, 561, 562, 565, 570, 571, 574, 577, 585, 607, 655, 656, 657,
		 660, 661, 669, 670, 676, 677, 683, 696, 698, 699, 704, 714, 720, 724,  56, 373,
		  21,  55, 330, 372, 130, 280, 281, 437, 493, 525, 574, 660, 661, 669, 670, 698,
		 704, 714, 720, 724,  63,  68,  93, 108, 109, 110, 111, 112, 113, 114, 155, 157,
		 161, 162, 163, 174, 179, 181, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
		 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 225, 240, 241,
		 243, 247, 252, 253, 307, 322, 327, 365, 373, 374, 382, 384, 391, 401, 418, 421,
		 437, 441, 482, 488, 491, 493, 499, 501, 508, 509, 525, 527, 556, 557, 558, 561,
		 562, 565, 570, 571, 574, 577, 585, 607, 655, 656, 657, 660, 661, 669, 670, 676,
		 677, 683, 696, 698, 699, 704, 714, 720, 724,   2,  11,  73,  21,  55,  63, 108,
		 109, 110, 111, 112, 113, 114, 155, 157, 163, 174, 179, 181, 193, 194, 195, 196,
		 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
		 216, 240, 241, 243, 247, 252, 253, 307, 322, 327, 330, 355, 365, 372, 418, 437,
		 482, 493, 499, 501, 508, 509, 525, 527, 556, 558, 561, 562, 565, 570, 571, 574,
		 577, 655, 656, 657, 660, 661, 669, 670, 676, 677, 683, 696, 698, 699, 704, 714,
		 720, 724,  63, 108, 109, 110, 111, 112, 113, 114, 155, 157, 163, 174, 179, 181,
		 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210,
		 211, 212, 213, 214, 216, 240, 241, 243, 247, 252, 253, 307, 322, 327, 365, 418,
		 437, 482, 493, 499, 501, 508, 509, 525, 527, 556, 558, 561, 562, 565, 570, 571,
		 574, 577, 655, 656, 657, 660, 661, 669, 670, 676, 677, 683, 696, 698, 699, 704,
		 714, 720, 724,  63,  68,  93, 108, 109, 110, 111, 112, 113, 114, 155, 157, 161,
		 162, 163, 174, 179, 181, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
		 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 240, 241, 243, 247,
		 252, 253, 307, 322, 327, 365, 373, 374, 382, 384, 391, 401, 418, 421, 437, 441,
		 482, 488, 491, 493, 499, 501, 508, 509, 525, 527, 556, 557, 558, 561, 562, 565,
		 570, 571, 574, 577, 585, 607, 655, 656, 657, 660, 661, 669, 670, 676, 677, 683,
		 696, 698, 699, 704, 714, 720, 724, 405, 409, 174, 240, 322, 344, 577, 676, 677,
		  21,  55, 330, 372, 344,  21,  55, 330, 372,  21,  55, 330, 372,  21,  55, 330,
		 372,  21,  55, 330, 372, 174, 240, 322, 344, 577, 676, 677,   9, 437, 493, 525,
		 574, 660, 661, 669, 670, 698, 704, 714, 720, 724,  63,  68,  93, 108, 109, 110,
		 111, 112, 113, 114, 155, 157, 161, 162, 163, 174, 179, 181, 193, 194, 195, 196,
		 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
		 213, 214, 216, 225, 240, 241, 243, 247, 252, 253, 307, 322, 327, 365, 373, 374,
		 382, 384, 391, 401, 418, 421, 437, 441, 482, 488, 491, 493, 499, 501, 508, 509,
		 525, 527, 556, 557, 558, 561, 562, 565, 570, 571, 574, 577, 585, 607, 655, 656,
		 657, 660, 661, 669, 670, 676, 677, 683, 696, 698, 699, 704, 714, 720, 724,  21,
		  55, 330, 372,  63,  68,  93, 108, 109, 110, 111, 112, 113, 114, 155, 157, 161,
		 162, 163, 174, 179, 181, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
		 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 225, 240, 241, 243,
		 247, 252, 253, 307, 322, 327, 365, 373, 374, 382, 384, 391, 401, 418, 421, 437,
		 441, 482, 488, 491, 493, 499, 501, 508, 509, 525, 527, 556, 557, 558, 561, 562,
		 565, 570, 571, 574, 577, 585, 607, 655, 656, 657, 660, 661, 669, 670, 676, 677,
		 683, 696, 698, 699, 704, 714, 720, 724,  63, 108, 109, 110, 111, 112, 113, 114,
		 155, 157, 163, 174, 179, 181, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204,
		 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 240, 241, 243, 247, 252,
		 253, 307, 322, 327, 365, 418, 437, 482, 493, 499, 501, 508, 509, 525, 527, 556,
		 558, 561, 562, 565, 570, 571, 574, 577, 655, 656, 657, 660, 661, 669, 670, 676,
		 677, 683, 696, 698, 699, 704, 714, 720, 724,  21,  55, 330, 372,  63,  68,  93,
		 108, 109, 110, 111, 112, 113, 114, 155, 157, 161, 162, 163, 174, 179, 181, 193,
		 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
		 210, 211, 212, 213, 214, 216, 240, 241, 243, 247, 252, 253, 307, 322, 327, 365,
		 373, 374, 382, 384, 391, 401, 418, 421, 437, 441, 482, 488, 491, 493, 499, 501,
		 508, 509, 525, 527, 556, 557, 558, 561, 562, 565, 570, 571, 574, 577, 585, 607,
		 655, 656, 657, 660, 661, 669, 670, 676, 677, 683, 696, 698, 699, 704, 714, 720,
		 724,  56, 373, 437, 493, 525, 574, 660, 661, 669, 670, 698, 704, 714, 720, 724,
		  63, 108, 109, 110, 111, 112, 113, 114, 155, 157, 163, 174, 179, 181, 193, 194,
		 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
		 213, 214, 216, 240, 241, 243, 247, 252, 253, 307, 322, 327, 365, 405, 418, 422,
		 437, 481, 482, 493, 499, 501, 508, 509, 525, 527, 556, 558, 561, 562, 565, 570,
		 571, 574, 577, 596, 655, 656, 657, 660, 661, 669, 670, 676, 677, 683, 696, 698,
		 699, 704, 714, 720, 724, 437, 493, 525, 574, 660, 661, 669, 670, 698, 704, 714,
		 720, 724,  63, 108, 109, 110, 111, 112, 113, 114, 155, 157, 163, 174, 179, 181,
		 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210,
		 211, 212, 213, 214, 216, 240, 241, 243, 247, 252, 253, 307, 322, 327, 365, 418,
		 428, 437, 482, 493, 499, 501, 508, 509, 525, 527, 556, 558, 561, 562, 565, 570,
		 571, 574, 577, 655, 656, 657, 660, 661, 669, 670, 676, 677, 683, 696, 698, 699,
		 704, 714, 720, 724, 437, 493, 525, 574, 660, 661, 669, 670, 698, 704, 714, 720,
		 724,  63, 108, 109, 110, 111, 112, 113, 114, 155, 157, 163, 174, 179, 181, 193,
		 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211,
		 212, 213, 214, 216, 240, 241, 243, 247, 252, 253, 307, 322, 327, 365, 418, 437,
		 482, 493, 499, 501, 508, 509, 525, 527, 556, 558, 561, 562, 565, 570, 571, 574,
		 577, 655, 656, 657, 660, 661, 669, 670, 676, 677, 683, 696, 698, 699, 704, 714,
		 720, 724,  63,  68,  93, 108, 109, 110, 111, 112, 113, 114, 155, 157, 161, 162,
		 163, 174, 179, 181, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
		 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 225, 240, 241, 243, 247,
		 252, 253, 307, 322, 327, 365, 373, 374, 382, 384, 391, 401, 418, 421, 437, 441,
		 482, 488, 491, 493, 499, 501, 508, 509, 525, 527, 556, 557, 558, 561, 562, 565,
		 570, 571, 574, 577, 585, 607, 655, 656, 657, 660, 661, 669, 670, 676, 677, 683,
		 696, 698, 699, 704, 714, 720, 724,  63,  68,  93, 108, 109, 110, 111, 112, 113,
		 114, 155, 157, 161, 162, 163, 174, 179, 181, 193, 194, 195, 196, 197, 198, 199,
		 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216,
		 225, 240, 241, 243, 247, 252, 253, 307, 322, 327, 365, 373, 374, 382, 384, 391,
		 401, 418, 421, 437, 441, 482, 488, 491, 493, 499, 501, 508, 509, 525, 527, 556,
		 557, 558, 561, 562, 565, 570, 571, 574, 577, 585, 607, 655, 656, 657, 660, 661,
		 669, 670, 676, 677, 683, 696, 698, 699, 704, 714, 720, 724,  63, 108, 109, 110,
		 111, 112, 113, 114, 155, 157, 163, 174, 179, 181, 193, 194, 195, 196, 197, 198,
		 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 240,
		 241, 243, 247, 252, 253, 307, 322, 327, 365, 418, 437, 482, 493, 499, 501, 508,
		 509, 525, 527, 556, 558, 561, 562, 565, 570, 571, 574, 577, 655, 656, 657, 660,
		 661, 669, 670, 676, 677, 683, 696, 698, 699, 704, 714, 720, 724,  21,  55, 330,
		 372, 437, 493, 525, 574, 660, 661, 669, 670, 698, 704, 714, 720, 724,  63,  68,
		  93, 108, 109, 110, 111, 112, 113, 114, 155, 157, 161, 162, 163, 174, 179, 181,
		 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
		 209, 210, 211, 212, 213, 214, 216, 225, 240, 241, 243, 247, 252, 253, 307, 322,
		 327, 365, 373, 374, 382, 384, 391, 401, 418, 421, 437, 441, 482, 488, 491, 493,
		 499, 501, 508, 509, 525, 527, 556, 557, 558, 561, 562, 565, 570, 571, 574, 577,
		 585, 607, 655, 656, 657, 660, 661, 669, 670, 676, 677, 683, 696, 698, 699, 704,
		 714, 720, 724,   0,   3,  59, 437, 493, 525, 574, 660, 661, 669, 670, 698, 704,
		 714, 720, 724,  21,  55, 330, 372,  63,  68,  93, 108, 109, 110, 111, 112, 113,
		 114, 155, 157, 161, 162, 163, 174, 179, 181, 193, 194, 195, 196, 197, 198, 199,
		 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216,
		 240, 241, 243, 247, 252, 253, 307, 322, 327, 365, 373, 374, 382, 384, 391, 401,
		 418, 421, 437, 441, 482, 488, 491, 493, 499, 501, 508, 509, 525, 527, 556, 557,
		 558, 561, 562, 565, 570, 571, 574, 577, 585, 607, 655, 656, 657, 660, 661, 669,
		 670, 676, 677, 683, 696, 698, 699, 704, 714, 720, 724,  21,  55, 330, 372, 437,
		 493, 525, 555, 574, 660, 661, 669, 670, 698, 704, 714, 720, 724,  28, 159, 218,
		 226, 229, 232, 241, 365, 399, 406, 434, 437, 452, 456, 482, 490, 493, 502, 503,
		 504, 525, 574, 588, 597, 599, 603, 604, 624, 625, 646, 660, 661, 662, 669, 670,
		 698, 704, 714, 720, 723, 724, 152, 313, 331, 351, 356, 360, 365, 389, 524, 544,
		 591, 595, 678, 691, 701,   2,  11,  12,  37,  73,  82, 121, 148, 160, 165, 223,
		 291, 293, 296, 299, 302, 332, 357, 366, 386, 389, 398, 426, 435, 453, 485, 486,
		 487, 511, 532, 533, 534, 537, 545, 575, 592, 653, 675,  34,  62,  74, 154, 237,
		 261, 262, 315, 547, 594,  36,  63,  86,  98, 102, 105, 108, 109, 110, 111, 112,
		 113, 114, 118, 155, 157, 158, 163, 174, 179, 181, 193, 194, 195, 196, 197, 198,
		 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 221,
		 240, 241, 243, 247, 252, 253, 307, 322, 327, 365, 404, 418, 434, 436, 437, 445,
		 452, 482, 490, 493, 494, 495, 497, 498, 499, 500, 501, 503, 505, 506, 508, 509,
		 513, 525, 526, 527, 554, 556, 558, 561, 562, 565, 570, 571, 574, 577, 609, 624,
		 632, 648, 649, 655, 656, 657, 660, 661, 669, 670, 676, 677, 683, 696, 698, 699,
		 704, 714, 720, 724, 139, 165, 166, 239, 244, 245, 246, 257, 309, 345, 457, 530,
		 546, 549, 593, 619, 620, 622, 635, 636, 638, 639, 654, 680, 692, 693, 697, 707,
		 712,   6,  28,  32,  58,  82, 117, 118, 142, 164, 289, 369, 430, 454, 511, 513,
		 554, 632,  34,  74, 140, 179, 222, 237, 243, 254, 261, 263, 290, 298, 301, 314,
		 315, 347, 352, 432, 443, 455, 549, 576, 608, 614, 713,  33, 141, 149, 150, 151,
		 286, 510, 538, 700, 716,   6,  58, 234, 292, 297, 300, 303, 385, 406, 432, 437,
		 443, 455, 489, 492, 493, 518, 519, 522, 525, 531, 559, 560, 564, 566, 574, 588,
		 597, 599, 603, 612, 616, 641, 645, 660, 661, 669, 670, 681, 695, 698, 704, 714,
		 720, 724,  63, 108, 109, 110, 111, 112, 113, 114, 128, 155, 157, 163, 174, 179,
		 181, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209,
		 210, 211, 212, 213, 214, 216, 240, 241, 243, 247, 252, 253, 272, 273, 307, 322,
		 327, 365, 418, 428, 437, 482, 493, 499, 501, 508, 509, 525, 527, 556, 558, 561,
		 562, 565, 570, 571, 574, 577, 655, 656, 657, 660, 661, 669, 670, 676, 677, 683,
		 696, 698, 699, 704, 714, 720, 724,  63, 108, 109, 110, 111, 112, 113, 114, 128,
		 155, 157, 163, 174, 179, 181, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204,
		 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 240, 241, 243, 247, 252,
		 253, 272, 273, 307, 322, 327, 365, 418, 428, 437, 482, 493, 499, 501, 508, 509,
		 525, 527, 556, 558, 561, 562, 565, 570, 571, 574, 577, 655, 656, 657, 660, 661,
		 669, 670, 676, 677, 683, 696, 698, 699, 704, 714, 720, 724, 127, 144, 158, 165,
		 244, 245, 270, 271, 274, 275, 405, 410, 412, 413, 422, 425, 428, 450, 526, 548,
		 552, 615, 127, 270, 271, 428, 127, 270, 271, 428, 132, 283, 428, 134, 285, 428,
		 133, 284, 428,  63, 108, 109, 110, 111, 112, 113, 114, 155, 157, 163, 174, 179,
		 181, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209,
		 210, 211, 212, 213, 214, 216, 240, 241, 243, 247, 252, 253, 307, 322, 327, 365,
		 418, 428, 437, 482, 493, 499, 501, 508, 509, 525, 527, 556, 558, 561, 562, 565,
		 570, 571, 574, 577, 655, 656, 657, 660, 661, 669, 670, 676, 677, 683, 696, 698,
		 699, 704, 714, 720, 724,  63, 108, 109, 110, 111, 112, 113, 114, 155, 157, 163,
		 174, 179, 181, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207,
		 208, 209, 210, 211, 212, 213, 214, 216, 240, 241, 243, 247, 252, 253, 307, 322,
		 327, 365, 376, 418, 428, 437, 482, 493, 499, 501, 508, 509, 525, 527, 556, 558,
		 561, 562, 565, 570, 571, 574, 577, 655, 656, 657, 660, 661, 669, 670, 676, 677,
		 683, 696, 698, 699, 704, 714, 720, 724,   7, 125, 387, 431, 442, 515, 130, 280,
		 281, 428, 130, 280, 281, 428, 136,  63, 108, 109, 110, 111, 112, 113, 114, 118,
		 155, 157, 163, 174, 179, 181, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204,
		 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 240, 241, 243, 247, 252,
		 253, 307, 322, 327, 365, 418, 428, 437, 482, 493, 499, 501, 508, 509, 513, 525,
		 527, 554, 556, 558, 561, 562, 565, 570, 571, 574, 577, 632, 655, 656, 657, 660,
		 661, 669, 670, 676, 677, 683, 696, 698, 699, 704, 714, 720, 724,  63, 108, 109,
		 110, 111, 112, 113, 114, 118, 155, 157, 163, 174, 179, 181, 193, 194, 195, 196,
		 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
		 216, 240, 241, 243, 247, 252, 253, 307, 322, 327, 365, 418, 428, 437, 482, 493,
		 499, 501, 508, 509, 513, 525, 527, 554, 556, 558, 561, 562, 565, 570, 571, 574,
		 577, 632, 655, 656, 657, 660, 661, 669, 670, 676, 677, 683, 696, 698, 699, 704,
		 714, 720, 724, 135, 287, 136, 129, 276, 277, 278, 279, 428, 129, 276, 277, 278,
		 279, 428, 131, 282, 428, 131, 282, 428, 130, 280, 281, 428, 130, 280, 281, 428,
		 125, 515, 125, 515, 125, 515, 125, 515, 125, 515, 125, 515, 125, 515, 125, 515,
		 125, 515, 125, 515, 118, 513, 554, 632, 123,   0,   0,  59,   0,  59,   2,  73,
		   2,  73,   2,  11,  73, 291, 293, 296, 299, 302, 332, 357, 386, 389, 426, 485,
		 486, 487, 532, 533, 534, 537, 545, 592, 653, 675,  21,  55, 330, 372,  21, 330,
		 234, 292, 297, 300, 303,  63, 108, 109, 110, 111, 112, 113, 114, 155, 157, 163,
		 174, 179, 181, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207,
		 208, 209, 210, 211, 212, 213, 214, 216, 240, 241, 243, 247, 252, 253, 307, 322,
		 327, 365, 418, 437, 482, 493, 499, 501, 508, 509, 525, 527, 556, 558, 561, 562,
		 565, 570, 571, 574, 577, 655, 656, 657, 660, 661, 669, 670, 676, 677, 683, 696,
		 698, 699, 704, 714, 720, 724,   1,   8,   9,  26,  60,  62,  68,  93, 154, 161,
		 162, 201, 202, 217, 228, 231, 328, 373, 374, 382, 384, 391, 401, 405, 421, 425,
		 441, 488, 491, 557, 585, 607, 663,   1,  63,  67,  69,  70,  71, 108, 109, 110,
		 111, 112, 113, 114, 144, 155, 156, 157, 163, 173, 174, 175, 178, 179, 181, 193,
		 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211,
		 212, 213, 214, 216, 240, 241, 243, 247, 252, 253, 307, 322, 327, 350, 365, 373,
		 405, 410, 411, 412, 414, 418, 422, 425, 437, 450, 482, 483, 493, 496, 499, 501,
		 508, 509, 512, 525, 527, 528, 543, 548, 552, 556, 558, 561, 562, 565, 570, 571,
		 574, 577, 590, 615, 655, 656, 657, 660, 661, 669, 670, 676, 677, 683, 688, 696,
		 698, 699, 704, 714, 720, 724,  68,  93, 161, 162, 201, 202, 373, 374, 382, 384,
		 391, 401, 421, 441, 488, 491, 557, 585, 607, 663,  68,  93, 161, 162, 201, 202,
		 373, 374, 382, 384, 391, 401, 421, 441, 488, 491, 557, 585, 607,  63,  68,  93,
		 108, 109, 110, 111, 112, 113, 114, 155, 157, 161, 162, 163, 174, 179, 181, 193,
		 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
		 210, 211, 212, 213, 214, 216, 240, 241, 243, 247, 252, 253, 307, 322, 327, 365,
		 373, 374, 382, 384, 391, 401, 418, 421, 437, 441, 482, 488, 491, 493, 499, 501,
		 508, 509, 525, 527, 556, 557, 558, 561, 562, 565, 570, 571, 574, 577, 585, 607,
		 655, 656, 657, 660, 661, 669, 670, 676, 677, 683, 696, 698, 699, 704, 714, 720,
		 724,  68,  93, 161, 162, 201, 202, 373, 374, 382, 384, 391, 401, 421, 441, 488,
		 491, 557, 585, 607,  68,  93, 161, 162, 201, 202, 373, 374, 382, 384, 391, 401,
		 421, 441, 488, 491, 557, 585, 607,  68,  93, 161, 162, 201, 202, 373, 374, 382,
		 384, 391, 401, 421, 441, 488, 491, 557, 585, 607, 437, 525, 556, 570, 574, 704,
		 720,  63, 108, 109, 110, 111, 112, 113, 114, 155, 157, 163, 174, 179, 181, 193,
		 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211,
		 212, 213, 214, 216, 240, 241, 243, 247, 252, 253, 307, 322, 327, 365, 418, 437,
		 482, 493, 499, 501, 508, 509, 525, 527, 556, 558, 561, 562, 565, 570, 571, 574,
		 577, 655, 656, 657, 660, 661, 669, 670, 676, 677, 683, 696, 698, 699, 704, 714,
		 720, 724, 148, 160, 366, 511, 108, 121, 148, 160, 165, 223, 366, 398, 511, 575,
		  63,  68,  93, 108, 109, 110, 111, 112, 113, 114, 155, 157, 161, 162, 163, 174,
		 179, 181, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
		 207, 208, 209, 210, 211, 212, 213, 214, 216, 225, 240, 241, 243, 247, 252, 253,
		 307, 322, 327, 365, 373, 374, 382, 384, 391, 401, 418, 421, 437, 441, 482, 488,
		 491, 493, 499, 501, 508, 509, 525, 527, 556, 557, 558, 561, 562, 565, 570, 571,
		 574, 577, 585, 607, 655, 656, 657, 660, 661, 669, 670, 676, 677, 683, 696, 698,
		 699, 704, 714, 720, 724, 174, 240, 577, 676, 677, 174, 240, 322, 577, 676, 677,
		  63, 108, 155, 157, 163, 174, 179, 193, 213, 216, 240, 241, 243, 252, 253, 307,
		 322, 327, 365, 418, 482, 499, 501, 527, 558, 561, 562, 565, 570, 571, 577, 655,
		 656, 676, 677, 683, 699,  63, 108, 109, 110, 111, 112, 113, 114, 155, 157, 163,
		 174, 179, 181, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207,
		 208, 209, 210, 211, 212, 213, 214, 216, 240, 241, 243, 247, 252, 253, 307, 322,
		 327, 365, 418, 437, 482, 493, 499, 501, 508, 509, 525, 527, 556, 558, 561, 562,
		 565, 570, 571, 574, 577, 655, 656, 657, 660, 661, 669, 670, 676, 677, 683, 696,
		 698, 699, 704, 714, 720, 724,  63, 108, 109, 110, 111, 112, 113, 114, 155, 157,
		 163, 174, 179, 181, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206,
		 207, 208, 209, 210, 211, 212, 213, 214, 216, 240, 241, 243, 247, 252, 253, 307,
		 322, 327, 365, 418, 437, 482, 493, 499, 501, 508, 509, 525, 527, 556, 558, 561,
		 562, 565, 570, 571, 574, 577, 655, 656, 657, 660, 661, 669, 670, 676, 677, 683,
		 696, 698, 699, 704, 714, 720, 724,  63, 108, 109, 110, 111, 112, 113, 114, 155,
		 157, 163, 174, 179, 181, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205,
		 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 240, 241, 243, 247, 252, 253,
		 307, 322, 327, 365, 418, 437, 482, 493, 499, 501, 508, 509, 525, 527, 556, 558,
		 561, 562, 565, 570, 571, 574, 577, 655, 656, 657, 660, 661, 669, 670, 676, 677,
		 683, 696, 698, 699, 704, 714, 720, 724, 155, 179, 243, 174, 240, 577, 676, 677,
		  63, 108, 109, 110, 111, 112, 113, 114, 155, 157, 163, 174, 179, 181, 193, 194,
		 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
		 213, 214, 216, 240, 241, 243, 247, 252, 253, 307, 322, 327, 365, 418, 437, 482,
		 493, 499, 501, 508, 509, 525, 527, 556, 558, 561, 562, 565, 570, 571, 574, 577,
		 655, 656, 657, 660, 661, 669, 670, 676, 677, 683, 696, 698, 699, 704, 714, 720,
		 724, 366, 399, 159, 241, 365, 399, 482,  63, 108, 109, 110, 111, 112, 113, 114,
		 155, 157, 163, 174, 179, 181, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204,
		 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 240, 241, 243, 247, 252,
		 253, 307, 322, 327, 365, 418, 437, 482, 493, 499, 501, 508, 509, 525, 527, 556,
		 558, 561, 562, 565, 570, 571, 574, 577, 655, 656, 657, 660, 661, 669, 670, 676,
		 677, 683, 696, 698, 699, 704, 714, 720, 724,  63, 108, 109, 110, 111, 112, 113,
		 114, 155, 157, 163, 174, 179, 181, 193, 194, 195, 196, 197, 198, 199, 200, 203,
		 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 240, 241, 243, 247,
		 252, 253, 307, 322, 327, 365, 418, 437, 482, 493, 499, 501, 508, 509, 525, 527,
		 556, 558, 561, 562, 565, 570, 571, 574, 577, 655, 656, 657, 660, 661, 669, 670,
		 676, 677, 683, 696, 698, 699, 704, 714, 720, 724,  63, 108, 155, 157, 163, 174,
		 179, 193, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
		 213, 214, 216, 240, 241, 243, 252, 253, 307, 322, 327, 365, 418, 482, 499, 501,
		 527, 558, 561, 562, 565, 570, 571, 577, 655, 656, 676, 677, 683, 699,  63, 108,
		 155, 157, 163, 174, 179, 193, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210,
		 211, 212, 213, 214, 216, 240, 241, 243, 252, 253, 307, 322, 327, 365, 418, 482,
		 499, 501, 527, 558, 561, 562, 565, 570, 571, 577, 655, 656, 676, 677, 683, 699,
		  63, 108, 155, 157, 163, 174, 179, 193, 203, 204, 205, 206, 207, 208, 209, 210,
		 211, 212, 213, 214, 216, 240, 241, 243, 252, 253, 307, 322, 327, 365, 418, 482,
		 499, 501, 527, 558, 561, 562, 565, 570, 571, 577, 655, 656, 676, 677, 683, 699,
		  63, 108, 155, 157, 163, 174, 179, 193, 207, 208, 209, 210, 211, 212, 213, 214,
		 216, 240, 241, 243, 252, 253, 307, 322, 327, 365, 418, 482, 499, 501, 527, 558,
		 561, 562, 565, 570, 571, 577, 655, 656, 676, 677, 683, 699,  63, 108, 155, 157,
		 163, 174, 179, 193, 209, 210, 211, 212, 213, 214, 216, 240, 241, 243, 252, 253,
		 307, 322, 327, 365, 418, 482, 499, 501, 527, 558, 561, 562, 565, 570, 571, 577,
		 655, 656, 676, 677, 683, 699,  63, 108, 155, 157, 163, 174, 179, 193, 210, 211,
		 212, 213, 214, 216, 240, 241, 243, 252, 253, 307, 322, 327, 365, 418, 482, 499,
		 501, 527, 558, 561, 562, 565, 570, 571, 577, 655, 656, 676, 677, 683, 699,  63,
		 108, 155, 157, 163, 174, 179, 193, 211, 212, 213, 214, 216, 240, 241, 243, 252,
		 253, 307, 322, 327, 365, 418, 482, 499, 501, 527, 558, 561, 562, 565, 570, 571,
		 577, 655, 656, 676, 677, 683, 699,  63, 108, 155, 157, 163, 174, 179, 193, 212,
		 213, 214, 216, 240, 241, 243, 252, 253, 307, 322, 327, 365, 418, 482, 499, 501,
		 527, 558, 561, 562, 565, 570, 571, 577, 655, 656, 676, 677, 683, 699,  63, 108,
		 155, 157, 163, 174, 179, 193, 213, 214, 216, 240, 241, 243, 252, 253, 307, 322,
		 327, 365, 418, 482, 499, 501, 527, 558, 561, 562, 565, 570, 571, 577, 655, 656,
		 676, 677, 683, 699,  63, 108, 155, 157, 163, 174, 179, 193, 213, 216, 240, 241,
		 243, 252, 253, 307, 322, 327, 365, 418, 482, 499, 501, 527, 558, 561, 562, 565,
		 570, 571, 577, 655, 656, 676, 677, 683, 699,  63, 108, 155, 157, 163, 174, 179,
		 193, 213, 216, 240, 241, 243, 252, 253, 307, 322, 327, 365, 418, 482, 499, 501,
		 527, 558, 561, 562, 565, 570, 571, 577, 655, 656, 676, 677, 683, 699,  63, 108,
		 155, 157, 163, 174, 179, 193, 213, 216, 240, 241, 243, 252, 253, 307, 322, 327,
		 365, 418, 437, 482, 493, 499, 501, 525, 527, 556, 558, 561, 562, 565, 570, 571,
		 574, 577, 655, 656, 657, 660, 661, 669, 670, 676, 677, 683, 696, 698, 699, 704,
		 714, 720, 724, 125, 515, 418, 527, 558, 699, 437, 525, 574, 704, 720, 437, 525,
		 556, 570, 574, 704, 720, 437, 525, 574, 704, 720, 437, 493, 525, 574, 660, 661,
		 669, 670, 698, 704, 714, 720, 724, 406, 437, 490, 493, 502, 503, 504, 525, 574,
		 588, 597, 599, 603, 624, 625, 660, 661, 669, 670, 698, 704, 714, 720, 723, 724,
		 437, 493, 525, 556, 574, 657, 660, 661, 669, 670, 696, 698, 704, 714, 720, 724,
		 662, 556, 556, 499, 501, 656, 696, 556, 696, 437, 493, 525, 574, 660, 661, 669,
		 670, 698, 704, 714, 720, 724, 570, 437, 437, 704, 405, 425, 512, 410, 552, 410,
		 528, 552, 686, 686, 686, 702, 686, 702, 704, 686, 702, 704, 567, 567, 567, 627,
		 567, 567, 629, 567, 629, 688,   2,  11,  73,   0,   3,  59,   2,  11,  73,   2,
		  11,  73, 291, 302, 332,   2,  11,  73, 291, 302, 332,   2,  11,  73, 291, 302,
		 332,   2,  11,  73, 291, 302, 332,   2,  11,  73, 291, 302, 332,   2,  11,  73,
		 291, 302, 332,   2,  11,  73, 291, 293, 296, 299, 302, 332, 357, 386, 389, 426,
		 485, 486, 487, 532, 533, 534, 537, 545, 592, 653, 675,  21, 330, 141, 141, 218,
		 217, 228, 231, 291, 302, 291, 302, 291, 302, 332, 291, 302, 332, 291, 302, 332,
		 291, 302, 332, 291, 302, 332, 291, 302, 332, 291, 302, 332, 291, 302, 332, 291,
		 302, 332, 291, 302, 332, 330, 405, 425, 483, 512, 241, 365, 482, 405, 425, 293,
		 426, 486, 533, 293, 426, 486, 487, 533, 534, 406, 588, 597, 599, 603, 293, 426,
		 486, 487, 533, 534, 293, 386, 426, 486, 487, 533, 534, 293, 386, 426, 486, 487,
		 533, 534, 344, 344, 344, 485, 537, 653, 485, 537, 545, 653, 545, 405, 373, 373,
		 373, 488, 585, 607, 405, 428, 373, 538, 538, 330, 330, 151, 151, 232, 179, 222,
		 243, 179, 222, 243, 241, 241, 150, 150, 229, 299, 299, 299, 357, 355, 355, 532,
		 675, 422, 532, 592, 675, 592, 149, 149, 226, 296, 296, 296, 389,   2,  11,  12,
		  37,  73, 291, 293, 296, 299, 302, 332, 357, 386, 389, 426, 485, 486, 487, 532,
		 533, 534, 537, 545, 592, 653, 675,   9,   9,  60,   9,  60,  62, 154,   9,  60,
		  62, 154,  36,  36,  63,  63,
	};

	static readonly short[] lapg_sym_to = new short[6294] {
		 730,   5,  27,  29,  57,  27,  27,  27,  77,  77,  27,  77,  77,  77,  27,  77,
		  77,  77,  77,  77,  77,  77,  77,  27,  77,  77,  77,  27,  27,  77,  77,  77,
		  77,  77,  77,  77,  77,  77,  77,  77,  77,  77,  77,  77,  27,  27,  77,  77,
		  77,  77,  77,  77,  77,  77,  77,  77,  77,  77,  77,  27,  27,  27,  77,  77,
		  77,  77,  77,  77,  77,  77,  77,  27,  77,  77,   5,  27,  27,  27,  27,  27,
		 427,  77,  77,  77,  77,  77,  27,  77, 427,  77,  27,  77, 539,  77,  77,  27,
		  27,  77,  77,  77,  77,  77,  77,  77,  77,  77,  77, 539,  77,  77,  77,  77,
		  27,  77,  77,  77,  77,  77,  77,  77,  77,  27,  77,  27,  77,  77,  77,  77,
		  77,  77,  27,  77,  77,  77,  77,  77,  77,  77,  77,  77,  77,  77,  77,  77,
		  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,
		  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,
		  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,
		  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,
		  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,  78,
		  78,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,
		  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,
		  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,
		  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,
		  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,  79,
		  79,  79,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,
		  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,
		  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,
		  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,
		  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,
		  80,  80,  80,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,
		  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,
		  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,
		  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,
		  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,  81,
		  81,  81,  81,  81,  40,  40,  40,  40, 201, 201, 201,  82,  82,  82,  82,  82,
		  82,  82,  82,  82,  82,  82,  82,  82,  82,  82,  82,  82,  82,  82,  82,  82,
		  82,  82,  82,  82,  82,  82,  82,  82,  82,  82,  82,  82,  82,  82,  82,  82,
		  82,  82,  82,  82,  82,  82,  82,  82,  82,  82,  82,  82,  82,  82,  82,  82,
		  82,  82,  82,  82,  82,  82,  82,  82,  82,  82,  82, 648,  82,  82,  82,  82,
		  82,  82,  82,  82,  82,  82,  82,  82,  82,  82,  82,  82,  82,  83,  83,  83,
		  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,
		  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,
		  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,
		  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,
		  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,
		  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,  83,
		  83, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489, 489,  84,  84,
		  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,
		  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,
		  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,
		  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,
		  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,
		  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,  84,
		  84,  84,  84, 558, 699, 699, 699, 624, 624,  85,  85,  85,  85,  85,  85,  85,
		  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,
		  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,
		  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,
		  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,
		  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,
		  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  85,  86,  86,
		  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,
		  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,
		  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86, 490,  86, 490,  86,
		  86,  86,  86, 490,  86,  86,  86,  86,  86,  86,  86,  86, 490,  86,  86,  86,
		  86, 490, 490, 490, 490,  86,  86,  86,  86, 490,  86, 490, 490, 490, 490,  67,
		  67, 370, 400, 491, 491, 491, 491, 491, 492, 492, 492, 492, 492, 492, 492, 492,
		 492, 492, 492, 492, 492,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,
		  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,
		  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,
		  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,
		  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,
		  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,  87,
		  87,  87,  87,  87,  87,  87,  87,  87,  87, 559, 700, 700, 700,  68,  68, 493,
		 493, 493, 493, 493, 493, 493, 493, 493, 493, 493, 493, 493,  88,  88,  88,  88,
		  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,
		  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,
		  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,
		  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,
		  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,
		  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,  88,
		 698,  69,  69,  30, 401, 421, 402,  41,  41, 371,  41,  89,  89,  89,  89,  89,
		  89,  89,  89,  89,  89,  89,  89,  89,  89,  89,  89,  89,  89,  89,  89,  89,
		  89,  89,  89,  89,  89,  89,  89,  89,  89,  89,  89,  89,  89,  89,  89,  89,
		  89,  89,  89,  89,  89,  89,  89,  89,  89, 458,  89,  89,  89,  89,  89,  89,
		  89,  89,  89,  89,  89,  89,  89,  89,  89,  89,  89,  89,  89,  89,  89,  89,
		  89,  89,  89,  89,  89,  89,  89,  89,  89,  89,  89,  89,  89, 625, 625,  90,
		  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,
		  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,
		  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,
		  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,
		  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,
		  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,  90,
		  90,  90,  90, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494, 494,
		 495, 495, 495, 495, 495, 495, 495, 495, 495, 495, 495, 495, 495, 496, 496, 496,
		 496, 496, 496, 496, 496, 496, 496, 496, 496, 496, 497, 497, 497, 497, 497, 497,
		 497, 497, 497, 497, 497, 497, 497, 403, 683,  91,  91,  91,  91,  91,  91,  91,
		  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,
		  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,
		  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,
		  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,
		  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,
		  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  91,  70,  70,
		  42,  42,  42,  42, 202, 202, 202, 498, 498, 498, 498, 498, 498, 498, 498, 498,
		 498, 498, 498, 498,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,
		  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,
		  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,
		  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,
		  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,
		  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,  92,
		  92,  92,  92,  92,  92,  92,  92,  92,  92,   8,   8,   8,  43,  43,  93,  93,
		  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,
		  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,
		  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,  43, 390,  93,  43,  93,  93,
		  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,
		  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,  93,
		  93,  93,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,
		  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,
		  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,
		  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,
		  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,  94,
		  94,  94,  94,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,
		  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,
		  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,
		  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,
		  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,
		  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,  95,
		  95,  95,  95,  95,  95,  95,  95, 428, 441, 252, 252, 252, 379, 252, 252, 252,
		  44,  44,  44,  44, 380,  45,  45,  45,  45,  46,  46,  46,  46,  47,  47,  47,
		  47,  48,  48,  48,  48, 253, 253, 253, 381, 253, 253, 253,  31, 499, 499, 499,
		 499, 499, 499, 499, 499, 499, 499, 499, 499, 499,  96,  96,  96,  96,  96,  96,
		  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,
		  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,
		  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,
		  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,
		  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,
		  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  96,  49,
		  49,  49,  49,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,
		  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,
		  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,
		  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,
		  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,
		  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,  97,
		  97,  97,  97,  97,  97,  97,  97,  97,  98,  98,  98,  98,  98,  98,  98,  98,
		  98,  98,  98,  98,  98,  98,  98,  98,  98,  98,  98,  98,  98,  98,  98,  98,
		  98,  98,  98,  98,  98,  98,  98,  98,  98,  98,  98,  98,  98,  98,  98,  98,
		  98,  98,  98,  98,  98,  98,  98,  98,  98,  98,  98,  98,  98,  98,  98,  98,
		  98,  98,  98,  98,  98,  98,  98,  98,  98,  98,  98,  98,  98,  98,  98,  98,
		  98,  98,  98,  98,  98,  98,  98,  98,  98,  50,  50,  50,  50,  99,  99,  99,
		  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,
		  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,
		  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,
		  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,
		  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,
		  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,  99,
		  99,  71,  71, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
		 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
		 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
		 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 429, 100, 451,
		 100, 540, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
		 100, 100, 100, 649, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
		 100, 100, 100, 100, 100, 501, 501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
		 501, 501, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
		 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
		 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
		 459, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
		 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
		 101, 101, 101, 101, 502, 502, 502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
		 502, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
		 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
		 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
		 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
		 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
		 102, 102, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103,
		 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103,
		 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103,
		 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103,
		 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103,
		 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103,
		 103, 103, 103, 103, 103, 103, 103, 104, 104, 104, 104, 104, 104, 104, 104, 104,
		 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
		 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
		 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
		 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
		 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
		 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 105, 105, 105, 105,
		 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
		 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
		 105, 105, 105, 105, 105, 105, 105, 105, 105, 105, 503, 105, 503, 105, 105, 105,
		 105, 503, 105, 105, 105, 105, 105, 105, 105, 105, 503, 105, 105, 105, 105, 503,
		 503, 503, 503, 105, 105, 105, 105, 503, 105, 503, 503, 503, 503,  51,  51,  51,
		  51, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 504, 106, 106,
		 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
		 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
		 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
		 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
		 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
		 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
		 106, 106, 106,   1,   1,   1, 505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
		 505, 505, 505,  52,  52,  52,  52, 107, 107, 107, 107, 107, 107, 107, 107, 107,
		 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
		 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
		 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
		 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
		 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
		 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107,  53,  53,  53,  53, 506,
		 506, 506, 609, 506, 506, 506, 506, 506, 506, 506, 506, 506, 506,  59, 241, 291,
		 296, 299, 302, 241, 241, 241, 437, 485, 437, 532, 537, 241, 437, 437, 437, 437,
		 437, 437, 437, 437, 437, 437, 437, 653, 437, 437, 675, 437, 437, 686, 437, 437,
		 437, 437, 437, 437, 437, 437, 234, 364, 377, 388, 393, 395, 396, 419, 583, 600,
		 642, 647, 694, 708, 718,   9,   9,   9,   9,   9, 155, 179, 222, 243, 222, 222,
		   9,   9,   9,   9,   9,   9,   9, 222,   9,   9, 222,   9, 487, 534,   9,   9,
		   9, 222,   9,   9,   9,   9,   9, 222,   9,   9,   9,  61,  75, 153, 235, 306,
		 324, 325, 366, 604, 646,  63, 108, 157, 161, 162, 163, 108, 108, 108, 108, 108,
		 108, 108, 174, 108, 108, 240, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
		 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 293,
		 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 426, 108, 486, 488, 108, 530,
		 533, 108, 157, 108, 556, 557, 561, 562, 108, 565, 108, 163, 570, 571, 108, 108,
		 577, 108, 585, 108, 577, 108, 108, 108, 108, 108, 108, 108, 108, 108, 655, 663,
		 174, 676, 677, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
		 108, 108, 108, 108, 215, 247, 250, 308, 316, 317, 318, 323, 363, 385, 538, 588,
		 603, 606, 645, 660, 661, 662, 669, 670, 671, 672, 679, 695, 709, 710, 714, 723,
		 724,  24,  24,  24,  24, 156, 173, 175,  24, 173,  24,  24, 481, 535, 173, 175,
		 175, 175,  62, 154, 216, 260, 260, 307, 260, 322, 307, 326, 328, 328, 328, 365,
		 307, 386, 389, 483, 528, 483, 607, 483, 528, 657, 657,  60, 217, 225, 228, 231,
		 327, 574, 596, 717, 726,  25,  72, 304, 304, 304, 304, 304, 415, 438, 484, 507,
		 529, 536, 550, 553, 507, 580, 581, 582, 507, 589, 617, 618, 621, 623, 507, 438,
		 438, 438, 438, 656, 659, 673, 674, 507, 507, 507, 507, 696, 711, 507, 507, 507,
		 507, 507, 109, 109, 109, 109, 109, 109, 109, 109, 197, 109, 109, 109, 109, 109,
		 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109,
		 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 197, 197, 109, 109,
		 109, 109, 109, 460, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109,
		 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109,
		 109, 109, 109, 109, 109, 109, 109, 110, 110, 110, 110, 110, 110, 110, 110, 198,
		 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
		 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
		 110, 198, 198, 110, 110, 110, 110, 110, 461, 110, 110, 110, 110, 110, 110, 110,
		 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
		 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 194, 220, 220, 248,
		 220, 220, 194, 194, 220, 220, 220, 220, 220, 220, 220, 220, 462, 220, 220, 220,
		 220, 220, 195, 195, 195, 463, 196, 196, 196, 464, 209, 209, 465, 211, 211, 466,
		 210, 210, 467, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
		 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
		 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
		 111, 468, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
		 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
		 111, 111, 111, 111, 111, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
		 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
		 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
		 112, 112, 411, 112, 469, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
		 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
		 112, 112, 112, 112, 112, 112, 112, 112,  26, 182, 418, 482, 527, 182, 203, 203,
		 203, 470, 204, 204, 204, 471, 213, 113, 113, 113, 113, 113, 113, 113, 113, 176,
		 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
		 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
		 113, 113, 113, 113, 113, 113, 472, 508, 113, 508, 113, 113, 113, 113, 578, 508,
		 113, 578, 508, 113, 113, 113, 113, 113, 113, 508, 113, 176, 113, 113, 508, 508,
		 508, 508, 508, 113, 113, 113, 508, 508, 113, 508, 508, 508, 508, 114, 114, 114,
		 114, 114, 114, 114, 114, 177, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
		 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
		 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 473, 509, 114, 509,
		 114, 114, 114, 114, 579, 509, 114, 579, 509, 114, 114, 114, 114, 114, 114, 509,
		 114, 177, 114, 114, 509, 509, 509, 509, 509, 114, 114, 114, 509, 509, 114, 509,
		 509, 509, 509, 212, 212, 214, 199, 199, 199, 199, 199, 474, 200, 200, 200, 200,
		 200, 475, 207, 207, 476, 208, 208, 477, 205, 205, 205, 478, 206, 206, 206, 479,
		 183, 183, 184, 184, 185, 185, 186, 186, 187, 187, 188, 188, 189, 189, 190, 190,
		 191, 191, 192, 192, 178, 178, 178, 178, 181, 729,   2,  73,   3,   3,  10, 152,
		  11,  11,  12,  37,  37,  37,  37,  37,  37,  37,  37,  37,  37,  37,  37,  37,
		  37,  37,  37,  37,  37,  37,  37,  37,  37,  37,  54,  66,  54,  66,  55, 372,
		 305, 343, 354, 359, 361, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
		 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
		 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
		 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
		 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
		 115, 115, 115, 115, 115, 115,   6,  28,  32,  58,  32,  32, 142, 142,  32, 142,
		 142, 142, 142, 289, 289, 289, 369, 142, 142, 142, 142, 142, 142, 430, 142, 454,
		 142, 142, 142, 142, 142, 142, 142,   7, 116, 141, 149, 150, 151, 116, 116, 116,
		 116, 116, 116, 116, 221, 116, 238, 116, 116, 251, 116, 258, 259, 116, 116, 116,
		 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
		 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 387, 116, 404,
		 431, 442, 445, 446, 447, 116, 452, 431, 510, 531, 116, 431, 116, 560, 116, 116,
		 116, 116, 431, 510, 116, 442, 599, 605, 442, 116, 116, 116, 116, 116, 116, 116,
		 510, 116, 641, 658, 116, 116, 116, 116, 116, 116, 116, 116, 116, 116, 706, 116,
		 116, 116, 510, 116, 510, 116, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
		 143, 143, 143, 143, 143, 143, 143, 143, 143, 688, 144, 158, 244, 245, 274, 275,
		 405, 410, 412, 413, 422, 425, 450, 526, 548, 552, 615, 548, 548, 117, 145, 145,
		 164, 117, 117, 117, 117, 117, 117, 117, 117, 145, 145, 117, 117, 117, 117, 117,
		 117, 117, 117, 117, 117, 117, 117, 145, 145, 117, 117, 117, 117, 117, 117, 117,
		 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
		 145, 145, 145, 145, 145, 145, 117, 145, 511, 145, 117, 145, 145, 117, 117, 117,
		 117, 117, 511, 117, 511, 145, 117, 117, 117, 117, 511, 117, 511, 117, 145, 145,
		 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 511, 117, 511,
		 117, 146, 159, 146, 146, 146, 146, 146, 146, 146, 414, 146, 146, 146, 146, 146,
		 146, 146, 146, 146, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
		 147, 147, 147, 147, 147, 147, 147, 148, 160, 148, 148, 148, 148, 148, 148, 148,
		 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 512, 512, 512, 512, 512, 512,
		 512, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
		 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
		 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 118, 513,
		 118, 554, 118, 118, 118, 118, 513, 118, 513, 118, 118, 118, 118, 632, 118, 513,
		 118, 118, 118, 554, 554, 554, 554, 554, 118, 118, 118, 554, 554, 118, 513, 554,
		 513, 554, 223, 223, 398, 575, 165, 180, 224, 224, 249, 294, 224, 294, 224, 294,
		 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
		 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
		 119, 119, 119, 119, 119, 119, 119, 119, 119, 295, 119, 119, 119, 119, 119, 119,
		 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
		 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
		 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
		 119, 119, 119, 119, 119, 254, 254, 254, 254, 254, 255, 255, 367, 255, 255, 255,
		 120, 166, 236, 239, 246, 256, 236, 265, 286, 288, 256, 310, 236, 320, 321, 362,
		 256, 368, 310, 448, 310, 563, 563, 448, 448, 619, 620, 622, 633, 636, 256, 680,
		 563, 256, 256, 697, 448, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
		 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
		 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
		 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
		 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
		 121, 121, 121, 121, 121, 121, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
		 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
		 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
		 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
		 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
		 122, 122, 122, 122, 122, 122, 122, 123, 123, 123, 123, 123, 123, 123, 123, 123,
		 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
		 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
		 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
		 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
		 123, 123, 123, 123, 123, 123, 123, 123, 237, 261, 315, 257, 309, 638, 692, 693,
		 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
		 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
		 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 514, 124,
		 514, 124, 124, 124, 124, 514, 124, 514, 124, 124, 124, 124, 124, 124, 514, 124,
		 124, 124, 514, 514, 514, 514, 514, 124, 124, 124, 514, 514, 124, 514, 514, 514,
		 514, 399, 423, 242, 311, 311, 424, 311, 125, 125, 167, 168, 169, 170, 171, 172,
		 125, 125, 125, 125, 125, 264, 125, 266, 267, 268, 269, 269, 269, 269, 269, 269,
		 269, 269, 269, 269, 269, 269, 269, 269, 125, 269, 125, 125, 125, 125, 319, 125,
		 125, 125, 125, 125, 125, 125, 515, 125, 515, 125, 125, 572, 573, 515, 125, 515,
		 125, 125, 125, 125, 125, 125, 515, 125, 125, 125, 515, 515, 515, 515, 515, 125,
		 125, 125, 515, 515, 125, 515, 515, 515, 515, 126, 126, 126, 126, 126, 126, 126,
		 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
		 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
		 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
		 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
		 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 127, 127, 127, 127, 127, 127,
		 127, 127, 270, 271, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
		 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 128, 128,
		 128, 128, 128, 128, 128, 128, 272, 273, 128, 128, 128, 128, 128, 128, 128, 128,
		 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
		 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
		 129, 129, 129, 129, 129, 129, 129, 129, 276, 277, 278, 279, 129, 129, 129, 129,
		 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
		 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
		 130, 130, 130, 130, 130, 130, 130, 130, 280, 281, 130, 130, 130, 130, 130, 130,
		 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
		 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 130, 131, 131, 131, 131,
		 131, 131, 131, 131, 282, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131,
		 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131,
		 131, 131, 131, 131, 131, 131, 132, 132, 132, 132, 132, 132, 132, 132, 283, 132,
		 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132,
		 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 133,
		 133, 133, 133, 133, 133, 133, 133, 284, 133, 133, 133, 133, 133, 133, 133, 133,
		 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
		 133, 133, 133, 133, 133, 133, 133, 134, 134, 134, 134, 134, 134, 134, 134, 285,
		 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
		 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 135, 135,
		 135, 135, 135, 135, 135, 135, 135, 287, 135, 135, 135, 135, 135, 135, 135, 135,
		 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
		 135, 135, 135, 135, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
		 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
		 136, 136, 136, 136, 136, 136, 136, 136, 136, 137, 137, 137, 137, 137, 137, 137,
		 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
		 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 138, 138,
		 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
		 138, 138, 516, 138, 516, 138, 138, 516, 138, 516, 138, 138, 138, 138, 138, 138,
		 516, 138, 138, 138, 516, 516, 516, 516, 516, 138, 138, 138, 516, 516, 138, 516,
		 516, 516, 516, 193, 193, 449, 586, 616, 716, 517, 584, 637, 517, 584, 518, 518,
		 610, 634, 518, 518, 518, 519, 519, 519, 519, 519, 520, 555, 520, 520, 684, 685,
		 689, 690, 715, 520, 725, 520, 728, 439, 521, 551, 521, 567, 568, 569, 521, 521,
		 439, 439, 439, 439, 664, 665, 521, 521, 521, 521, 521, 521, 521, 521, 727, 521,
		 522, 522, 522, 611, 522, 682, 522, 522, 522, 522, 611, 522, 522, 522, 522, 522,
		 687, 612, 613, 564, 566, 681, 712, 614, 713, 523, 523, 523, 523, 523, 523, 523,
		 523, 523, 523, 523, 523, 523, 635, 524, 525, 720, 432, 455, 576, 443, 608, 444,
		 587, 444, 701, 702, 703, 719, 704, 704, 721, 705, 705, 722, 626, 627, 628, 666,
		 629, 630, 667, 631, 668, 707,  13,  13,  13,   4,  23,   4,  14,  38,  14,  15,
		  15,  15, 329, 329, 329,  16,  16,  16,  16,  16,  16,  17,  17,  17,  17,  17,
		  17,  18,  18,  18,  18,  18,  18,  19,  19,  19,  19,  19,  19,  20,  20,  20,
		  20,  20,  20,  21,  21,  21, 330, 344, 350, 355, 330, 330, 355, 344, 350, 344,
		 543, 344, 344, 590, 344, 344, 543, 543, 590, 543, 590,  56, 373, 218, 219, 292,
		 290, 298, 301, 331, 360, 332, 332, 333, 333, 378, 334, 334, 334, 335, 335, 335,
		 336, 336, 336, 337, 337, 337, 338, 338, 338, 339, 339, 339, 340, 340, 340, 341,
		 341, 341, 342, 342, 342, 374, 433, 433, 542, 433, 312, 397, 541, 434, 456, 345,
		 457, 546, 593, 346, 346, 346, 547, 346, 594, 440, 640, 650, 651, 652, 347, 347,
		 347, 347, 347, 347, 348, 416, 348, 348, 348, 348, 348, 349, 417, 349, 349, 349,
		 349, 349, 382, 383, 384, 544, 595, 678, 545, 545, 601, 545, 602, 435, 406, 407,
		 408, 549, 639, 654, 436, 480, 409, 597, 598, 375, 376, 232, 233, 303, 262, 262,
		 262, 263, 263, 263, 313, 314, 229, 230, 300, 356, 357, 358, 394, 391, 392, 591,
		 691, 453, 592, 643, 592, 644, 226, 227, 297, 351, 352, 353, 420,  22,  22,  39,
		  39,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,  22,
		  22,  22,  22,  22,  22,  22,  22,  33,  34,  74,  35,  35,  76,  76,  36,  36,
		  36,  36,  64,  65, 139, 140,
	};

	static readonly short[] lapg_rlen = new short[434] {
		   1,   0,   1,   0,   2,   2,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
		   1,   1,   1,   1,   1,   2,   0,   1,   1,   1,   1,   1,   1,   1,   1,   1,
		   3,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   2,   1,   2,   2,
		   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
		   1,   2,   1,   3,   1,   2,   2,   1,   1,   1,   1,   1,   1,   3,   4,   4,
		   4,   4,   4,   2,   2,   3,   3,   3,   1,   0,   4,   4,   2,   1,   1,   0,
		   1,   0,   7,   3,   5,   1,   2,   2,   2,   2,   2,   2,   1,   3,   3,   4,
		   1,   3,   3,   3,   1,   3,   3,   1,   3,   3,   1,   3,   3,   3,   3,   3,
		   3,   1,   3,   3,   1,   3,   1,   3,   1,   3,   1,   3,   1,   3,   1,   5,
		   3,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   3,   1,   1,
		   1,   3,   2,   2,   1,   1,   2,   1,   5,   7,   5,   5,   7,   1,   0,   1,
		   0,   1,   0,   9,   8,   2,   2,   3,   4,   3,   3,   3,   1,   5,   5,   2,
		   2,   2,   1,   0,   3,   1,   2,   2,   3,   1,   3,   3,   4,   1,   1,   2,
		   2,   2,   2,   1,   0,   3,   1,   2,   2,   1,   1,   2,   3,   2,   1,   1,
		   1,   3,   3,   1,   1,   2,   1,   2,   1,   1,   2,   1,   0,   6,   2,   2,
		   1,   1,   7,   1,   2,   5,   3,   1,   2,   1,   1,   1,   1,   1,   1,   1,
		   1,   0,   1,   0,   1,   0,   7,   2,   1,   3,   1,   0,   3,   1,   2,   1,
		   1,   1,   1,   1,   1,   1,   1,   1,   1,   5,   1,   2,   5,   1,   3,   1,
		   3,   1,   1,   1,   0,   8,   1,   3,   1,   3,   1,   1,   3,   1,   0,   4,
		   1,   1,   1,   4,   7,   1,   0,   2,   3,   1,   1,   6,   8,  10,   1,   3,
		   4,   1,   1,   2,   5,   7,   2,   1,   1,   1,   1,   1,   1,   1,   1,   1,
		   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   6,   1,   1,
		   1,   0,   8,   5,   5,   1,   1,   0,   7,   1,   0,   7,   2,   3,   2,   1,
		   2,   1,   0,   3,   1,   2,   1,   0,   3,   4,   1,   3,   1,   0,   7,   2,
		   1,   0,   3,   1,   2,   1,   0,   8,   7,   6,  10,   1,   1,   1,   0,   2,
		   3,   1,   0,   7,   2,   1,   0,   3,   4,   1,   3,   2,   4,   9,   1,   2,
		   6,   5,   4,   3,   1,   1,   1,   1,   3,   1,   0,   2,   1,   1,   0,   3,
		   1,   3,
	};

	static readonly short[] lapg_rlex = new short[434] {
		 135, 135, 137, 137, 134, 134, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140,
		 140, 140, 140, 140, 141, 141, 142, 142, 143, 143, 143, 143, 143, 143, 143, 144,
		 144, 145, 146, 147, 147, 147, 147, 151, 151, 151, 152, 152, 152, 155, 155, 155,
		 148, 148, 148, 148, 148, 148, 148, 148, 157, 157, 157, 157, 157, 157, 157, 157,
		 157, 150, 158, 158, 159, 159, 159, 153, 153, 161, 161, 161, 161, 161, 161, 161,
		 161, 161, 161, 161, 161, 161, 161, 161, 165, 165, 161, 161, 161, 161, 167, 167,
		 168, 168, 162, 162, 166, 170, 170, 170, 170, 170, 170, 170, 170, 163, 171, 171,
		 172, 172, 172, 172, 173, 173, 173, 174, 174, 174, 175, 175, 175, 175, 175, 175,
		 175, 176, 176, 176, 177, 177, 178, 178, 179, 179, 180, 180, 181, 181, 182, 182,
		 183, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 184, 164, 164, 160, 160,
		 185, 186, 186, 186, 186, 189, 189, 189, 189, 189, 189, 189, 189, 193, 193, 195,
		 195, 196, 196, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
		 189, 189, 200, 200, 190, 201, 201, 187, 188, 203, 203, 204, 191, 191, 191, 191,
		 191, 191, 191, 205, 205, 192, 206, 206, 207, 209, 208, 208, 210, 210, 194, 194,
		 197, 197, 198, 211, 211, 211, 212, 212, 212, 214, 214, 217, 217, 216, 215, 213,
		 199, 199, 218, 136, 136, 219, 219, 138, 138, 220, 220, 221, 221, 221, 221, 221,
		 227, 227, 228, 228, 229, 229, 222, 230, 232, 232, 233, 233, 231, 234, 234, 235,
		 235, 235, 235, 235, 235, 235, 235, 235, 235, 236, 245, 245, 237, 202, 202, 246,
		 246, 247, 247, 249, 249, 238, 248, 248, 250, 250, 250, 252, 252, 255, 255, 254,
		 256, 256, 257, 253, 239, 260, 260, 258, 259, 251, 251, 240, 240, 241, 261, 261,
		 242, 262, 262, 265, 263, 263, 266, 267, 267, 267, 267, 267, 267, 267, 267, 267,
		 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 267, 264, 268, 268,
		 269, 269, 243, 270, 270, 271, 272, 272, 244, 273, 273, 223, 274, 275, 149, 154,
		 154, 276, 276, 156, 277, 277, 278, 278, 169, 169, 279, 279, 280, 280, 224, 281,
		 283, 283, 282, 284, 284, 286, 286, 285, 285, 285, 285, 289, 287, 291, 291, 288,
		 290, 292, 292, 225, 293, 295, 295, 294, 294, 296, 296, 297, 297, 226, 139, 139,
		 298, 298, 298, 298, 299, 299, 299, 300, 300, 303, 303, 301, 302, 305, 305, 304,
		 306, 306,
	};

	#if DEBUG_syntax
	static readonly string[] lapg_syms = new string[] {
		"eoi",
		"identifier",
		"Licon",
		"Lfcon",
		"Lscon",
		"Lccon",
		"Labstract",
		"Las",
		"Lbase",
		"Lbool",
		"Lbreak",
		"Lbyte",
		"Lcase",
		"Lcatch",
		"Lchar",
		"Lchecked",
		"Lclass",
		"Lconst",
		"Lcontinue",
		"Ldecimal",
		"Ldefault",
		"Ldelegate",
		"Ldo",
		"Ldouble",
		"Lelse",
		"Lenum",
		"Levent",
		"Lexplicit",
		"Lextern",
		"Lfalse",
		"Lfinally",
		"Lfixed",
		"Lfloat",
		"Lfor",
		"Lforeach",
		"Lgoto",
		"Lif",
		"Limplicit",
		"Lin",
		"Lint",
		"Linterface",
		"Linternal",
		"Lis",
		"Llock",
		"Llong",
		"Lnamespace",
		"Lnew",
		"Lnull",
		"Lobject",
		"Loperator",
		"Lout",
		"Loverride",
		"Lparams",
		"Lprivate",
		"Lprotected",
		"Lpublic",
		"Lreadonly",
		"Lref",
		"Lreturn",
		"Lsbyte",
		"Lsealed",
		"Lshort",
		"Lsizeof",
		"Lstackalloc",
		"Lstatic",
		"Lstring",
		"Lstruct",
		"Lswitch",
		"Lthis",
		"Lthrow",
		"Ltrue",
		"Ltry",
		"Ltypeof",
		"Luint",
		"Lulong",
		"Lunchecked",
		"Lunsafe",
		"Lushort",
		"Lusing",
		"Lvirtual",
		"Lvoid",
		"Lvolatile",
		"Lwhile",
		"'{'",
		"'}'",
		"'['",
		"']'",
		"'('",
		"')'",
		"'.'",
		"','",
		"':'",
		"';'",
		"'+'",
		"'-'",
		"'*'",
		"'/'",
		"'%'",
		"'&'",
		"'|'",
		"'^'",
		"'!'",
		"'~'",
		"'='",
		"'<'",
		"'>'",
		"'?'",
		"'++'",
		"'--'",
		"'&&'",
		"'||'",
		"'<<'",
		"'>>'",
		"'=='",
		"'!='",
		"'<='",
		"'>='",
		"'+='",
		"'-='",
		"'*='",
		"'/='",
		"'%='",
		"'&='",
		"'|='",
		"'^='",
		"'<<='",
		"'>>='",
		"'->'",
		"cast_token",
		"comment",
		"_skip",
		"'/*'",
		"anysym1",
		"'*/'",
		"input",
		"using_directivesopt",
		"using_directives",
		"namespace_member_declarationsopt",
		"namespace_member_declarations",
		"attributes",
		"modifier",
		"modifiers",
		"optsemicolon",
		"literal",
		"qualified_identifier",
		"ID",
		"type_name",
		"type",
		"builtin_types",
		"array_type",
		"pointer_type",
		"non_array_type",
		"local_type",
		"primary_expression",
		"rank_specifiers",
		"cast_type",
		"rank_specifier",
		"integral_type",
		"argument_list",
		"argument",
		"expression",
		"primary_expression_na",
		"new_array_expression",
		"parenthesized",
		"expression_list",
		"argument_listopt",
		"object_or_delegate_creation_expression",
		"rank_specifiersopt",
		"array_initializeropt",
		"array_initializer",
		"unary_expression",
		"cast_expression",
		"multiplicative_expression",
		"additive_expression",
		"shift_expression",
		"relational_expression",
		"equality_expression",
		"and_expression",
		"exclusive_or_expression",
		"inclusive_or_expression",
		"conditional_and_expression",
		"conditional_or_expression",
		"conditional_expression",
		"assignment",
		"assignment_operator",
		"constant_expression",
		"statement",
		"local_variable_declaration",
		"local_constant_declaration",
		"embedded_statement",
		"block",
		"statement_expression",
		"switch_block",
		"for_initializeropt",
		"for_initializer",
		"expressionopt",
		"statement_expression_listopt",
		"statement_expression_list",
		"try_statement",
		"resource_acquisition",
		"statementsopt",
		"statements",
		"variable_declarators",
		"constant_declarators",
		"constant_declarator",
		"switch_sectionsopt",
		"switch_sections",
		"switch_section",
		"switch_labels",
		"statements_as_one",
		"switch_label",
		"catch_finally",
		"catch_clauses",
		"finally_clause",
		"specific_catch_clauses",
		"general_catch_clause",
		"specific_catch_clause",
		"IDopt",
		"namespace_declaration",
		"using_directive",
		"namespace_member_declaration",
		"type_declaration",
		"class_declaration",
		"struct_declaration",
		"interface_declaration",
		"enum_declaration",
		"delegate_declaration",
		"attributesopt",
		"modifiersopt",
		"class_baseopt",
		"class_base",
		"class_body",
		"type_list",
		"class_member_declarationsopt",
		"class_member_declarations",
		"class_member_declaration",
		"constant_declaration",
		"field_declaration",
		"method_declaration",
		"property_declaration",
		"event_declaration",
		"indexer_declaration",
		"operator_declaration",
		"constructor_declaration",
		"destructor_declaration",
		"const_modifiers",
		"variable_declarator",
		"variable_initializer",
		"member_name",
		"formal_parameter_listopt",
		"formal_parameter_list",
		"optional_body",
		"fixed_parameters",
		"parameter_array",
		"fixed_parameter",
		"parameter_modifieropt",
		"parameter_modifier",
		"params_modifier",
		"accessor_declarations",
		"accessor_declaration",
		"accessor_declarationopt",
		"indexer_name",
		"operator_declarator",
		"unary_binary_operator_declarator",
		"conversion_operator_declarator",
		"simple_parameter",
		"overloadable_operator_name",
		"overloadable_operator",
		"conversion_modifier",
		"constructor_initializeropt",
		"constructor_initializer",
		"destructor_modifier",
		"destructor_modifieropt",
		"struct_interfacesopt",
		"struct_interfaces",
		"struct_body",
		"dim_separatorsopt",
		"dim_separators",
		"variable_initializer_listopt",
		"variable_initializer_list",
		"interface_baseopt",
		"interface_base",
		"interface_body",
		"interface_member_declarationsopt",
		"interface_member_declarations",
		"interface_member_declaration",
		"iface_member_modifieropt",
		"iface_member_modifier",
		"interface_accessors",
		"iface_indexer_name",
		"interface_accessor",
		"interface_accessoropt",
		"enum_baseopt",
		"enum_base",
		"enum_body",
		"enum_member_declarationsopt",
		"enum_member_declarations",
		"enum_member_declaration",
		"attribute_sect",
		"attribute_target",
		"attribute_list",
		"attribute",
		"attribute_name",
		"attribute_argumentsopt",
		"attribute_arguments",
		"attribute_argument_listopt",
		"attribute_argument_list",
	};
	#endif

	public enum Tokens {
		eoi,
		identifier,
		Licon,
		Lfcon,
		Lscon,
		Lccon,
		Labstract,
		Las,
		Lbase,
		Lbool,
		Lbreak,
		Lbyte,
		Lcase,
		Lcatch,
		Lchar,
		Lchecked,
		Lclass,
		Lconst,
		Lcontinue,
		Ldecimal,
		Ldefault,
		Ldelegate,
		Ldo,
		Ldouble,
		Lelse,
		Lenum,
		Levent,
		Lexplicit,
		Lextern,
		Lfalse,
		Lfinally,
		Lfixed,
		Lfloat,
		Lfor,
		Lforeach,
		Lgoto,
		Lif,
		Limplicit,
		Lin,
		Lint,
		Linterface,
		Linternal,
		Lis,
		Llock,
		Llong,
		Lnamespace,
		Lnew,
		Lnull,
		Lobject,
		Loperator,
		Lout,
		Loverride,
		Lparams,
		Lprivate,
		Lprotected,
		Lpublic,
		Lreadonly,
		Lref,
		Lreturn,
		Lsbyte,
		Lsealed,
		Lshort,
		Lsizeof,
		Lstackalloc,
		Lstatic,
		Lstring,
		Lstruct,
		Lswitch,
		Lthis,
		Lthrow,
		Ltrue,
		Ltry,
		Ltypeof,
		Luint,
		Lulong,
		Lunchecked,
		Lunsafe,
		Lushort,
		Lusing,
		Lvirtual,
		Lvoid,
		Lvolatile,
		Lwhile,
		LBRACE,
		RBRACE,
		LBRACKET,
		RBRACKET,
		LROUNDBRACKET,
		RROUNDBRACKET,
		DOT,
		COMMA,
		COLON,
		SEMICOLON,
		PLUS,
		MINUS,
		MULT,
		DIV,
		PERC,
		AMP,
		OR,
		XOR,
		EXCL,
		TILDE,
		EQ,
		LESS,
		GREATER,
		QUESTMARK,
		PLUSPLUS,
		MINUSMINUS,
		AMPAMP,
		OROR,
		LESSLESS,
		GREATERGREATER,
		EQEQ,
		EXCLEQ,
		LESSEQ,
		GREATEREQ,
		PLUSEQ,
		MINUSEQ,
		MULTEQ,
		DIVEQ,
		PERCEQ,
		AMPEQ,
		OREQ,
		XOREQ,
		LESSLESSEQ,
		GREATERGREATEREQ,
		MINUSGREATER,
		cast_token,
		comment,
		_skip,
		DIVMULT,
		anysym1,
		MULTDIV,
		input,
		using_directivesopt,
		using_directives,
		namespace_member_declarationsopt,
		namespace_member_declarations,
		attributes,
		modifier,
		modifiers,
		optsemicolon,
		literal,
		qualified_identifier,
		ID,
		type_name,
		type,
		builtin_types,
		array_type,
		pointer_type,
		non_array_type,
		local_type,
		primary_expression,
		rank_specifiers,
		cast_type,
		rank_specifier,
		integral_type,
		argument_list,
		argument,
		expression,
		primary_expression_na,
		new_array_expression,
		parenthesized,
		expression_list,
		argument_listopt,
		object_or_delegate_creation_expression,
		rank_specifiersopt,
		array_initializeropt,
		array_initializer,
		unary_expression,
		cast_expression,
		multiplicative_expression,
		additive_expression,
		shift_expression,
		relational_expression,
		equality_expression,
		and_expression,
		exclusive_or_expression,
		inclusive_or_expression,
		conditional_and_expression,
		conditional_or_expression,
		conditional_expression,
		assignment,
		assignment_operator,
		constant_expression,
		statement,
		local_variable_declaration,
		local_constant_declaration,
		embedded_statement,
		block,
		statement_expression,
		switch_block,
		for_initializeropt,
		for_initializer,
		expressionopt,
		statement_expression_listopt,
		statement_expression_list,
		try_statement,
		resource_acquisition,
		statementsopt,
		statements,
		variable_declarators,
		constant_declarators,
		constant_declarator,
		switch_sectionsopt,
		switch_sections,
		switch_section,
		switch_labels,
		statements_as_one,
		switch_label,
		catch_finally,
		catch_clauses,
		finally_clause,
		specific_catch_clauses,
		general_catch_clause,
		specific_catch_clause,
		IDopt,
		namespace_declaration,
		using_directive,
		namespace_member_declaration,
		type_declaration,
		class_declaration,
		struct_declaration,
		interface_declaration,
		enum_declaration,
		delegate_declaration,
		attributesopt,
		modifiersopt,
		class_baseopt,
		class_base,
		class_body,
		type_list,
		class_member_declarationsopt,
		class_member_declarations,
		class_member_declaration,
		constant_declaration,
		field_declaration,
		method_declaration,
		property_declaration,
		event_declaration,
		indexer_declaration,
		operator_declaration,
		constructor_declaration,
		destructor_declaration,
		const_modifiers,
		variable_declarator,
		variable_initializer,
		member_name,
		formal_parameter_listopt,
		formal_parameter_list,
		optional_body,
		fixed_parameters,
		parameter_array,
		fixed_parameter,
		parameter_modifieropt,
		parameter_modifier,
		params_modifier,
		accessor_declarations,
		accessor_declaration,
		accessor_declarationopt,
		indexer_name,
		operator_declarator,
		unary_binary_operator_declarator,
		conversion_operator_declarator,
		simple_parameter,
		overloadable_operator_name,
		overloadable_operator,
		conversion_modifier,
		constructor_initializeropt,
		constructor_initializer,
		destructor_modifier,
		destructor_modifieropt,
		struct_interfacesopt,
		struct_interfaces,
		struct_body,
		dim_separatorsopt,
		dim_separators,
		variable_initializer_listopt,
		variable_initializer_list,
		interface_baseopt,
		interface_base,
		interface_body,
		interface_member_declarationsopt,
		interface_member_declarations,
		interface_member_declaration,
		iface_member_modifieropt,
		iface_member_modifier,
		interface_accessors,
		iface_indexer_name,
		interface_accessor,
		interface_accessoropt,
		enum_baseopt,
		enum_base,
		enum_body,
		enum_member_declarationsopt,
		enum_member_declarations,
		enum_member_declaration,
		attribute_sect,
		attribute_target,
		attribute_list,
		attribute,
		attribute_name,
		attribute_argumentsopt,
		attribute_arguments,
		attribute_argument_listopt,
		attribute_argument_list,
	}

	static int lapg_next( int state, int symbol ) {
		int p;
		if( lapg_action[state] < -2 ) {
			for( p = - lapg_action[state] - 3; lapg_lalr[p] >= 0; p += 2 )
				if( lapg_lalr[p] == symbol ) break;
			return lapg_lalr[p+1];
		}
		return lapg_action[state];
	}

	static int lapg_state_sym( int state, int symbol ) {
		int min = lapg_sym_goto[symbol], max = lapg_sym_goto[symbol+1]-1;
		int i, e;

		while( min <= max ) {
			e = (min + max) >> 1;
			i = lapg_sym_from[e];
			if( i == state )
				return lapg_sym_to[e];
			else if( i < state )
				min = e + 1;
			else
				max = e - 1;
		}
		return -1;
	}

	public bool parse() {

		byte[]        token = new byte[4096];
		int           lapg_head = 0, group = 0, lapg_i, lapg_size, chr;
		lapg_symbol[] lapg_m = new lapg_symbol[1024];
		lapg_symbol   lapg_n;
		System.Text.ASCIIEncoding AE = new System.Text.ASCIIEncoding();
		lapg_place    lapg_current;

		lapg_current.offset = 0;
		lapg_current.line = 1;
		lapg_m[0].state = 0; lapg_n.lexem = lapg_n.state = 0;
		chr = buff[l++];

		do {
			lapg_n.pos = lapg_current;
			for( lapg_size = 0, lapg_i = group; lapg_i >= 0; ) {
				if( lapg_size < 4096-1 ) token[lapg_size++] = (byte)chr;
				lapg_i = lapg_lexem[lapg_i,lapg_char2no[chr]];
				if( lapg_i >= -1 && chr != 0 ) { 
					lapg_current.offset++;
					if( chr == '\n' ) lapg_current.line++;
					chr = buff[l++];
				}
			}
			lapg_n.endpos = lapg_current;
			token[lapg_size] = 0;

			if( lapg_i == -1 ) {
				error( System.String.Format( "invalid lexem at line {0}: `{1}`, skipped", lapg_n.pos.line, new System.String(AE.GetChars(token,0,lapg_size)) ) );
				continue;
			}

			token[lapg_size-1] = 0;
			lapg_n.lexem = -lapg_i-2;
			lapg_n.sym = null;

			switch( lapg_n.lexem ) {
				case 1:
					#line 22 "syntax"
					 lapg_n.sym = new System.String(AE.GetChars(token,0,lapg_size-1)); break; 
				case 2:
					#line 26 "syntax"
					 lapg_n.sym = new System.String(AE.GetChars(token,0,lapg_size-1)); break; 
				case 3:
					#line 30 "syntax"
					 lapg_n.sym = new System.String(AE.GetChars(token,0,lapg_size-1)); break; 
				case 4:
					#line 33 "syntax"
					 lapg_n.sym = new System.String(AE.GetChars(token,0,lapg_size-1)); break; 
				case 5:
					#line 34 "syntax"
					 lapg_n.sym = new System.String(AE.GetChars(token,0,lapg_size-1)); break; 
				case 6:
					#line 38 "syntax"
					 lapg_n.sym = "abstract"; break; 
				case 7:
					#line 39 "syntax"
					 lapg_n.sym = "as"; break; 
				case 8:
					#line 40 "syntax"
					 lapg_n.sym = "base"; break; 
				case 9:
					#line 41 "syntax"
					 lapg_n.sym = "bool"; break; 
				case 10:
					#line 42 "syntax"
					 lapg_n.sym = "break"; break; 
				case 11:
					#line 43 "syntax"
					 lapg_n.sym = "byte"; break; 
				case 12:
					#line 44 "syntax"
					 lapg_n.sym = "case"; break; 
				case 13:
					#line 45 "syntax"
					 lapg_n.sym = "catch"; break; 
				case 14:
					#line 46 "syntax"
					 lapg_n.sym = "char"; break; 
				case 15:
					#line 47 "syntax"
					 lapg_n.sym = "checked"; break; 
				case 16:
					#line 48 "syntax"
					 lapg_n.sym = "class"; break; 
				case 17:
					#line 49 "syntax"
					 lapg_n.sym = "const"; break; 
				case 18:
					#line 50 "syntax"
					 lapg_n.sym = "continue"; break; 
				case 19:
					#line 51 "syntax"
					 lapg_n.sym = "decimal"; break; 
				case 20:
					#line 52 "syntax"
					 lapg_n.sym = "default"; break; 
				case 21:
					#line 53 "syntax"
					 lapg_n.sym = "delegate"; break; 
				case 22:
					#line 54 "syntax"
					 lapg_n.sym = "do"; break; 
				case 23:
					#line 55 "syntax"
					 lapg_n.sym = "double"; break; 
				case 24:
					#line 56 "syntax"
					 lapg_n.sym = "else"; break; 
				case 25:
					#line 57 "syntax"
					 lapg_n.sym = "enum"; break; 
				case 26:
					#line 58 "syntax"
					 lapg_n.sym = "event"; break; 
				case 27:
					#line 59 "syntax"
					 lapg_n.sym = "explicit"; break; 
				case 28:
					#line 60 "syntax"
					 lapg_n.sym = "extern"; break; 
				case 29:
					#line 61 "syntax"
					 lapg_n.sym = "false"; break; 
				case 30:
					#line 62 "syntax"
					 lapg_n.sym = "finally"; break; 
				case 31:
					#line 63 "syntax"
					 lapg_n.sym = "fixed"; break; 
				case 32:
					#line 64 "syntax"
					 lapg_n.sym = "float"; break; 
				case 33:
					#line 65 "syntax"
					 lapg_n.sym = "for"; break; 
				case 34:
					#line 66 "syntax"
					 lapg_n.sym = "foreach"; break; 
				case 35:
					#line 67 "syntax"
					 lapg_n.sym = "goto"; break; 
				case 36:
					#line 68 "syntax"
					 lapg_n.sym = "if"; break; 
				case 37:
					#line 69 "syntax"
					 lapg_n.sym = "implicit"; break; 
				case 38:
					#line 70 "syntax"
					 lapg_n.sym = "in"; break; 
				case 39:
					#line 71 "syntax"
					 lapg_n.sym = "int"; break; 
				case 40:
					#line 72 "syntax"
					 lapg_n.sym = "interface"; break; 
				case 41:
					#line 73 "syntax"
					 lapg_n.sym = "internal"; break; 
				case 42:
					#line 74 "syntax"
					 lapg_n.sym = "is"; break; 
				case 43:
					#line 75 "syntax"
					 lapg_n.sym = "lock"; break; 
				case 44:
					#line 76 "syntax"
					 lapg_n.sym = "long"; break; 
				case 45:
					#line 77 "syntax"
					 lapg_n.sym = "namespace"; break; 
				case 46:
					#line 78 "syntax"
					 lapg_n.sym = "new"; break; 
				case 47:
					#line 79 "syntax"
					 lapg_n.sym = "null"; break; 
				case 48:
					#line 80 "syntax"
					 lapg_n.sym = "object"; break; 
				case 49:
					#line 81 "syntax"
					 lapg_n.sym = "operator"; break; 
				case 50:
					#line 82 "syntax"
					 lapg_n.sym = "out"; break; 
				case 51:
					#line 83 "syntax"
					 lapg_n.sym = "override"; break; 
				case 52:
					#line 84 "syntax"
					 lapg_n.sym = "params"; break; 
				case 53:
					#line 85 "syntax"
					 lapg_n.sym = "private"; break; 
				case 54:
					#line 86 "syntax"
					 lapg_n.sym = "protected"; break; 
				case 55:
					#line 87 "syntax"
					 lapg_n.sym = "public"; break; 
				case 56:
					#line 88 "syntax"
					 lapg_n.sym = "readonly"; break; 
				case 57:
					#line 89 "syntax"
					 lapg_n.sym = "ref"; break; 
				case 58:
					#line 90 "syntax"
					 lapg_n.sym = "return"; break; 
				case 59:
					#line 91 "syntax"
					 lapg_n.sym = "sbyte"; break; 
				case 60:
					#line 92 "syntax"
					 lapg_n.sym = "sealed"; break; 
				case 61:
					#line 93 "syntax"
					 lapg_n.sym = "short"; break; 
				case 62:
					#line 94 "syntax"
					 lapg_n.sym = "sizeof"; break; 
				case 63:
					#line 95 "syntax"
					 lapg_n.sym = "stackalloc"; break; 
				case 64:
					#line 96 "syntax"
					 lapg_n.sym = "static"; break; 
				case 65:
					#line 97 "syntax"
					 lapg_n.sym = "string"; break; 
				case 66:
					#line 98 "syntax"
					 lapg_n.sym = "struct"; break; 
				case 67:
					#line 99 "syntax"
					 lapg_n.sym = "switch"; break; 
				case 68:
					#line 100 "syntax"
					 lapg_n.sym = "this"; break; 
				case 69:
					#line 101 "syntax"
					 lapg_n.sym = "throw"; break; 
				case 70:
					#line 102 "syntax"
					 lapg_n.sym = "true"; break; 
				case 71:
					#line 103 "syntax"
					 lapg_n.sym = "try"; break; 
				case 72:
					#line 104 "syntax"
					 lapg_n.sym = "typeof"; break; 
				case 73:
					#line 105 "syntax"
					 lapg_n.sym = "uint"; break; 
				case 74:
					#line 106 "syntax"
					 lapg_n.sym = "ulong"; break; 
				case 75:
					#line 107 "syntax"
					 lapg_n.sym = "unchecked"; break; 
				case 76:
					#line 108 "syntax"
					 lapg_n.sym = "unsafe"; break; 
				case 77:
					#line 109 "syntax"
					 lapg_n.sym = "ushort"; break; 
				case 78:
					#line 110 "syntax"
					 lapg_n.sym = "using"; break; 
				case 79:
					#line 111 "syntax"
					 lapg_n.sym = "virtual"; break; 
				case 80:
					#line 112 "syntax"
					 lapg_n.sym = "void"; break; 
				case 81:
					#line 113 "syntax"
					 lapg_n.sym = "volatile"; break; 
				case 82:
					#line 114 "syntax"
					 lapg_n.sym = "while"; break; 
				case 83:
					#line 118 "syntax"
					 lapg_n.sym = "{"; break;
				case 84:
					#line 119 "syntax"
					 lapg_n.sym = "}"; break;
				case 85:
					#line 120 "syntax"
					 lapg_n.sym = "["; break; 
				case 86:
					#line 121 "syntax"
					 lapg_n.sym = "]"; break; 
				case 87:
					#line 122 "syntax"
					 lapg_n.sym = "("; break; 
				case 88:
					#line 123 "syntax"
					 lapg_n.sym = ")"; break; 
				case 89:
					#line 124 "syntax"
					 lapg_n.sym = "."; break; 
				case 90:
					#line 125 "syntax"
					 lapg_n.sym = ","; break; 
				case 91:
					#line 126 "syntax"
					 lapg_n.sym = ":"; break; 
				case 92:
					#line 127 "syntax"
					 lapg_n.sym = ";"; break; 
				case 93:
					#line 128 "syntax"
					 lapg_n.sym = "+"; break; 
				case 94:
					#line 129 "syntax"
					 lapg_n.sym = "-"; break; 
				case 95:
					#line 130 "syntax"
					 lapg_n.sym = "*"; break; 
				case 96:
					#line 131 "syntax"
					 lapg_n.sym = "/"; break; 
				case 97:
					#line 132 "syntax"
					 lapg_n.sym = "%"; break; 
				case 98:
					#line 133 "syntax"
					 lapg_n.sym = "&"; break; 
				case 99:
					#line 134 "syntax"
					 lapg_n.sym = "|"; break; 
				case 100:
					#line 135 "syntax"
					 lapg_n.sym = "^"; break; 
				case 101:
					#line 136 "syntax"
					 lapg_n.sym = "!"; break; 
				case 102:
					#line 137 "syntax"
					 lapg_n.sym = "~"; break; 
				case 103:
					#line 138 "syntax"
					 lapg_n.sym = "="; break; 
				case 104:
					#line 139 "syntax"
					 lapg_n.sym = "<"; break; 
				case 105:
					#line 140 "syntax"
					 lapg_n.sym = ">"; break; 
				case 106:
					#line 141 "syntax"
					 lapg_n.sym = "?"; break; 
				case 107:
					#line 142 "syntax"
					 lapg_n.sym = "++"; break; 
				case 108:
					#line 143 "syntax"
					 lapg_n.sym = "--"; break; 
				case 109:
					#line 144 "syntax"
					 lapg_n.sym = "&&"; break; 
				case 110:
					#line 145 "syntax"
					 lapg_n.sym = "||"; break; 
				case 111:
					#line 146 "syntax"
					 lapg_n.sym = "<<"; break; 
				case 112:
					#line 147 "syntax"
					 lapg_n.sym = ">>"; break; 
				case 113:
					#line 148 "syntax"
					 lapg_n.sym = "=="; break; 
				case 114:
					#line 149 "syntax"
					 lapg_n.sym = "!="; break; 
				case 115:
					#line 150 "syntax"
					 lapg_n.sym = "<="; break; 
				case 116:
					#line 151 "syntax"
					 lapg_n.sym = ">="; break; 
				case 117:
					#line 152 "syntax"
					 lapg_n.sym = "+="; break; 
				case 118:
					#line 153 "syntax"
					 lapg_n.sym = "-="; break; 
				case 119:
					#line 154 "syntax"
					 lapg_n.sym = "*="; break; 
				case 120:
					#line 155 "syntax"
					 lapg_n.sym = "/="; break; 
				case 121:
					#line 156 "syntax"
					 lapg_n.sym = "%="; break; 
				case 122:
					#line 157 "syntax"
					 lapg_n.sym = "&="; break; 
				case 123:
					#line 158 "syntax"
					 lapg_n.sym = "|="; break; 
				case 124:
					#line 159 "syntax"
					 lapg_n.sym = "^="; break; 
				case 125:
					#line 160 "syntax"
					 lapg_n.sym = "<<="; break; 
				case 126:
					#line 161 "syntax"
					 lapg_n.sym = ">>="; break; 
				case 127:
					#line 162 "syntax"
					 lapg_n.sym = "->"; break; 
				case 129:
					#line 168 "syntax"
					 Make.Comment( new System.String(AE.GetChars(token,3,lapg_size-1)), lapg_n); continue;
				case 130:
					#line 172 "syntax"
					 continue;
				case 131:
					#line 174 "syntax"
					 group = 1;continue; 
				case 132:
					#line 176 "syntax"
					 continue; 
				case 133:
					#line 178 "syntax"
					 group = 0;continue; 
			}

			skip_symbols:
			do {
				lapg_i = lapg_next( lapg_m[lapg_head].state, lapg_n.lexem );

				if( lapg_i >= 0 ) {
					lapg_symbol lapg_gg;
					lapg_gg.sym = (lapg_rlen[lapg_i]!=0)?lapg_m[lapg_head+1-lapg_rlen[lapg_i]].sym:null;
					lapg_gg.lexem = lapg_rlex[lapg_i];
					lapg_gg.state = 0;
					#if DEBUG_syntax
						System.Console.WriteLine( "reduce to {0}", lapg_syms[lapg_rlex[lapg_i]] );
					#endif
					lapg_gg.pos = (lapg_rlen[lapg_i]!=0)?lapg_m[lapg_head+1-lapg_rlen[lapg_i]].pos:lapg_n.pos;
					lapg_gg.endpos = (lapg_rlen[lapg_i]!=0)?lapg_m[lapg_head].endpos:lapg_n.pos;
					switch( lapg_i ) {
						case 4:
							#line 188 "syntax"
							lapg_gg.sym = rootns = Make.Namespace( null, ((ListNode)lapg_m[lapg_head-1].sym), ((ListNode)lapg_m[lapg_head-0].sym), lapg_gg ); break;
						case 6:
							#line 196 "syntax"
							 lapg_gg.sym = Modifiers.New; break; 
						case 7:
							#line 197 "syntax"
							 lapg_gg.sym = Modifiers.Public; break; 
						case 8:
							#line 198 "syntax"
							 lapg_gg.sym = Modifiers.Protected; break; 
						case 9:
							#line 199 "syntax"
							 lapg_gg.sym = Modifiers.Internal; break; 
						case 10:
							#line 200 "syntax"
							 lapg_gg.sym = Modifiers.Private; break; 
						case 11:
							#line 201 "syntax"
							 lapg_gg.sym = Modifiers.Abstract; break; 
						case 12:
							#line 202 "syntax"
							 lapg_gg.sym = Modifiers.Sealed; break; 
						case 13:
							#line 203 "syntax"
							 lapg_gg.sym = Modifiers.Static; break; 
						case 14:
							#line 204 "syntax"
							 lapg_gg.sym = Modifiers.Readonly; break; 
						case 15:
							#line 205 "syntax"
							 lapg_gg.sym = Modifiers.Virtual; break; 
						case 16:
							#line 206 "syntax"
							 lapg_gg.sym = Modifiers.Override; break; 
						case 17:
							#line 207 "syntax"
							 lapg_gg.sym = Modifiers.Extern; break; 
						case 18:
							#line 208 "syntax"
							 lapg_gg.sym = Modifiers.Volatile; break; 
						case 19:
							#line 209 "syntax"
							 lapg_gg.sym = Modifiers.Unsafe; break; 
						case 20:
							#line 213 "syntax"
							 lapg_gg.sym = Make.Modifiers( ((int)lapg_m[lapg_head-0].sym), lapg_gg );break; 
						case 21:
							#line 214 "syntax"
							 Make.AddModifier( ((ModifiersNode)lapg_gg.sym), ((int)lapg_m[lapg_head-0].sym), lapg_m[lapg_head-0].pos.offset, lapg_gg );break; 
						case 24:
							#line 222 "syntax"
							 lapg_gg.sym = Make.Literal( LiteralNode.Type.Integer, (string)lapg_m[lapg_head-0].sym, lapg_gg ); break; 
						case 25:
							#line 223 "syntax"
							 lapg_gg.sym = Make.Literal( LiteralNode.Type.Float, (string)lapg_m[lapg_head-0].sym, lapg_gg ); break; 
						case 26:
							#line 224 "syntax"
							 lapg_gg.sym = Make.Literal( LiteralNode.Type.Char, (string)lapg_m[lapg_head-0].sym, lapg_gg ); break; 
						case 27:
							#line 225 "syntax"
							 lapg_gg.sym = Make.Literal( LiteralNode.Type.String, (string)lapg_m[lapg_head-0].sym, lapg_gg ); break; 
						case 28:
							#line 226 "syntax"
							 lapg_gg.sym = Make.Literal( LiteralNode.Type.Boolean, (string)lapg_m[lapg_head-0].sym, lapg_gg ); break; 
						case 29:
							#line 227 "syntax"
							 lapg_gg.sym = Make.Literal( LiteralNode.Type.Boolean, (string)lapg_m[lapg_head-0].sym, lapg_gg ); break; 
						case 30:
							#line 228 "syntax"
							 lapg_gg.sym = Make.Literal( LiteralNode.Type.Null, (string)lapg_m[lapg_head-0].sym, lapg_gg ); break; 
						case 31:
							#line 236 "syntax"
							 lapg_gg.sym = Make.Ident( ((string)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 32:
							#line 237 "syntax"
							 Make.AddIdent( ((IdentNode)lapg_gg.sym), "."+((string)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 33:
							#line 241 "syntax"
							 lapg_gg.sym = Make.Ident( ((string)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 34:
							#line 248 "syntax"
							 lapg_gg.sym = Make.TypeName( ((IdentNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 42:
							#line 265 "syntax"
							 lapg_gg.sym = Util.type_from_expr( ((ExprNode)lapg_m[lapg_head-0].sym) ); break; 
						case 44:
							#line 267 "syntax"
							 lapg_gg.sym = Make.ListArrayType( ((TypeNode)lapg_m[lapg_head-1].sym), ((ListNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 46:
							#line 272 "syntax"
							 lapg_gg.sym = Make.PointerType( ((TypeNode)lapg_gg.sym), lapg_gg );break; 
						case 47:
							#line 273 "syntax"
							 lapg_gg.sym = Make.OneArrayType( ((TypeNode)lapg_gg.sym), ((DimSpecNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 48:
							#line 277 "syntax"
							 lapg_gg.sym = Make.BaseType( BaseTypes._object, lapg_gg );break; 
						case 49:
							#line 278 "syntax"
							 lapg_gg.sym = Make.BaseType( BaseTypes._string, lapg_gg );break; 
						case 50:
							#line 279 "syntax"
							 lapg_gg.sym = Make.BaseType( BaseTypes._bool, lapg_gg );break; 
						case 51:
							#line 280 "syntax"
							 lapg_gg.sym = Make.BaseType( BaseTypes._decimal, lapg_gg );break; 
						case 52:
							#line 281 "syntax"
							 lapg_gg.sym = Make.BaseType( BaseTypes._float, lapg_gg );break; 
						case 53:
							#line 282 "syntax"
							 lapg_gg.sym = Make.BaseType( BaseTypes._double, lapg_gg );break; 
						case 55:
							#line 284 "syntax"
							 lapg_gg.sym = Make.BaseType( BaseTypes._void, lapg_gg );break; 
						case 56:
							#line 288 "syntax"
							 lapg_gg.sym = Make.BaseType( BaseTypes._sbyte, lapg_gg );break; 
						case 57:
							#line 289 "syntax"
							 lapg_gg.sym = Make.BaseType( BaseTypes._byte, lapg_gg );break; 
						case 58:
							#line 290 "syntax"
							 lapg_gg.sym = Make.BaseType( BaseTypes._short, lapg_gg );break; 
						case 59:
							#line 291 "syntax"
							 lapg_gg.sym = Make.BaseType( BaseTypes._ushort, lapg_gg );break; 
						case 60:
							#line 292 "syntax"
							 lapg_gg.sym = Make.BaseType( BaseTypes._int, lapg_gg );break; 
						case 61:
							#line 293 "syntax"
							 lapg_gg.sym = Make.BaseType( BaseTypes._uint, lapg_gg );break; 
						case 62:
							#line 294 "syntax"
							 lapg_gg.sym = Make.BaseType( BaseTypes._long, lapg_gg );break; 
						case 63:
							#line 295 "syntax"
							 lapg_gg.sym = Make.BaseType( BaseTypes._ulong, lapg_gg );break; 
						case 64:
							#line 296 "syntax"
							 lapg_gg.sym = Make.BaseType( BaseTypes._char, lapg_gg );break; 
						case 65:
							#line 300 "syntax"
							 lapg_gg.sym = Make.PointerType( ((TypeNode)lapg_m[lapg_head-1].sym), lapg_gg );break; 
						case 66:
							#line 306 "syntax"
							 lapg_gg.sym = Make.List( ((Node)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 67:
							#line 307 "syntax"
							 Make.AddList( ((ListNode)lapg_gg.sym), ((Node)lapg_m[lapg_head-0].sym), lapg_gg );break; 
						case 69:
							#line 312 "syntax"
							 lapg_gg.sym = Make.Unary( Kind.Ref, ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 70:
							#line 313 "syntax"
							 lapg_gg.sym = Make.Unary( Kind.Out, ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 76:
							#line 325 "syntax"
							 lapg_gg.sym = Make.Expr( Kind.This, lapg_gg ); break; 
						case 77:
							#line 326 "syntax"
							 lapg_gg.sym = Make.Unary( Kind.BaseDot, ((IdentNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 78:
							#line 327 "syntax"
							 lapg_gg.sym = Make.ExprAndList( Kind.BaseIndex, null, ((ListNode)lapg_m[lapg_head-1].sym), lapg_gg ); break; 
						case 79:
							#line 328 "syntax"
							 lapg_gg.sym = Make.TypeAndList( Kind.TypeOf, ((TypeNode)lapg_m[lapg_head-1].sym), null, lapg_gg ); break; 
						case 80:
							#line 329 "syntax"
							 lapg_gg.sym = Make.Unary( Kind.Checked, ((ExprNode)lapg_m[lapg_head-1].sym), lapg_gg ); break; 
						case 81:
							#line 330 "syntax"
							 lapg_gg.sym = Make.Unary( Kind.Unchecked, ((ExprNode)lapg_m[lapg_head-1].sym), lapg_gg ); break; 
						case 82:
							#line 331 "syntax"
							 lapg_gg.sym = Make.TypeAndList( Kind.SizeOf, ((TypeNode)lapg_m[lapg_head-1].sym), null, lapg_gg ); break; 
						case 83:
							#line 332 "syntax"
							 lapg_gg.sym = Make.Unary( Kind.PostInc, ((ExprNode)lapg_m[lapg_head-1].sym), lapg_gg ); break; 
						case 84:
							#line 333 "syntax"
							 lapg_gg.sym = Make.Unary( Kind.PostDec, ((ExprNode)lapg_m[lapg_head-1].sym), lapg_gg ); break; 
						case 85:
							#line 334 "syntax"
							 lapg_gg.sym = Make.Binary( Kind.Arrow, ((ExprNode)lapg_m[lapg_head-2].sym), ((IdentNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 86:
							#line 335 "syntax"
							 lapg_gg.sym = Make.Binary( Kind.Dot, ((ExprNode)lapg_m[lapg_head-2].sym), ((IdentNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 87:
							#line 336 "syntax"
							 lapg_gg.sym = Make.ExprAndType( Kind.TypeDot, ((IdentNode)lapg_m[lapg_head-0].sym), ((TypeNode)lapg_m[lapg_head-2].sym), lapg_gg ); break; 
						case 90:
							#line 337 "syntax"
							 lapg_gg.sym = Make.ExprAndList( Kind.Call, ((ExprNode)lapg_m[lapg_head-3].sym), ((ListNode)lapg_m[lapg_head-1].sym), lapg_gg ); break; 
						case 91:
							#line 338 "syntax"
							 lapg_gg.sym = Make.ExprAndList( Kind.Index, ((ExprNode)lapg_m[lapg_head-3].sym), ((ListNode)lapg_m[lapg_head-1].sym), lapg_gg ); break; 
						case 92:
							#line 339 "syntax"
							 lapg_gg.sym = Make.TypeExpr( ((ExprNode)lapg_gg.sym), ((DimSpecNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 98:
							#line 344 "syntax"
							 lapg_gg.sym = Make.NewArray( ((TypeNode)lapg_m[lapg_head-5].sym), ((ListNode)lapg_m[lapg_head-3].sym), ((ListNode)lapg_m[lapg_head-1].sym), ((ListNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 99:
							#line 345 "syntax"
							 lapg_gg.sym = Make.NewArray( ((TypeNode)lapg_m[lapg_head-1].sym), null, null, ((ListNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 100:
							#line 349 "syntax"
							 lapg_gg.sym = Make.TypeAndList( Kind.obj_or_deleg_creation, ((TypeNode)lapg_m[lapg_head-3].sym), ((ListNode)lapg_m[lapg_head-1].sym), lapg_gg ); break; 
						case 102:
							#line 354 "syntax"
							 lapg_gg.sym = Make.Unary( Kind.UnPlus, ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 103:
							#line 355 "syntax"
							 lapg_gg.sym = Make.Unary( Kind.UnMinus, ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 104:
							#line 356 "syntax"
							 lapg_gg.sym = Make.Unary( Kind.Not, ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 105:
							#line 357 "syntax"
							 lapg_gg.sym = Make.Unary( Kind.BitNot, ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 106:
							#line 358 "syntax"
							 lapg_gg.sym = Make.Unary( Kind.PreInc, ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 107:
							#line 359 "syntax"
							 lapg_gg.sym = Make.Unary( Kind.PreDec, ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 109:
							#line 365 "syntax"
							lapg_gg.sym = lapg_m[lapg_head-1].sym;
							// HACK	
							if( CastExpr(((ExprNode)lapg_m[lapg_head-1].sym),lapg_n) ) {
								// perform reduce
								for( int e = lapg_rlen[lapg_i]; e > 0; e-- ) lapg_m[lapg_head--].sym = null;
								lapg_m[++lapg_head] = lapg_gg;
								lapg_m[lapg_head].state = lapg_state_sym( lapg_m[lapg_head-1].state, lapg_gg.lexem );
								if( lapg_m[lapg_head].state != -1 ) {
									// shift cast_token (if possible)
									lapg_gg.lexem = (int)Tokens.cast_token;
									lapg_gg.sym = null;
									lapg_gg.state = lapg_state_sym( lapg_m[lapg_head].state, lapg_gg.lexem );
									lapg_gg.pos = lapg_gg.endpos = lapg_n.pos;
									if( lapg_gg.state != -1 )
										lapg_m[++lapg_head] = lapg_gg;
								}
								// skip default reduce code
								continue; 
							}
							break;
						case 110:
							#line 388 "syntax"
							 lapg_gg.sym = Make.ExprAndType( Kind.Cast, ((ExprNode)lapg_m[lapg_head-0].sym), Util.type_from_expr(((ExprNode)lapg_m[lapg_head-2].sym)), lapg_gg ); break; 
						case 111:
							#line 389 "syntax"
							 lapg_gg.sym = Make.ExprAndType( Kind.Cast, ((ExprNode)lapg_m[lapg_head-0].sym), ((TypeNode)lapg_m[lapg_head-2].sym), lapg_gg ); break; 
						case 113:
							#line 394 "syntax"
							 lapg_gg.sym = Make.Binary( Kind.Mult, ((ExprNode)lapg_m[lapg_head-2].sym), ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 114:
							#line 395 "syntax"
							 lapg_gg.sym = Make.Binary( Kind.Div, ((ExprNode)lapg_m[lapg_head-2].sym), ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 115:
							#line 396 "syntax"
							 lapg_gg.sym = Make.Binary( Kind.Mod, ((ExprNode)lapg_m[lapg_head-2].sym), ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 117:
							#line 401 "syntax"
							 lapg_gg.sym = Make.Binary( Kind.Plus, ((ExprNode)lapg_m[lapg_head-2].sym), ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 118:
							#line 402 "syntax"
							 lapg_gg.sym = Make.Binary( Kind.Minus, ((ExprNode)lapg_m[lapg_head-2].sym), ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 120:
							#line 407 "syntax"
							 lapg_gg.sym = Make.Binary( Kind.Shl, ((ExprNode)lapg_m[lapg_head-2].sym), ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 121:
							#line 408 "syntax"
							 lapg_gg.sym = Make.Binary( Kind.Shr, ((ExprNode)lapg_m[lapg_head-2].sym), ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 123:
							#line 413 "syntax"
							 lapg_gg.sym = Make.Binary( Kind.Less, ((ExprNode)lapg_m[lapg_head-2].sym), ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 124:
							#line 414 "syntax"
							 lapg_gg.sym = Make.Binary( Kind.Greater, ((ExprNode)lapg_m[lapg_head-2].sym), ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 125:
							#line 415 "syntax"
							 lapg_gg.sym = Make.Binary( Kind.LessEq, ((ExprNode)lapg_m[lapg_head-2].sym), ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 126:
							#line 416 "syntax"
							 lapg_gg.sym = Make.Binary( Kind.GreaterEq, ((ExprNode)lapg_m[lapg_head-2].sym), ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 127:
							#line 417 "syntax"
							 lapg_gg.sym = Make.ExprAndType( Kind.Is, ((ExprNode)lapg_m[lapg_head-2].sym), ((TypeNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 128:
							#line 418 "syntax"
							 lapg_gg.sym = Make.ExprAndType( Kind.As, ((ExprNode)lapg_m[lapg_head-2].sym), ((TypeNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 130:
							#line 423 "syntax"
							 lapg_gg.sym = Make.Binary( Kind.Equal, ((ExprNode)lapg_m[lapg_head-2].sym), ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 131:
							#line 424 "syntax"
							 lapg_gg.sym = Make.Binary( Kind.NotEqual, ((ExprNode)lapg_m[lapg_head-2].sym), ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 133:
							#line 429 "syntax"
							 lapg_gg.sym = Make.Binary( Kind.And, ((ExprNode)lapg_m[lapg_head-2].sym), ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 135:
							#line 434 "syntax"
							 lapg_gg.sym = Make.Binary( Kind.Xor, ((ExprNode)lapg_m[lapg_head-2].sym), ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 137:
							#line 439 "syntax"
							 lapg_gg.sym = Make.Binary( Kind.Or, ((ExprNode)lapg_m[lapg_head-2].sym), ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 139:
							#line 444 "syntax"
							 lapg_gg.sym = Make.Binary( Kind.AndAnd, ((ExprNode)lapg_m[lapg_head-2].sym), ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 141:
							#line 449 "syntax"
							 lapg_gg.sym = Make.Binary( Kind.OrOr, ((ExprNode)lapg_m[lapg_head-2].sym), ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 143:
							#line 454 "syntax"
							 lapg_gg.sym = Make.Triplex( ((ExprNode)lapg_m[lapg_head-4].sym), ((ExprNode)lapg_m[lapg_head-2].sym), ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 144:
							#line 458 "syntax"
							 lapg_gg.sym = Make.Assign( ((Kind)lapg_m[lapg_head-1].sym), ((ExprNode)lapg_m[lapg_head-2].sym), ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 145:
							#line 462 "syntax"
							 lapg_gg.sym = (int)Kind.Assign; break; 
						case 146:
							#line 463 "syntax"
							 lapg_gg.sym = (int)Kind.PlusEq; break; 
						case 147:
							#line 464 "syntax"
							 lapg_gg.sym = (int)Kind.MinusEq; break; 
						case 148:
							#line 465 "syntax"
							 lapg_gg.sym = (int)Kind.MultEq; break; 
						case 149:
							#line 466 "syntax"
							 lapg_gg.sym = (int)Kind.DivEq; break; 
						case 150:
							#line 467 "syntax"
							 lapg_gg.sym = (int)Kind.ModEq; break; 
						case 151:
							#line 468 "syntax"
							 lapg_gg.sym = (int)Kind.AndEq; break; 
						case 152:
							#line 469 "syntax"
							 lapg_gg.sym = (int)Kind.OrEq; break; 
						case 153:
							#line 470 "syntax"
							 lapg_gg.sym = (int)Kind.XorEq; break; 
						case 154:
							#line 471 "syntax"
							 lapg_gg.sym = (int)Kind.ShlEq; break; 
						case 155:
							#line 472 "syntax"
							 lapg_gg.sym = (int)Kind.ShrEq; break; 
						case 156:
							#line 476 "syntax"
							 lapg_gg.sym = Make.List( ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 157:
							#line 477 "syntax"
							 Make.AddList( ((ListNode)lapg_gg.sym), ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 161:
							#line 492 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.Label, null, ((IdentNode)lapg_m[lapg_head-2].sym), ((StatementNode)lapg_m[lapg_head-0].sym), null, null, lapg_gg ); break; 
						case 166:
							#line 500 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.Expr, ((ExprNode)lapg_m[lapg_head-1].sym), null, null, null, null, lapg_gg ); break; 
						case 167:
							#line 501 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.Empty, null, null, null, null, null, lapg_gg ); break; 
						case 168:
							#line 503 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.If, ((ExprNode)lapg_m[lapg_head-2].sym), null, ((StatementNode)lapg_m[lapg_head-0].sym), null, null, lapg_gg ); break; 
						case 169:
							#line 504 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.If, ((ExprNode)lapg_m[lapg_head-4].sym), null, ((StatementNode)lapg_m[lapg_head-2].sym), ((StatementNode)lapg_m[lapg_head-0].sym), null, lapg_gg ); break; 
						case 170:
							#line 505 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.Switch, ((ExprNode)lapg_m[lapg_head-2].sym), null, ((StatementNode)lapg_m[lapg_head-0].sym), null, null, lapg_gg ); break; 
						case 171:
							#line 506 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.While, ((ExprNode)lapg_m[lapg_head-2].sym), null, ((StatementNode)lapg_m[lapg_head-0].sym), null, null, lapg_gg ); break; 
						case 172:
							#line 507 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.DoWhile, ((ExprNode)lapg_m[lapg_head-2].sym), null, ((StatementNode)lapg_m[lapg_head-5].sym), null, null, lapg_gg ); break; 
						case 179:
							#line 510 "syntax"
																			{ lapg_gg.sym = Make.Statement( Kind.For, ((ExprNode)lapg_m[lapg_head-4].sym), null, ((StatementNode)lapg_m[lapg_head-6].sym), ((StatementNode)lapg_m[lapg_head-0].sym), ((ListNode)lapg_m[lapg_head-2].sym), lapg_gg ); break; }
						case 180:
							#line 513 "syntax"
																			{ lapg_gg.sym = Make.TypedStatement( Kind.ForEach, ((ExprNode)lapg_m[lapg_head-2].sym), ((IdentNode)lapg_m[lapg_head-4].sym), ((StatementNode)lapg_m[lapg_head-0].sym), null, null, ((TypeNode)lapg_m[lapg_head-5].sym), lapg_gg ); break; }
						case 181:
							#line 515 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.Break, null, null, null, null, null, lapg_gg ); break; 
						case 182:
							#line 516 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.Continue, null, null, null, null, null, lapg_gg ); break; 
						case 183:
							#line 517 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.Goto, null, ((IdentNode)lapg_m[lapg_head-1].sym), null, null, null, lapg_gg ); break; 
						case 184:
							#line 518 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.GotoCase, ((ExprNode)lapg_m[lapg_head-1].sym), null, null, null, null, lapg_gg ); break; 
						case 185:
							#line 519 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.GotoDefault, null, null, null, null, null, lapg_gg ); break; 
						case 186:
							#line 520 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.Return, ((ExprNode)lapg_m[lapg_head-1].sym), null, null, null, null, lapg_gg ); break; 
						case 187:
							#line 521 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.Throw, ((ExprNode)lapg_m[lapg_head-1].sym), null, null, null, null, lapg_gg ); break; 
						case 189:
							#line 524 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.Lock, ((ExprNode)lapg_m[lapg_head-2].sym), null, ((StatementNode)lapg_m[lapg_head-0].sym), null, null, lapg_gg ); break; 
						case 190:
							#line 526 "syntax"
																			{ lapg_gg.sym = Make.Statement( Kind.UsingSt, null, null, ((StatementNode)lapg_m[lapg_head-2].sym), ((StatementNode)lapg_m[lapg_head-0].sym), null, lapg_gg ); break; }
						case 191:
							#line 527 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.Unsafe, null, null, ((StatementNode)lapg_m[lapg_head-0].sym), null, null, lapg_gg ); break; 
						case 192:
							#line 528 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.CheckedSt, null, null, ((StatementNode)lapg_m[lapg_head-0].sym), null, null, lapg_gg ); break; 
						case 193:
							#line 529 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.UncheckedSt, null, null, ((StatementNode)lapg_m[lapg_head-0].sym), null, null, lapg_gg ); break; 
						case 196:
							#line 533 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.Block, null, null, null, null, ((ListNode)lapg_m[lapg_head-1].sym), lapg_gg ); break; 
						case 197:
							#line 537 "syntax"
							 lapg_gg.sym = Make.List( ((StatementNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 198:
							#line 538 "syntax"
							 Make.AddList( ((ListNode)lapg_gg.sym), ((StatementNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 199:
							#line 542 "syntax"
							 lapg_gg.sym = Make.TypedStatement( Kind.VarDecl, null, null, null, null, ((ListNode)lapg_m[lapg_head-0].sym), ((TypeNode)lapg_m[lapg_head-1].sym), lapg_gg ); break; 
						case 200:
							#line 546 "syntax"
							 lapg_gg.sym = Make.TypedStatement( Kind.ConstDecl, null, null, null, null, ((ListNode)lapg_m[lapg_head-0].sym), ((TypeNode)lapg_m[lapg_head-1].sym), lapg_gg ); break; 
						case 201:
							#line 550 "syntax"
							 lapg_gg.sym = Make.List( ((ConstantNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 202:
							#line 551 "syntax"
							 Make.AddList( ((ListNode)lapg_gg.sym), ((ConstantNode)lapg_m[lapg_head-0].sym), lapg_gg );break; 
						case 203:
							#line 555 "syntax"
							 lapg_gg.sym = Make.Constant( ((IdentNode)lapg_m[lapg_head-2].sym), ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 204:
							#line 559 "syntax"
							 lapg_gg.sym = Make.ExprAndList( Kind.Call, ((ExprNode)lapg_m[lapg_head-3].sym), ((ListNode)lapg_m[lapg_head-1].sym), lapg_gg ); break; 
						case 207:
							#line 562 "syntax"
							 lapg_gg.sym = Make.Unary( Kind.PostInc, ((ExprNode)lapg_m[lapg_head-1].sym), lapg_gg ); break; 
						case 208:
							#line 563 "syntax"
							 lapg_gg.sym = Make.Unary( Kind.PostDec, ((ExprNode)lapg_m[lapg_head-1].sym), lapg_gg ); break; 
						case 209:
							#line 564 "syntax"
							 lapg_gg.sym = Make.Unary( Kind.PreInc, ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 210:
							#line 565 "syntax"
							 lapg_gg.sym = Make.Unary( Kind.PreDec, ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 213:
							#line 569 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.Block, null, null, null, null, ((ListNode)lapg_m[lapg_head-1].sym), lapg_gg ); break; 
						case 214:
							#line 573 "syntax"
							 lapg_gg.sym = Make.List( ((StatementNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 215:
							#line 574 "syntax"
							 Make.AddList( ((ListNode)lapg_gg.sym), ((StatementNode)lapg_m[lapg_head-0].sym), lapg_gg );break; 
						case 216:
							#line 578 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.SwitchSect, null, null, ((StatementNode)lapg_m[lapg_head-0].sym), null, ((ListNode)lapg_m[lapg_head-1].sym), lapg_gg ); break; 
						case 217:
							#line 582 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.StmtList, null, null, null, null, ((ListNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 218:
							#line 586 "syntax"
							 lapg_gg.sym = Make.List( ((StatementNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 219:
							#line 587 "syntax"
							 Make.AddList( ((ListNode)lapg_gg.sym), ((StatementNode)lapg_m[lapg_head-0].sym), lapg_gg );break; 
						case 220:
							#line 591 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.CaseLabel, ((ExprNode)lapg_m[lapg_head-1].sym), null, null, null, null, lapg_gg ); break; 
						case 221:
							#line 592 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.Default, null, null, null, null, null, lapg_gg ); break; 
						case 223:
							#line 597 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.ExprList, null, null, null, null, ((ListNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 224:
							#line 601 "syntax"
							 lapg_gg.sym = Make.List( ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 225:
							#line 602 "syntax"
							 Make.AddList( ((ListNode)lapg_gg.sym), ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 226:
							#line 606 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.Try, null, null, ((StatementNode)lapg_m[lapg_head-1].sym), null, ((ListNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 228:
							#line 611 "syntax"
							 lapg_gg.sym = Make.List( ((StatementNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 229:
							#line 612 "syntax"
							 Make.AddList( ((ListNode)lapg_m[lapg_head-1].sym), ((StatementNode)lapg_m[lapg_head-0].sym), lapg_gg );break; 
						case 231:
							#line 617 "syntax"
							 Make.AddList( ((ListNode)lapg_m[lapg_head-1].sym), ((StatementNode)lapg_m[lapg_head-0].sym), lapg_gg );break; 
						case 232:
							#line 618 "syntax"
							 lapg_gg.sym = Make.List( ((StatementNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 233:
							#line 622 "syntax"
							 lapg_gg.sym = Make.List( ((StatementNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 234:
							#line 623 "syntax"
							 Make.AddList( ((ListNode)lapg_gg.sym), ((StatementNode)lapg_m[lapg_head-0].sym), lapg_gg );break; 
						case 237:
							#line 628 "syntax"
																			{ lapg_gg.sym = Make.TypedStatement( Kind.Catch, null, ((IdentNode)lapg_m[lapg_head-2].sym), ((StatementNode)lapg_m[lapg_head-0].sym), null, null, ((TypeNode)lapg_m[lapg_head-3].sym), lapg_gg ); break; }
						case 238:
							#line 632 "syntax"
							 lapg_gg.sym = Make.TypedStatement( Kind.Catch, null, null, ((StatementNode)lapg_m[lapg_head-0].sym), null, null, null, lapg_gg ); break; 
						case 239:
							#line 636 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.Finally, null, null, ((StatementNode)lapg_m[lapg_head-0].sym), null, null, lapg_gg ); break; 
						case 241:
							#line 641 "syntax"
							 lapg_gg.sym = Make.Statement( Kind.Expr, ((ExprNode)lapg_m[lapg_head-0].sym), null, null, null, null, lapg_gg ); break; 
						case 242:
							#line 650 "syntax"
							lapg_gg.sym = Make.Namespace( ((IdentNode)lapg_m[lapg_head-5].sym), ((ListNode)lapg_m[lapg_head-3].sym), ((ListNode)lapg_m[lapg_head-2].sym), lapg_gg ); break;
						case 243:
							#line 654 "syntax"
							 lapg_gg.sym = Make.List( ((Node)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 244:
							#line 655 "syntax"
							 Make.AddList( ((ListNode)lapg_gg.sym), ((Node)lapg_m[lapg_head-0].sym), lapg_gg );break; 
						case 245:
							#line 659 "syntax"
							 lapg_gg.sym = Make.Using( Kind.UsingAlias, ((IdentNode)lapg_m[lapg_head-3].sym), ((IdentNode)lapg_m[lapg_head-1].sym), lapg_gg ); break; 
						case 246:
							#line 660 "syntax"
							 lapg_gg.sym = Make.Using( Kind.UsingDir, null, ((IdentNode)lapg_m[lapg_head-1].sym), lapg_gg ); break; 
						case 247:
							#line 664 "syntax"
							 lapg_gg.sym = Make.List( ((Node)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 248:
							#line 665 "syntax"
							 Make.AddList( ((ListNode)lapg_gg.sym), ((Node)lapg_m[lapg_head-0].sym), lapg_gg );break; 
						case 262:
							#line 685 "syntax"
							lapg_gg.sym = Make.Class( Kind.Class, ((ListNode)lapg_m[lapg_head-6].sym), ((ModifiersNode)lapg_m[lapg_head-5].sym), ((IdentNode)lapg_m[lapg_head-3].sym), ((ListNode)lapg_m[lapg_head-2].sym), ((ListNode)lapg_m[lapg_head-1].sym), lapg_gg ); break;
						case 263:
							#line 689 "syntax"
							 lapg_gg.sym = lapg_m[lapg_head-0].sym; Make.Pos( ref lapg_gg ); break; 
						case 264:
							#line 693 "syntax"
							 lapg_gg.sym = Make.List( ((IdentNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 265:
							#line 694 "syntax"
							 Make.AddList( ((ListNode)lapg_gg.sym), ((IdentNode)lapg_m[lapg_head-0].sym), lapg_gg );break; 
						case 268:
							#line 698 "syntax"
							 lapg_gg.sym = lapg_m[lapg_head-1].sym; Make.Pos( ref lapg_gg ); break; 
						case 269:
							#line 702 "syntax"
							 lapg_gg.sym = Make.List( ((DeclNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 270:
							#line 703 "syntax"
							 Make.AddList( ((ListNode)lapg_gg.sym), ((DeclNode)lapg_m[lapg_head-0].sym), lapg_gg );break; 
						case 281:
							#line 723 "syntax"
							lapg_gg.sym = Make.Fields( Kind.Const, ((ListNode)lapg_m[lapg_head-4].sym), ((ModifiersNode)lapg_m[lapg_head-3].sym), ((TypeNode)lapg_m[lapg_head-2].sym), ((ListNode)lapg_m[lapg_head-1].sym), lapg_gg ); break;
						case 282:
							#line 727 "syntax"
							 lapg_gg.sym = Make.Modifiers( (int)Modifiers.Const, lapg_gg );break; 
						case 283:
							#line 728 "syntax"
							 Make.AddModifier( ((ModifiersNode)lapg_m[lapg_head-1].sym), (int)Modifiers.Const, lapg_m[lapg_head-0].pos.offset, lapg_gg );break; 
						case 284:
							#line 733 "syntax"
							lapg_gg.sym = Make.Fields( Kind.Fields, ((ListNode)lapg_m[lapg_head-4].sym), ((ModifiersNode)lapg_m[lapg_head-3].sym), ((TypeNode)lapg_m[lapg_head-2].sym), ((ListNode)lapg_m[lapg_head-1].sym), lapg_gg ); break;
						case 285:
							#line 737 "syntax"
							 lapg_gg.sym = Make.List( ((VariableNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 286:
							#line 738 "syntax"
							 Make.AddList( ((ListNode)lapg_gg.sym), ((VariableNode)lapg_m[lapg_head-0].sym), lapg_gg );break; 
						case 287:
							#line 742 "syntax"
							 lapg_gg.sym = Make.Variable( ((IdentNode)lapg_m[lapg_head-0].sym), null, lapg_gg ); break; 
						case 288:
							#line 743 "syntax"
							 lapg_gg.sym = Make.Variable( ((IdentNode)lapg_m[lapg_head-2].sym), ((InitializerNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 289:
							#line 747 "syntax"
							 lapg_gg.sym = Make.Initializer( Kind.ExprInit, ((ExprNode)lapg_m[lapg_head-0].sym), null, lapg_gg ); break; 
						case 290:
							#line 748 "syntax"
							 lapg_gg.sym = Make.Initializer( Kind.ArrayInit, null, ((ListNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 293:
							#line 755 "syntax"
							lapg_gg.sym = Make.Method( Kind.Method, ((ListNode)lapg_m[lapg_head-7].sym), ((ModifiersNode)lapg_m[lapg_head-6].sym), ((IdentNode)lapg_m[lapg_head-4].sym), ((TypeNode)lapg_m[lapg_head-5].sym), ((ListNode)lapg_m[lapg_head-2].sym), ((StatementNode)lapg_m[lapg_head-0].sym), null, lapg_gg );break;
						case 294:
							#line 759 "syntax"
							 lapg_gg.sym = Make.Ident( ((string)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 295:
							#line 760 "syntax"
							 Make.AddIdent( ((IdentNode)lapg_m[lapg_head-2].sym), "."+((string)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 297:
							#line 765 "syntax"
							 Make.AddList( ((ListNode)lapg_m[lapg_head-2].sym), ((ParameterNode)lapg_m[lapg_head-0].sym), lapg_gg );break; 
						case 298:
							#line 766 "syntax"
							 lapg_gg.sym = Make.List( ((ParameterNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 299:
							#line 770 "syntax"
							 lapg_gg.sym = Make.List( ((ParameterNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 300:
							#line 771 "syntax"
							 Make.AddList( ((ListNode)lapg_gg.sym), ((ParameterNode)lapg_m[lapg_head-0].sym), lapg_gg );break; 
						case 303:
							#line 776 "syntax"
							lapg_gg.sym = Make.Parameter( ((ListNode)lapg_m[lapg_head-3].sym), ((ModifiersNode)lapg_m[lapg_head-2].sym), ((TypeNode)lapg_m[lapg_head-1].sym), ((IdentNode)lapg_m[lapg_head-0].sym), lapg_gg ); break;
						case 304:
							#line 780 "syntax"
							 lapg_gg.sym = Make.Modifiers( (int)Modifiers.Ref, lapg_gg );break; 
						case 305:
							#line 781 "syntax"
							 lapg_gg.sym = Make.Modifiers( (int)Modifiers.Out, lapg_gg );break; 
						case 306:
							#line 785 "syntax"
							 lapg_gg.sym = Make.Modifiers( (int)Modifiers.Params, lapg_gg );break; 
						case 307:
							#line 790 "syntax"
							lapg_gg.sym = Make.Parameter( ((ListNode)lapg_m[lapg_head-3].sym), ((ModifiersNode)lapg_m[lapg_head-2].sym), ((TypeNode)lapg_m[lapg_head-1].sym), ((IdentNode)lapg_m[lapg_head-0].sym), lapg_gg ); break;
						case 308:
							#line 797 "syntax"
							lapg_gg.sym = Make.Property( ((ListNode)lapg_m[lapg_head-6].sym), ((ModifiersNode)lapg_m[lapg_head-5].sym), ((TypeNode)lapg_m[lapg_head-4].sym), ((IdentNode)lapg_m[lapg_head-3].sym), ((ListNode)lapg_m[lapg_head-1].sym), lapg_gg ); break;
						case 311:
							#line 802 "syntax"
							lapg_gg.sym = Make.List( ((AccessorNode)lapg_m[lapg_head-1].sym), lapg_gg );
							if( ((AccessorNode)lapg_m[lapg_head-0].sym) != null )
								Make.AddList( ((ListNode)lapg_gg.sym), ((AccessorNode)lapg_m[lapg_head-0].sym), lapg_gg );break;
						case 312:
							#line 808 "syntax"
							 lapg_gg.sym = Make.Accessor( ((ListNode)lapg_m[lapg_head-2].sym), ((IdentNode)lapg_m[lapg_head-1].sym), ((StatementNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 314:
							#line 813 "syntax"
							 lapg_gg.sym = null; break; 
						case 315:
							#line 818 "syntax"
							lapg_gg.sym = Make.Event( Kind.EventVars, ((ListNode)lapg_m[lapg_head-5].sym), ((ModifiersNode)lapg_m[lapg_head-4].sym), ((TypeNode)lapg_m[lapg_head-2].sym), null, null, ((ListNode)lapg_m[lapg_head-1].sym), lapg_gg ); break;
						case 316:
							#line 821 "syntax"
							lapg_gg.sym = Make.Event( Kind.EventWithAccessors, ((ListNode)lapg_m[lapg_head-7].sym), ((ModifiersNode)lapg_m[lapg_head-6].sym), ((TypeNode)lapg_m[lapg_head-4].sym), ((IdentNode)lapg_m[lapg_head-3].sym), ((ListNode)lapg_m[lapg_head-1].sym), null, lapg_gg ); break;
						case 317:
							#line 826 "syntax"
							lapg_gg.sym = Make.Indexer( ((ListNode)lapg_m[lapg_head-9].sym), ((ModifiersNode)lapg_m[lapg_head-8].sym), ((TypeNode)lapg_m[lapg_head-7].sym), ((IdentNode)lapg_m[lapg_head-6].sym), ((ListNode)lapg_m[lapg_head-4].sym), ((ListNode)lapg_m[lapg_head-1].sym), lapg_gg ); break;
						case 318:
							#line 830 "syntax"
							 lapg_gg.sym = Make.Ident( "this", lapg_gg ); break; 
						case 319:
							#line 831 "syntax"
							 Make.AddIdent( ((IdentNode)lapg_m[lapg_head-2].sym), ".this", lapg_gg ); break; 
						case 320:
							#line 838 "syntax"
							lapg_gg.sym = ((MethodDecl)lapg_m[lapg_head-1].sym);
							((MethodDecl)lapg_m[lapg_head-1].sym).attributes = ((ListNode)lapg_m[lapg_head-3].sym);
							if( ((MethodDecl)lapg_m[lapg_head-1].sym).modifiers == null )
								((MethodDecl)lapg_m[lapg_head-1].sym).modifiers = ((ModifiersNode)lapg_m[lapg_head-2].sym);
							else if( ((ModifiersNode)lapg_m[lapg_head-2].sym) != null ) {
								((MethodDecl)lapg_m[lapg_head-1].sym).modifiers = Make.SumModifiers( ((ModifiersNode)lapg_m[lapg_head-2].sym), ((MethodDecl)lapg_m[lapg_head-1].sym).modifiers );
							}
							((MethodDecl)lapg_m[lapg_head-1].sym).body = ((StatementNode)lapg_m[lapg_head-0].sym);
							Make.Pos( ref lapg_gg ); break;
						case 323:
							#line 855 "syntax"
							 lapg_gg.sym = Make.Parameter( null, null, ((TypeNode)lapg_m[lapg_head-1].sym), ((IdentNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 324:
							#line 860 "syntax"
							lapg_gg.sym = Make.Operator( null, ((TypeNode)lapg_m[lapg_head-4].sym), ((IdentNode)lapg_m[lapg_head-3].sym), ((ParameterNode)lapg_m[lapg_head-1].sym), null, lapg_gg ); break;
						case 325:
							#line 863 "syntax"
							lapg_gg.sym = Make.Operator( null, ((TypeNode)lapg_m[lapg_head-6].sym), ((IdentNode)lapg_m[lapg_head-5].sym), ((ParameterNode)lapg_m[lapg_head-3].sym), ((ParameterNode)lapg_m[lapg_head-1].sym), lapg_gg ); break;
						case 326:
							#line 867 "syntax"
							 lapg_gg.sym = Make.Ident( "operator " + ((string)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 349:
							#line 876 "syntax"
							lapg_gg.sym = Make.Operator( ((ModifiersNode)lapg_m[lapg_head-5].sym), ((TypeNode)lapg_m[lapg_head-3].sym), null, ((ParameterNode)lapg_m[lapg_head-1].sym), null, lapg_gg ); break;
						case 350:
							#line 880 "syntax"
							 lapg_gg.sym = Make.Modifiers( (int)Modifiers.Implicit, lapg_gg );break; 
						case 351:
							#line 881 "syntax"
							 lapg_gg.sym = Make.Modifiers( (int)Modifiers.Explicit, lapg_gg );break; 
						case 354:
							#line 888 "syntax"
							lapg_gg.sym = Make.Method( Kind.Constructor, ((ListNode)lapg_m[lapg_head-7].sym), ((ModifiersNode)lapg_m[lapg_head-6].sym), ((IdentNode)lapg_m[lapg_head-5].sym), null, ((ListNode)lapg_m[lapg_head-3].sym), ((StatementNode)lapg_m[lapg_head-0].sym), ((ConstructorInitializerNode)lapg_m[lapg_head-1].sym), lapg_gg );break;
						case 355:
							#line 892 "syntax"
							 lapg_gg.sym = Make.ConstructorInitializer( Kind.ThisConstructorInit, ((ListNode)lapg_m[lapg_head-1].sym), lapg_gg ); break; 
						case 356:
							#line 893 "syntax"
							 lapg_gg.sym = Make.ConstructorInitializer( Kind.BaseConstructorInit, ((ListNode)lapg_m[lapg_head-1].sym), lapg_gg ); break; 
						case 357:
							#line 897 "syntax"
							 lapg_gg.sym = Make.Modifiers( (int)Modifiers.Extern, lapg_gg );break; 
						case 360:
							#line 902 "syntax"
							lapg_gg.sym = Make.Method( Kind.Destructor, ((ListNode)lapg_m[lapg_head-6].sym), ((ModifiersNode)lapg_m[lapg_head-5].sym), ((IdentNode)lapg_m[lapg_head-3].sym), null, null, ((StatementNode)lapg_m[lapg_head-0].sym), null, lapg_gg );break;
						case 363:
							#line 909 "syntax"
							lapg_gg.sym = Make.Class( Kind.Struct, ((ListNode)lapg_m[lapg_head-6].sym), ((ModifiersNode)lapg_m[lapg_head-5].sym), ((IdentNode)lapg_m[lapg_head-3].sym), ((ListNode)lapg_m[lapg_head-2].sym), ((ListNode)lapg_m[lapg_head-1].sym), lapg_gg ); break;
						case 364:
							#line 913 "syntax"
							 lapg_gg.sym = lapg_m[lapg_head-0].sym; Make.Pos( ref lapg_gg ); break; 
						case 365:
							#line 917 "syntax"
							 lapg_gg.sym = lapg_m[lapg_head-1].sym; Make.Pos( ref lapg_gg ); break; 
						case 366:
							#line 923 "syntax"
							 lapg_gg.sym = Make.ListArrayType( ((TypeNode)lapg_m[lapg_head-1].sym), ((ListNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 367:
							#line 927 "syntax"
							 lapg_gg.sym = Make.List( ((DimSpecNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 368:
							#line 928 "syntax"
							 Make.AddList( ((ListNode)lapg_gg.sym), ((DimSpecNode)lapg_m[lapg_head-0].sym), lapg_gg );break; 
						case 371:
							#line 932 "syntax"
							 lapg_gg.sym = Make.DimSpec( ( lapg_m[lapg_head-1].sym == null ) ? 1 : ((int)lapg_m[lapg_head-1].sym), lapg_gg ); break; 
						case 372:
							#line 935 "syntax"
							 lapg_gg.sym = 2; break; 
						case 373:
							#line 936 "syntax"
							 lapg_gg.sym = ((int)lapg_gg.sym) + 1; break; 
						case 376:
							#line 940 "syntax"
							 lapg_gg.sym = ((ListNode)lapg_m[lapg_head-1].sym); break; 
						case 377:
							#line 941 "syntax"
							 lapg_gg.sym = ((ListNode)lapg_m[lapg_head-2].sym); break; 
						case 378:
							#line 945 "syntax"
							 lapg_gg.sym = Make.List( ((InitializerNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 379:
							#line 946 "syntax"
							 Make.AddList( ((ListNode)lapg_gg.sym), ((InitializerNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 382:
							#line 953 "syntax"
							lapg_gg.sym = Make.Class( Kind.Interface, ((ListNode)lapg_m[lapg_head-6].sym), ((ModifiersNode)lapg_m[lapg_head-5].sym), ((IdentNode)lapg_m[lapg_head-3].sym), ((ListNode)lapg_m[lapg_head-2].sym), ((ListNode)lapg_m[lapg_head-1].sym), lapg_gg ); break;
						case 383:
							#line 957 "syntax"
							 lapg_gg.sym = lapg_m[lapg_head-0].sym; Make.Pos( ref lapg_gg ); break; 
						case 386:
							#line 961 "syntax"
							 lapg_gg.sym = lapg_m[lapg_head-1].sym; Make.Pos( ref lapg_gg ); break; 
						case 387:
							#line 965 "syntax"
							 lapg_gg.sym = Make.List( ((Node)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 388:
							#line 966 "syntax"
							 Make.AddList( ((ListNode)lapg_gg.sym), ((Node)lapg_m[lapg_head-0].sym), lapg_gg );break; 
						case 391:
							#line 971 "syntax"
							lapg_gg.sym = Make.Method( Kind.Method, ((ListNode)lapg_m[lapg_head-7].sym), ((ModifiersNode)lapg_m[lapg_head-6].sym), ((IdentNode)lapg_m[lapg_head-4].sym), ((TypeNode)lapg_m[lapg_head-5].sym), ((ListNode)lapg_m[lapg_head-2].sym), null, null, lapg_gg );break;
						case 392:
							#line 974 "syntax"
							lapg_gg.sym = Make.Property( ((ListNode)lapg_m[lapg_head-6].sym), ((ModifiersNode)lapg_m[lapg_head-5].sym), ((TypeNode)lapg_m[lapg_head-4].sym), ((IdentNode)lapg_m[lapg_head-3].sym), ((ListNode)lapg_m[lapg_head-1].sym), lapg_gg ); break;
						case 393:
							#line 977 "syntax"
							lapg_gg.sym = Make.Event( Kind.EventWithAccessors, ((ListNode)lapg_m[lapg_head-5].sym), ((ModifiersNode)lapg_m[lapg_head-4].sym), ((TypeNode)lapg_m[lapg_head-2].sym), ((IdentNode)lapg_m[lapg_head-1].sym), null, null, lapg_gg ); break;
						case 394:
							#line 980 "syntax"
							lapg_gg.sym = Make.Indexer( ((ListNode)lapg_m[lapg_head-9].sym), ((ModifiersNode)lapg_m[lapg_head-8].sym), ((TypeNode)lapg_m[lapg_head-7].sym), ((IdentNode)lapg_m[lapg_head-6].sym), ((ListNode)lapg_m[lapg_head-4].sym), ((ListNode)lapg_m[lapg_head-1].sym), lapg_gg ); break;  
						case 395:
							#line 984 "syntax"
							 lapg_gg.sym = Make.Ident( "this", lapg_gg ); break; 
						case 396:
							#line 988 "syntax"
							 lapg_gg.sym = Make.Modifiers( (int)Modifiers.New, lapg_gg );break; 
						case 399:
							#line 993 "syntax"
							lapg_gg.sym = Make.List( ((AccessorNode)lapg_m[lapg_head-1].sym), lapg_gg );
							if( ((AccessorNode)lapg_m[lapg_head-0].sym) != null )
								Make.AddList( ((ListNode)lapg_gg.sym), ((AccessorNode)lapg_m[lapg_head-0].sym), lapg_gg );break;
						case 400:
							#line 999 "syntax"
							 lapg_gg.sym = Make.Accessor( ((ListNode)lapg_m[lapg_head-2].sym), ((IdentNode)lapg_m[lapg_head-1].sym), null, lapg_gg ); break; 
						case 403:
							#line 1006 "syntax"
							lapg_gg.sym = Make.Enum( ((ListNode)lapg_m[lapg_head-6].sym), ((ModifiersNode)lapg_m[lapg_head-5].sym), ((IdentNode)lapg_m[lapg_head-3].sym), ((TypeNode)lapg_m[lapg_head-2].sym), ((ListNode)lapg_m[lapg_head-1].sym), lapg_gg ); break;  
						case 404:
							#line 1010 "syntax"
							 lapg_gg.sym = lapg_m[lapg_head-0].sym; Make.Pos( ref lapg_gg ); break; 
						case 407:
							#line 1014 "syntax"
							 lapg_gg.sym = lapg_m[lapg_head-1].sym; Make.Pos( ref lapg_gg ); break; 
						case 408:
							#line 1015 "syntax"
							 lapg_gg.sym = lapg_m[lapg_head-2].sym; Make.Pos( ref lapg_gg ); break; 
						case 409:
							#line 1019 "syntax"
							 lapg_gg.sym = Make.List( ((EnumValueNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 410:
							#line 1020 "syntax"
							 Make.AddList( ((ListNode)lapg_gg.sym), ((EnumValueNode)lapg_m[lapg_head-0].sym), lapg_gg );break; 
						case 411:
							#line 1024 "syntax"
							 lapg_gg.sym = Make.EnumValue( ((ListNode)lapg_m[lapg_head-1].sym), ((IdentNode)lapg_m[lapg_head-0].sym), null, lapg_gg ); break; 
						case 412:
							#line 1025 "syntax"
							 lapg_gg.sym = Make.EnumValue( ((ListNode)lapg_m[lapg_head-3].sym), ((IdentNode)lapg_m[lapg_head-2].sym), ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 413:
							#line 1032 "syntax"
							lapg_gg.sym = Make.Delegate( ((ListNode)lapg_m[lapg_head-8].sym), ((ModifiersNode)lapg_m[lapg_head-7].sym), ((IdentNode)lapg_m[lapg_head-4].sym), ((TypeNode)lapg_m[lapg_head-5].sym), ((ListNode)lapg_m[lapg_head-2].sym), lapg_gg ); break;
						case 414:
							#line 1038 "syntax"
							 lapg_gg.sym = Make.List( ((AttributeSectionNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 415:
							#line 1039 "syntax"
							 Make.AddList( ((ListNode)lapg_gg.sym), ((AttributeSectionNode)lapg_m[lapg_head-0].sym), lapg_gg );break; 
						case 416:
							#line 1043 "syntax"
							 lapg_gg.sym = Make.AttributeSection( ((IdentNode)lapg_m[lapg_head-4].sym), ((ListNode)lapg_m[lapg_head-2].sym), lapg_gg ); break; 
						case 417:
							#line 1044 "syntax"
							 lapg_gg.sym = Make.AttributeSection( ((IdentNode)lapg_m[lapg_head-3].sym), ((ListNode)lapg_m[lapg_head-1].sym), lapg_gg ); break; 
						case 418:
							#line 1045 "syntax"
							 lapg_gg.sym = Make.AttributeSection( null, ((ListNode)lapg_m[lapg_head-2].sym), lapg_gg ); break; 
						case 419:
							#line 1046 "syntax"
							 lapg_gg.sym = Make.AttributeSection( null, ((ListNode)lapg_m[lapg_head-1].sym), lapg_gg ); break; 
						case 420:
							#line 1050 "syntax"
							 lapg_gg.sym = Make.Ident( ((string)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 421:
							#line 1051 "syntax"
							 lapg_gg.sym = Make.Ident( "event", lapg_gg ); break; 
						case 422:
							#line 1052 "syntax"
							 lapg_gg.sym = Make.Ident( "return", lapg_gg ); break; 
						case 423:
							#line 1056 "syntax"
							 lapg_gg.sym = Make.List( ((AttributeNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 424:
							#line 1057 "syntax"
							 Make.AddList( ((ListNode)lapg_gg.sym), ((AttributeNode)lapg_m[lapg_head-0].sym), lapg_gg );break; 
						case 427:
							#line 1061 "syntax"
							 lapg_gg.sym = Make.Attribute( ((IdentNode)lapg_m[lapg_head-1].sym), ((ListNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 431:
							#line 1069 "syntax"
							 lapg_gg.sym = lapg_m[lapg_head-1].sym; Make.Pos( ref lapg_gg ); break; 
						case 432:
							#line 1073 "syntax"
							 lapg_gg.sym = Make.List( ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg ); break; 
						case 433:
							#line 1074 "syntax"
							 Make.AddList( ((ListNode)lapg_gg.sym), ((ExprNode)lapg_m[lapg_head-0].sym), lapg_gg );break; 
					}
					for( int e = lapg_rlen[lapg_i]; e > 0; e-- ) lapg_m[lapg_head--].sym = null;
					lapg_m[++lapg_head] = lapg_gg;
					lapg_m[lapg_head].state = lapg_state_sym( lapg_m[lapg_head-1].state, lapg_gg.lexem );
				} else if( lapg_i == -1 ) {
					lapg_m[++lapg_head] = lapg_n;
					lapg_m[lapg_head].state = lapg_state_sym( lapg_m[lapg_head-1].state, lapg_n.lexem );
					#if DEBUG_syntax
						System.Console.WriteLine( "shift: {0} ({1})", lapg_syms[lapg_n.lexem], new System.String(AE.GetChars(token,0,lapg_size-1)) );
					#endif
				}

			} while( lapg_i >= 0 && lapg_m[lapg_head].state != -1 );

			if( (lapg_i == -2 || lapg_m[lapg_head].state == -1) && lapg_n.lexem != 0 ) {
				break;
			}

		} while( lapg_n.lexem != 0 );

		if( lapg_m[lapg_head].state != 731-1 ) {
			error( System.String.Format( "syntax error before line {0}", lapg_n.pos.line ) );
			return false;
		};
		return true;
	}
  }
}
